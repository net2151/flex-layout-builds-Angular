{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/flexbox/api/flex-offset.ts","../../src/lib/flexbox/api/flex-order.ts","../../src/lib/flexbox/api/layout-align.ts","../../src/lib/flexbox/api/layout-gap.ts","../../src/lib/flexbox/api/base-adapter.ts","../../src/lib/flexbox/api/class.ts","../../src/lib/utils/style-transforms.ts","../../src/lib/flexbox/api/style.ts","../../src/lib/module.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/media-query/match-media.ts","../../src/lib/utils/add-alias.ts","../../src/lib/media-query/media-monitor.ts","../../src/lib/media-query/breakpoints/data/break-points.ts","../../src/lib/media-query/breakpoints/break-points-provider.ts","../../src/lib/media-query/_module.ts","../../src/lib/media-query/media-monitor-provider.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/flexbox/responsive/responsive-activation.ts","../../src/lib/flexbox/api/flex.ts","../../src/lib/flexbox/api/show-hide.ts","../../src/lib/flexbox/api/flex-fill.ts","../../src/lib/media-query/media-change.ts","../../src/lib/media-query/breakpoints/break-point-registry.ts","../../src/lib/utils/object-extend.ts","../../src/lib/media-query/observable-media.ts","../../src/lib/media-query/observable-media-provider.ts","../../src/lib/media-query/breakpoints/data/orientation-break-points.ts","../../src/lib/utils/breakpoint-tools.ts","../../src/lib/flexbox/api/base.ts","../../src/lib/flexbox/api/layout.ts","../../src/lib/flexbox/api/layout-wrap.ts","../../src/lib/utils/basis-validator.ts","../../src/lib/flexbox/api/flex-align.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer,\n  SimpleChanges,\n} from '@angular/core';\n\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive({selector: `\n  [fxFlexOffset],\n  [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md], [fxFlexOffset.lg], [fxFlexOffset.xl],\n  [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md], [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl],\n  [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm], [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`})\nexport class FlexOffsetDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOffset')       set offset(val)     { this._cacheInput('offset', val); }\n  @Input('fxFlexOffset.xs')    set offsetXs(val)   { this._cacheInput('offsetXs', val); }\n  @Input('fxFlexOffset.sm')    set offsetSm(val)   { this._cacheInput('offsetSm', val); };\n  @Input('fxFlexOffset.md')    set offsetMd(val)   { this._cacheInput('offsetMd', val); };\n  @Input('fxFlexOffset.lg')    set offsetLg(val)   { this._cacheInput('offsetLg', val); };\n  @Input('fxFlexOffset.xl')    set offsetXl(val)   { this._cacheInput('offsetXl', val); };\n\n  @Input('fxFlexOffset.lt-sm') set offsetLtSm(val) { this._cacheInput('offsetLtSm', val); };\n  @Input('fxFlexOffset.lt-md') set offsetLtMd(val) { this._cacheInput('offsetLtMd', val); };\n  @Input('fxFlexOffset.lt-lg') set offsetLtLg(val) { this._cacheInput('offsetLtLg', val); };\n  @Input('fxFlexOffset.lt-xl') set offsetLtXl(val) { this._cacheInput('offsetLtXl', val); };\n\n  @Input('fxFlexOffset.gt-xs') set offsetGtXs(val) { this._cacheInput('offsetGtXs', val); };\n  @Input('fxFlexOffset.gt-sm') set offsetGtSm(val) { this._cacheInput('offsetGtSm', val); };\n  @Input('fxFlexOffset.gt-md') set offsetGtMd(val) { this._cacheInput('offsetGtMd', val); };\n  @Input('fxFlexOffset.gt-lg') set offsetGtLg(val) { this._cacheInput('offsetGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,  elRef: ElementRef, renderer: Renderer) {\n    super(monitor, elRef, renderer);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['offset'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('offset', 0 , (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('offset') || 0;\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(offset) {\n    let isPercent = String(offset).indexOf('%') > -1;\n    let isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(offset)) {\n      offset = offset + '%';\n    }\n\n    return {'margin-left': `${offset}`};\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer,\n  SimpleChanges,\n} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n@Directive({selector: `\n  [fxFlexOrder],\n  [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md], [fxFlexOrder.lg], [fxFlexOrder.xl],\n  [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md], [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl],\n  [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm], [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`})\nexport class FlexOrderDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOrder')       set order(val)     { this._cacheInput('order', val); }\n  @Input('fxFlexOrder.xs')    set orderXs(val)   { this._cacheInput('orderXs', val); }\n  @Input('fxFlexOrder.sm')    set orderSm(val)   { this._cacheInput('orderSm', val); };\n  @Input('fxFlexOrder.md')    set orderMd(val)   { this._cacheInput('orderMd', val); };\n  @Input('fxFlexOrder.lg')    set orderLg(val)   { this._cacheInput('orderLg', val); };\n  @Input('fxFlexOrder.xl')    set orderXl(val)   { this._cacheInput('orderXl', val); };\n\n  @Input('fxFlexOrder.gt-xs') set orderGtXs(val) { this._cacheInput('orderGtXs', val); };\n  @Input('fxFlexOrder.gt-sm') set orderGtSm(val) { this._cacheInput('orderGtSm', val); };\n  @Input('fxFlexOrder.gt-md') set orderGtMd(val) { this._cacheInput('orderGtMd', val); };\n  @Input('fxFlexOrder.gt-lg') set orderGtLg(val) { this._cacheInput('orderGtLg', val); };\n\n  @Input('fxFlexOrder.lt-sm') set orderLtSm(val) { this._cacheInput('orderLtSm', val); };\n  @Input('fxFlexOrder.lt-md') set orderLtMd(val) { this._cacheInput('orderLtMd', val); };\n  @Input('fxFlexOrder.lt-lg') set orderLtLg(val) { this._cacheInput('orderLtLg', val); };\n  @Input('fxFlexOrder.lt-xl') set orderLtXl(val) { this._cacheInput('orderLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor, elRef: ElementRef, renderer: Renderer) {\n    super(monitor, elRef, renderer);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['order'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('order', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('order') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n\n  protected _buildCSS(value) {\n    value = parseInt(value, 10);\n    return {order: isNaN(value) ? 0 : value};\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer,\n  SimpleChanges, Self,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {extendObject} from '../../utils/object-extend';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {LayoutDirective} from './layout';\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n@Directive({selector: `\n  [fxLayoutAlign],\n  [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md], [fxLayoutAlign.lg],[fxLayoutAlign.xl],\n  [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md], [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl],\n  [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm], [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`})\nexport class LayoutAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxLayoutAlign')       set align(val)     { this._cacheInput('align', val); }\n  @Input('fxLayoutAlign.xs')    set alignXs(val)   { this._cacheInput('alignXs', val); }\n  @Input('fxLayoutAlign.sm')    set alignSm(val)   { this._cacheInput('alignSm', val); };\n  @Input('fxLayoutAlign.md')    set alignMd(val)   { this._cacheInput('alignMd', val); };\n  @Input('fxLayoutAlign.lg')    set alignLg(val)   { this._cacheInput('alignLg', val); };\n  @Input('fxLayoutAlign.xl')    set alignXl(val)   { this._cacheInput('alignXl', val); };\n\n  @Input('fxLayoutAlign.gt-xs') set alignGtXs(val) { this._cacheInput('alignGtXs', val); };\n  @Input('fxLayoutAlign.gt-sm') set alignGtSm(val) { this._cacheInput('alignGtSm', val); };\n  @Input('fxLayoutAlign.gt-md') set alignGtMd(val) { this._cacheInput('alignGtMd', val); };\n  @Input('fxLayoutAlign.gt-lg') set alignGtLg(val) { this._cacheInput('alignGtLg', val); };\n\n  @Input('fxLayoutAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxLayoutAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxLayoutAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxLayoutAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  /* tslint:enable */\n  constructor(\n      monitor: MediaMonitor,\n      elRef: ElementRef, renderer: Renderer,\n      @Optional() @Self() container: LayoutDirective) {\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('align', 'start stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if ( this._layoutWatcher ) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n    this._allowStretching(value, !this._layout ? 'row' : this._layout);\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n\n    let value = this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n    this._allowStretching(value, this._layout || 'row');\n  }\n\n  protected _buildCSS(align) {\n    let css = {}, [main_axis, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    // Main axis\n    switch (main_axis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (cross_axis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'baseline':\n        css['align-items'] = 'baseline';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : this._layout || 'row',\n      'box-sizing' : 'border-box'\n    });\n  }\n\n\n  /**\n   * Update container element to 'stretch' as needed...\n   * NOTE: this is only done if the crossAxis is explicitly set to 'stretch'\n   */\n  protected _allowStretching(align, layout) {\n    let [, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    if (cross_axis == 'stretch') {\n      // Use `null` values to remove style\n      this._applyStyleToElement({\n        'box-sizing': 'border-box',\n        'max-width': (layout === 'column') ? '100%' : null,\n        'max-height': (layout === 'row') ? '100%' : null\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer,\n  SimpleChanges,\n  Self,\n  AfterContentInit,\n  Optional,\n  OnDestroy,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {LayoutDirective} from './layout';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n@Directive({\n  selector: `\n  [fxLayoutGap],\n  [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md], [fxLayoutGap.lg], [fxLayoutGap.xl],\n  [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md], [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl],\n  [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm], [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`\n})\nexport class LayoutGapDirective extends BaseFxDirective implements AfterContentInit, OnChanges,\n    OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n  protected _observer: MutationObserver;\n\n  /* tslint:disable */\n @Input('fxLayoutGap')       set gap(val) { this._cacheInput('gap', val); }\n @Input('fxLayoutGap.xs')    set gapXs(val) { this._cacheInput('gapXs', val); }\n @Input('fxLayoutGap.sm')    set gapSm(val) { this._cacheInput('gapSm', val); };\n @Input('fxLayoutGap.md')    set gapMd(val) { this._cacheInput('gapMd', val); };\n @Input('fxLayoutGap.lg')    set gapLg(val) { this._cacheInput('gapLg', val); };\n @Input('fxLayoutGap.xl')    set gapXl(val) { this._cacheInput('gapXl', val); };\n\n @Input('fxLayoutGap.gt-xs') set gapGtXs(val) { this._cacheInput('gapGtXs', val); };\n @Input('fxLayoutGap.gt-sm') set gapGtSm(val) { this._cacheInput('gapGtSm', val); };\n @Input('fxLayoutGap.gt-md') set gapGtMd(val) { this._cacheInput('gapGtMd', val); };\n @Input('fxLayoutGap.gt-lg') set gapGtLg(val) { this._cacheInput('gapGtLg', val); };\n\n @Input('fxLayoutGap.lt-sm') set gapLtSm(val) { this._cacheInput('gapLtSm', val); };\n @Input('fxLayoutGap.lt-md') set gapLtMd(val) { this._cacheInput('gapLtMd', val); };\n @Input('fxLayoutGap.lt-lg') set gapLtLg(val) { this._cacheInput('gapLtLg', val); };\n @Input('fxLayoutGap.lt-xl') set gapLtXl(val) { this._cacheInput('gapLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer,\n              @Optional() @Self() container: LayoutDirective) {\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['gap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngAfterContentInit() {\n    this._watchContentChanges();\n    this._listenForMediaQueryChanges('gap', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Watch for child nodes to be added... and apply the layout gap styles to each.\n   * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n   */\n  protected _watchContentChanges() {\n    let onMutationCallback = (mutations) => {\n      let validatedChanges = (it: MutationRecord) => {\n        return (it.addedNodes && it.addedNodes.length) ||\n            (it.removedNodes && it.removedNodes.length);\n      };\n\n      // update gap styles only for child 'added' or 'removed' events\n      if (mutations.filter(validatedChanges).length) {\n        this._updateWithValue();\n      }\n    };\n\n    if (typeof MutationObserver !== 'undefined') {\n      this._observer = new MutationObserver(onMutationCallback);\n      this._observer.observe(this._elementRef.nativeElement, {childList: true});\n    }\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n    this._updateWithValue();\n  }\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('gap') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Gather all non-hidden Element nodes\n    let items = this.childrenNodes\n        .filter(el => el.nodeType === 1 && this._getDisplayStyle(el) != 'none');\n    let numItems = items.length;\n\n    if (numItems > 1) {\n      let lastItem = items[numItems - 1];\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      items = items.filter((_, j) => j < numItems - 1);\n      this._applyStyleToElements(this._buildCSS(value), items);\n\n      // Clear all gaps for all visible elements\n      this._applyStyleToElements(this._buildCSS(), [lastItem]);\n    }\n  }\n\n  /**\n   * Prepare margin CSS, remove any previous explicitly\n   * assigned margin assignments\n   */\n  private _buildCSS(value: any = null) {\n    let key, margins = {\n      'margin-left': null,\n      'margin-right': null,\n      'margin-top': null,\n      'margin-bottom': null\n    };\n\n    switch (this._layout) {\n      case 'column':\n      case 'column-reverse':\n        key = 'margin-bottom';\n        break;\n      case 'row' :\n      case 'row-reverse':\n      default :\n        key = 'margin-right';\n        break;\n    }\n    margins[key] = value;\n\n    return margins;\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, Renderer} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {ResponsiveActivation} from './../responsive/responsive-activation';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n\n/**\n * Adapter to the BaseFxDirective abstract class so it can be used via composition.\n * @see BaseFxDirective\n */\nexport class BaseFxDirectiveAdapter extends BaseFxDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseFxDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation;\n  }\n\n  /**\n   * BaseFxDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _renderer: Renderer) {\n    super(_mediaMonitor, _elementRef, _renderer);\n  }\n\n\n  /**\n   * @see BaseFxDirective._queryInput\n   */\n  queryInput(key) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error('Invalid class value provided. Did you want to cache the raw value?');\n    }\n  }\n\n  /**\n   * @see BaseFxDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    this._inputMap[key] = source;\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source.join(' ');\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes = [];\n    for (let prop in source) {\n      if (!!source[prop]) {\n        classes.push(prop);\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  DoCheck,\n  OnDestroy,\n  Renderer,\n  IterableDiffers,\n  KeyValueDiffers, SimpleChanges, OnChanges\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\n\nimport {BaseFxDirectiveAdapter} from './base-adapter';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/** NgClass allowed inputs **/\nexport type NgClassType = string | string[] | Set<string> | {[klass: string]: any};\n\n/**\n * Explicitly export the NgStyle super class type for ngc/AOT compiles\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nexport const _ClassDirectiveBaseClass = NgClass;\n\n/**\n * Directive to add responsive support for ngClass.\n */\n@Directive({\n  selector: `\n    [class], [class.xs], [class.sm], [class.md], [class.lg], [class.xl],\n    [class.lt-sm], [class.lt-md], [class.lt-lg], [class.lt-xl],\n    [class.gt-xs], [class.gt-sm], [class.gt-md], [class.gt-lg],\n\n    [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n    [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n    [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n  `\n})\nexport class ClassDirective extends _ClassDirectiveBaseClass\n    implements DoCheck, OnChanges, OnDestroy {\n\n  /**\n   * Intercept ngClass assignments so we cache the default classes\n   * which are merged with activated styles or used as fallbacks.\n   * Note: Base ngClass values are applied during ngDoCheck()\n   */\n  @Input('ngClass')\n  set ngClassBase(val: NgClassType) {\n    this._ngClassAdapter.cacheInput('ngClass', val, true);\n    this.ngClass = val;\n  }\n\n  /* tslint:disable */\n  @Input('ngClass.xs')    set ngClassXs(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassXs',   val, true); }\n  @Input('ngClass.sm')    set ngClassSm(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassSm',   val, true); }\n  @Input('ngClass.md')    set ngClassMd(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassMd',   val, true); }\n  @Input('ngClass.lg')    set ngClassLg(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassLg',   val, true); }\n  @Input('ngClass.xl')    set ngClassXl(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassXl',   val, true); }\n\n  @Input('ngClass.lt-sm') set ngClassLtSm(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtSm', val, true); }\n  @Input('ngClass.lt-md') set ngClassLtMd(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtMd', val, true); }\n  @Input('ngClass.lt-lg') set ngClassLtLg(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtLg', val, true); }\n  @Input('ngClass.lt-xl') set ngClassLtXl(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtXl', val, true); }\n\n  @Input('ngClass.gt-xs') set ngClassGtXs(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtXs', val, true); }\n  @Input('ngClass.gt-sm') set ngClassGtSm(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtSm', val, true); }\n  @Input('ngClass.gt-md') set ngClassGtMd(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtMd', val, true); }\n  @Input('ngClass.gt-lg') set ngClassGtLg(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtLg', val, true); }\n\n  /** Deprecated selectors */\n\n  /**\n   * Base class selector values get applied immediately and are considered destructive overwrites to\n   * all previous class assignments\n   *\n   * Delegate to NgClass:klass setter and cache value for base fallback from responsive APIs.\n   */\n  @Input('class')\n  set classBase(val: string) {\n    this._classAdapter.cacheInput('_rawClass', val, true);\n    this.klass = val;\n  }\n\n  @Input('class.xs')      set classXs(val:   NgClassType) { this._classAdapter.cacheInput('classXs',   val, true); }\n  @Input('class.sm')      set classSm(val:   NgClassType) { this._classAdapter.cacheInput('classSm',   val, true); }\n  @Input('class.md')      set classMd(val:   NgClassType) { this._classAdapter.cacheInput('classMd',   val, true); }\n  @Input('class.lg')      set classLg(val:   NgClassType) { this._classAdapter.cacheInput('classLg',   val, true); }\n  @Input('class.xl')      set classXl(val:   NgClassType) { this._classAdapter.cacheInput('classXl',   val, true); }\n\n  @Input('class.lt-sm')   set classLtSm(val: NgClassType) { this._classAdapter.cacheInput('classLtSm', val, true); }\n  @Input('class.lt-md')   set classLtMd(val: NgClassType) { this._classAdapter.cacheInput('classLtMd', val, true); }\n  @Input('class.lt-lg')   set classLtLg(val: NgClassType) { this._classAdapter.cacheInput('classLtLg', val, true); }\n  @Input('class.lt-xl')   set classLtXl(val: NgClassType) { this._classAdapter.cacheInput('classLtXl', val, true); }\n\n  @Input('class.gt-xs')   set classGtXs(val: NgClassType) { this._classAdapter.cacheInput('classGtXs', val, true); }\n  @Input('class.gt-sm')   set classGtSm(val: NgClassType) { this._classAdapter.cacheInput('classGtSm', val, true); }\n  @Input('class.gt-md')   set classGtMd(val: NgClassType) { this._classAdapter.cacheInput('classGtMd', val, true); }\n  @Input('class.gt-lg')   set classGtLg(val: NgClassType) { this._classAdapter.cacheInput('classGtLg', val, true); }\n\n  /**\n   * Initial value of the `class` attribute; used as\n   * fallback and will be merged with nay `ngClass` values\n   */\n  get initialClasses() : string {\n    return  this._classAdapter.queryInput('_rawClass') || \"\";\n  }\n\n  /* tslint:enable */\n  constructor(protected monitor: MediaMonitor,\n              _iterableDiffers: IterableDiffers, _keyValueDiffers: KeyValueDiffers,\n              _ngEl: ElementRef, _renderer: Renderer) {\n\n    super(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer);\n\n    this._classAdapter = new BaseFxDirectiveAdapter('class', monitor, _ngEl, _renderer);\n    this._ngClassAdapter = new BaseFxDirectiveAdapter('ngClass', monitor, _ngEl, _renderer);\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._classAdapter.activeKey in changes) {\n      this._updateKlass();\n    }\n    if (this._ngClassAdapter.activeKey in changes) {\n      this._updateNgClass();\n    }\n  }\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    if (!this._classAdapter.hasMediaQueryListener) {\n      this._configureMQListener();\n    }\n    super.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._classAdapter.ngOnDestroy();\n    this._ngClassAdapter.ngOnDestroy();\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n   * Build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  protected _configureMQListener() {\n    this._classAdapter.listenForMediaQueryChanges('class', '', (changes: MediaChange) => {\n      this._updateKlass(changes.value);\n    });\n\n    this._ngClassAdapter.listenForMediaQueryChanges('ngClass', '', (changes: MediaChange) => {\n      this._updateNgClass(changes.value);\n      super.ngDoCheck();    // trigger NgClass::_applyIterableChanges()\n    });\n  }\n\n  /**\n   *  Apply updates directly to the NgClass:klass property\n   *  ::ngDoCheck() is not needed\n   */\n  protected _updateKlass(value?: NgClassType) {\n    let klass = value || this._classAdapter.queryInput('class') || '';\n    if (this._classAdapter.mqActivation) {\n      klass = this._classAdapter.mqActivation.activatedInput;\n    }\n    this.klass = klass || this.initialClasses;\n  }\n\n  /**\n   *  Identify the activated input value and update the ngClass iterables...\n   *  needs ngDoCheck() to actually apply the values to the element\n   */\n  protected _updateNgClass(value?: NgClassType) {\n    if (this._ngClassAdapter.mqActivation) {\n      value = this._ngClassAdapter.mqActivation.activatedInput;\n    }\n    this.ngClass = value || '';     // Delegate subsequent activity to the NgClass logic\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the ClassDirective\n   */\n  protected _classAdapter: BaseFxDirectiveAdapter;   // used for `class.xxx` selectores\n  protected _ngClassAdapter: BaseFxDirectiveAdapter;   // used for `ngClass.xxx` selectors\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/**\n * NgStyle allowed inputs\n */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\n/**\n * Transform Operators for @angular/flex-layout NgStyle Directive\n */\nexport const ngStyleUtils = {\n  getType,\n  buildRawList,\n  buildMapFromList,\n  buildMapFromSet\n};\n\nfunction getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set ) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/**\n * Convert array of key:value strings to a iterable map object\n */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {});\n}\n\n/**\n * Convert Set<string> or raw Object to an iterable NgStyleMap\n */\nfunction buildMapFromSet(source: any, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list = new Array<string>();\n  if (getType(source) == 'set') {\n    source.forEach(entry => list.push(entry));\n  } else {                                // simple hashmap\n    Object.keys(source).forEach(key => {\n      list.push(`${key}:${source[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/**\n * Convert 'key:value' -> [key, value]\n */\nfunction stringToKeyValue(it: string): NgStyleKeyValue {\n  let [key, val] = it.split(':');\n  return val ? new NgStyleKeyValue(key, val) : null;\n}\n\n/**\n * Convert [ [key,value] ] -> { key : value }\n */\nfunction keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  DoCheck,\n  Renderer,\n  KeyValueDiffers,\n  SimpleChanges, OnChanges,\n  SecurityContext\n} from '@angular/core';\nimport {NgStyle} from '@angular/common';\n\nimport {BaseFxDirectiveAdapter} from './base-adapter';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  ngStyleUtils as _\n} from '../../utils/style-transforms';\n\n/**\n * Explicitly export the NgStyle super class type for ngc/AOT compiles\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nexport const _StyleDirectiveBaseClass = NgStyle;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({\n  selector: `\n    [style.xs], [style.sm], [style.md], [style.lg], [style.xl],\n    [style.lt-sm], [style.lt-md], [style.lt-lg], [style.lt-xl],\n    [style.gt-xs], [style.gt-sm], [style.gt-md], [style.gt-lg],\n    [ngStyle],\n    [ngStyle.xs], [ngStyle.sm], [ngStyle.lg], [ngStyle.xl],\n    [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n    [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n  `\n})\nexport class StyleDirective extends _StyleDirectiveBaseClass\n    implements DoCheck, OnChanges, OnDestroy {\n\n  /**\n   * Intercept ngStyle assignments so we cache the default styles\n   * which are merged with activated styles or used as fallbacks.\n   */\n  @Input('ngStyle')\n  set styleBase(val: NgStyleType) {\n    this._base.cacheInput('style', val, true);\n    this.ngStyle = this._base.inputMap['style'];\n  }\n\n  /* tslint:disable */\n  @Input('ngStyle.xs')    set ngStyleXs(val: NgStyleType) { this._base.cacheInput('styleXs', val, true); }\n  @Input('ngStyle.sm')    set ngStyleSm(val: NgStyleType) {  this._base.cacheInput('styleSm', val, true); };\n  @Input('ngStyle.md')    set ngStyleMd(val: NgStyleType) { this._base.cacheInput('styleMd', val, true); };\n  @Input('ngStyle.lg')    set ngStyleLg(val: NgStyleType) { this._base.cacheInput('styleLg', val, true);};\n  @Input('ngStyle.xl')    set ngStyleXl(val: NgStyleType) { this._base.cacheInput('styleXl', val, true); };\n\n  @Input('ngStyle.lt-sm') set ngStyleLtSm(val: NgStyleType) { this._base.cacheInput('styleLtSm', val, true); };\n  @Input('ngStyle.lt-md') set ngStyleLtMd(val: NgStyleType) { this._base.cacheInput('styleLtMd', val, true); };\n  @Input('ngStyle.lt-lg') set ngStyleLtLg(val: NgStyleType) { this._base.cacheInput('styleLtLg', val, true); };\n  @Input('ngStyle.lt-xl') set ngStyleLtXl(val: NgStyleType) { this._base.cacheInput('styleLtXl', val, true); };\n\n  @Input('ngStyle.gt-xs') set ngStyleGtXs(val: NgStyleType) { this._base.cacheInput('styleGtXs', val, true); };\n  @Input('ngStyle.gt-sm') set ngStyleGtSm(val: NgStyleType) { this._base.cacheInput('styleGtSm', val, true);} ;\n  @Input('ngStyle.gt-md') set ngStyleGtMd(val: NgStyleType) { this._base.cacheInput('styleGtMd', val, true);};\n  @Input('ngStyle.gt-lg') set ngStyleGtLg(val: NgStyleType) { this._base.cacheInput('styleGtLg', val, true); };\n\n  /** Deprecated selectors */\n  @Input('style.xs')      set styleXs(val: NgStyleType) { this._base.cacheInput('styleXs', val, true); }\n  @Input('style.sm')      set styleSm(val: NgStyleType) { this._base.cacheInput('styleSm', val, true); };\n  @Input('style.md')      set styleMd(val: NgStyleType) { this._base.cacheInput('styleMd', val, true);};\n  @Input('style.lg')      set styleLg(val: NgStyleType) { this._base.cacheInput('styleLg', val, true); };\n  @Input('style.xl')      set styleXl(val: NgStyleType) { this._base.cacheInput('styleXl', val, true); };\n\n  @Input('style.lt-sm')   set styleLtSm(val: NgStyleType) { this._base.cacheInput('styleLtSm', val, true); };\n  @Input('style.lt-md')   set styleLtMd(val: NgStyleType) { this._base.cacheInput('styleLtMd', val, true); };\n  @Input('style.lt-lg')   set styleLtLg(val: NgStyleType) { this._base.cacheInput('styleLtLg', val, true);};\n  @Input('style.lt-xl')   set styleLtXl(val: NgStyleType) { this._base.cacheInput('styleLtXl', val, true); };\n\n  @Input('style.gt-xs')   set styleGtXs(val: NgStyleType) { this._base.cacheInput('styleGtXs', val, true); };\n  @Input('style.gt-sm')   set styleGtSm(val: NgStyleType) { this._base.cacheInput('styleGtSm', val, true); };\n  @Input('style.gt-md')   set styleGtMd(val: NgStyleType) { this._base.cacheInput('styleGtMd', val, true);};\n  @Input('style.gt-lg')   set styleGtLg(val: NgStyleType) { this._base.cacheInput('styleGtLg', val, true); };\n\n  /* tslint:enable */\n  /**\n   *  Constructor for the ngStyle subclass; which adds selectors and\n   *  a MediaQuery Activation Adapter\n   */\n  constructor(private monitor: MediaMonitor,\n              protected _sanitizer: DomSanitizer,\n              _differs: KeyValueDiffers,\n              _ngEl: ElementRef,\n              _renderer: Renderer) {\n\n    // TODO: this should use Renderer when the NgStyle signature is switched over to it.\n    super(_differs, _ngEl, _renderer);\n\n    // Build adapter, `cacheInput()` interceptor, and get current inline style if any\n    this._buildAdapter(this.monitor, _ngEl, _renderer);\n    this._base.cacheInput('style', _ngEl.nativeElement.getAttribute('style'), true);\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._updateStyle();\n    }\n  }\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    if (!this._base.hasMediaQueryListener) {\n      this._configureMQListener();\n    }\n    super.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n     * Build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    protected _configureMQListener() {\n      this._base.listenForMediaQueryChanges('style', '', (changes: MediaChange) => {\n        this._updateStyle(changes.value);\n\n        // trigger NgClass::_applyIterableChanges()\n        super.ngDoCheck();\n      });\n    }\n\n  // ************************************************************************\n  // Private Internal Methods\n  // ************************************************************************\n\n  /**\n   * Use the currently activated input property and assign to\n   * `ngStyle` which does the style injections...\n   */\n  protected _updateStyle(value?: NgStyleType) {\n    let style = value || this._base.queryInput('style') || '';\n    if (this._base.mqActivation) {\n      style = this._base.mqActivation.activatedInput;\n    }\n\n    // Delegate subsequent activity to the NgStyle logic\n    this.ngStyle = style;\n  }\n\n\n  /**\n   * Build MediaQuery Activation Adapter\n   * This adapter manages listening to mediaQuery change events and identifying\n   * which property value should be used for the style update\n   */\n  protected _buildAdapter(monitor: MediaMonitor, _ngEl: ElementRef, _renderer: Renderer) {\n    this._base = new BaseFxDirectiveAdapter('style', monitor, _ngEl, _renderer);\n    this._buildCacheInterceptor();\n  }\n\n  /**\n   * Build intercept to convert raw strings to ngStyleMap\n   */\n  protected _buildCacheInterceptor() {\n    let cacheInput = this._base.cacheInput.bind(this._base);\n    this._base.cacheInput = (key?: string, source?: any, cacheRaw = false, merge = true) => {\n      let styles = this._buildStyleMap(source);\n      if (merge) {\n        styles = extendObject({}, this._base.inputMap['style'], styles);\n      }\n      cacheInput(key, styles, cacheRaw);\n    };\n  }\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected _buildStyleMap(styles: NgStyleType) {\n    let sanitizer: NgStyleSanitizer = (val: any) => {\n      // Always safe-guard (aka sanitize) style property values\n      return this._sanitizer.sanitize(SecurityContext.STYLE, val);\n    };\n    if (styles) {\n      switch ( _.getType(styles) ) {\n        case 'string':  return _.buildMapFromList(_.buildRawList(styles), sanitizer);\n        case 'array' :  return _.buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return _.buildMapFromSet(styles, sanitizer);\n        default      :  return _.buildMapFromSet(styles, sanitizer);\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the StyleDirective\n   */\n  protected _base: BaseFxDirectiveAdapter;\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {MediaQueriesModule} from './media-query/_module';\n\nimport {BreakPoint} from './media-query/breakpoints/break-point';\nimport {\n  BreakPointProviderOptions,\n  DEFAULT_BREAKPOINTS_PROVIDER,\n  CUSTOM_BREAKPOINTS_PROVIDER_FACTORY\n} from './media-query/breakpoints/break-points-provider';\nimport {MEDIA_MONITOR_PROVIDER} from './media-query/media-monitor-provider';\nimport {OBSERVABLE_MEDIA_PROVIDER} from './media-query/observable-media-provider';\n\nimport {FlexDirective} from './flexbox/api/flex';\nimport {LayoutDirective} from './flexbox/api/layout';\nimport {ShowHideDirective} from './flexbox/api/show-hide';\nimport {FlexAlignDirective} from './flexbox/api/flex-align';\nimport {FlexFillDirective} from './flexbox/api/flex-fill';\nimport {FlexOffsetDirective} from './flexbox/api/flex-offset';\nimport {FlexOrderDirective} from './flexbox/api/flex-order';\nimport {LayoutAlignDirective} from './flexbox/api/layout-align';\nimport {LayoutWrapDirective} from './flexbox/api/layout-wrap';\nimport {LayoutGapDirective} from './flexbox/api/layout-gap';\nimport {ClassDirective} from './flexbox/api/class';\nimport {StyleDirective} from './flexbox/api/style';\n\n/**\n * Since the equivalent results are easily achieved with a css class attached to each\n * layout child, these have been deprecated and removed from the API.\n *\n *  import {LayoutPaddingDirective} from './flexbox/api/layout-padding';\n *  import {LayoutMarginDirective} from './flexbox/api/layout-margin';\n */\n\nconst ALL_DIRECTIVES = [\n  LayoutDirective,\n  LayoutWrapDirective,\n  LayoutGapDirective,\n  LayoutAlignDirective,\n  FlexDirective,\n  FlexOrderDirective,\n  FlexOffsetDirective,\n  FlexFillDirective,\n  FlexAlignDirective,\n  ShowHideDirective,\n  ClassDirective,\n  StyleDirective\n];\n\n/**\n *\n */\n@NgModule({\n  imports: [MediaQueriesModule],\n  exports: [MediaQueriesModule, ...ALL_DIRECTIVES],\n  declarations: [...ALL_DIRECTIVES],\n  providers: [\n    MEDIA_MONITOR_PROVIDER,\n    DEFAULT_BREAKPOINTS_PROVIDER,   // Extend defaults with internal custom breakpoints\n    OBSERVABLE_MEDIA_PROVIDER\n  ]\n})\nexport class FlexLayoutModule {\n  /**\n   * External uses can easily add custom breakpoints AND include internal orientations\n   * breakpoints; which are not available by default.\n   *\n   * !! Selector aliases are not auto-configured. Developers must subclass\n   * the API directives to support extra selectors for the orientations breakpoints !!\n   */\n  static provideBreakPoints(breakpoints: BreakPoint[],\n                            options ?: BreakPointProviderOptions): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: [\n        CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(breakpoints, options || {orientations: false})\n      ]\n    };\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {ɵgetDOM as getDom, DOCUMENT} from '@angular/platform-browser';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operator/filter';\n\nimport {MediaChange} from './media-change';\n\n/**\n * EventHandler callback with the mediaQuery [range] activates or deactivates\n */\nexport interface MediaQueryListListener {\n  // Function with Window's MediaQueryList argument\n  (mql: MediaQueryList): void;\n}\n\n/**\n * EventDispatcher for a specific mediaQuery [range]\n */\nexport interface MediaQueryList {\n  readonly matches: boolean;\n  readonly media: string;\n\n  addListener(listener: MediaQueryListListener): void;\n\n  removeListener(listener: MediaQueryListListener): void;\n}\n\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable()\nexport class MatchMedia {\n  protected _registry: Map<string, MediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone, @Inject(DOCUMENT) protected _document: any) {\n    this._registry = new Map<string, MediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    if (this._registry.has(mediaQuery)) {\n      let mql = this._registry.get(mediaQuery);\n      return mql.matches;\n    }\n    return false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    this.registerQuery(mediaQuery);\n\n    return filter.call(this._observable$, (change: MediaChange) => {\n      return mediaQuery ? (change.mediaQuery === mediaQuery) : true;\n    });\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    let list = normalizeQuery(mediaQuery);\n\n    if (list.length > 0) {\n      prepareQueryCSS(list, this._document);\n\n      list.forEach(query => {\n        let mql = this._registry.get(query);\n        let onMQLEvent = (e: MediaQueryList) => {\n          this._zone.run(() => {\n            let change = new MediaChange(e.matches, query);\n            this._source.next(change);\n          });\n        };\n\n        if (!mql) {\n          mql = this._buildMQL(query);\n          mql.addListener(onMQLEvent);\n          this._registry.set(query, mql);\n        }\n\n        if (mql.matches) {\n          onMQLEvent(mql);  // Announce activate range for initial subscribers\n        }\n      });\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    let canListen = isBrowser() && !!(<any>window).matchMedia('all').addListener;\n\n    return canListen ? (<any>window).matchMedia(query) : <MediaQueryList>{\n      matches: query === 'all' || query === '',\n      media: query,\n      addListener: () => {\n      },\n      removeListener: () => {\n      }\n    };\n  }\n}\n\n/**\n * Determine if SSR or Browser rendering.\n */\nexport function isBrowser() {\n  return getDom().supportsDOMEvents();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param query string The mediaQuery used to create a faux CSS selector\n *\n */\nfunction prepareQueryCSS(mediaQueries: string[], _document: any) {\n  let list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    let query = list.join(', ');\n\n    try {\n      let styleEl = getDom().createElement('style');\n\n      getDom().setAttribute(styleEl, 'type', 'text/css');\n      if (!styleEl['styleSheet']) {\n        let cssText = `/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}`;\n        getDom().appendChild(styleEl, getDom().createTextNode(cssText));\n      }\n\n      getDom().appendChild(_document.head, styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n/**\n * Always convert to unique list of queries; for iteration in ::registerQuery()\n */\nfunction normalizeQuery(mediaQuery: string | string[]): string[] {\n  return (typeof mediaQuery === 'undefined') ? [] :\n      (typeof mediaQuery === 'string') ? [mediaQuery] : unique(mediaQuery as string[]);\n}\n\n/**\n * Filter duplicate mediaQueries in the list\n */\nfunction unique(list: string[]): string[] {\n  let seen = {};\n  return list.filter(item => {\n    return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n  });\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from '../media-query/media-change';\nimport {BreakPoint} from '../media-query/breakpoints/break-point';\nimport {extendObject} from './object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint) {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {BreakPoint} from './breakpoints/break-point';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\nimport {MatchMedia} from './match-media';\nimport {MediaChange} from './media-change';\n\nimport {mergeAlias} from '../utils/add-alias';\n\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operator/filter';\nimport {map} from 'rxjs/operator/map';\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n */\n@Injectable()\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    let items: BreakPoint[] = this._breakpoints.overlappings.reverse();\n    return items.filter((bp: BreakPoint) => {\n      return this._matchMedia.isActive(bp.mediaQuery);\n    });\n  }\n\n  get active(): BreakPoint {\n    let found = null, items = this.breakpoints.reverse();\n    items.forEach(bp => {\n      if (bp.alias !== '') {\n        if (!found && this._matchMedia.isActive(bp.mediaQuery)) {\n          found = bp;\n        }\n      }\n    });\n\n    let first = this.breakpoints[0];\n    return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias?: string): Observable<MediaChange> {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    let hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    let media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return filter.call(map.call(media$, change => mergeAlias(change, bp)), hasAlias);\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    let queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)'\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)'\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)'\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)'\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)'\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)'\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)'\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)'\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)'\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1920px)'\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)'\n  }\n];\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  InjectionToken,    // tslint:disable-line:no-unused-variable\n} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {DEFAULT_BREAKPOINTS} from './data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from './data/orientation-break-points';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {mergeByAlias, validateSuffixes} from '../../utils/breakpoint-tools';\n\n\n/**\n * Options to identify which breakpoint types to include as part of\n * a BreakPoint provider\n */\nexport interface BreakPointProviderOptions {\n  /**\n   * include pre-configured, internal default breakpoints.\n   * @default 'true'\n   */\n  defaults ?: boolean;\n  /**\n   * include pre-configured, internal orientations breakpoints.\n   * @default 'false'\n   */\n  orientations ?: boolean;\n}\n\n/**\n * Add new custom items to the default list or override existing default with custom overrides\n */\nexport function buildMergedBreakPoints(_custom?: BreakPoint[],\n                                       options?: BreakPointProviderOptions) {\n  options = extendObject({ }, {\n        defaults: true,       // exclude pre-configured, internal default breakpoints\n        orientation: false      // exclude pre-configured, internal orientations breakpoints\n  }, options || { });\n\n  return () => {\n    // Order so the defaults are loaded last; so ObservableMedia will report these last!\n    let defaults = options.orientations ? ORIENTATION_BREAKPOINTS.concat(DEFAULT_BREAKPOINTS) :\n        DEFAULT_BREAKPOINTS;\n\n    return options.defaults ? mergeByAlias(defaults, _custom || []) : mergeByAlias(_custom);\n  };\n}\n\n/**\n *  Ensure that only a single global BreakPoint list is instantiated...\n */\nexport function DEFAULT_BREAKPOINTS_PROVIDER_FACTORY() {\n  return validateSuffixes(DEFAULT_BREAKPOINTS);\n}\n/**\n * Default Provider that does not support external customization nor provide\n * the extra extended breakpoints:   \"handset\", \"tablet\", and \"web\"\n *\n *  NOTE: !! breakpoints are considered to have unique 'alias' properties,\n *        custom breakpoints matching existing breakpoints will override the properties\n *        of the existing (and not be added as an extra breakpoint entry).\n *        [xs, gt-xs, sm, gt-sm, md, gt-md, lg, gt-lg, xl]\n */\nexport const DEFAULT_BREAKPOINTS_PROVIDER = { // tslint:disable-line:variable-name\n  provide: BREAKPOINTS,\n  useFactory: DEFAULT_BREAKPOINTS_PROVIDER_FACTORY\n};\n/**\n * Use with FlexLayoutModule.CUSTOM_BREAKPOINTS_PROVIDER_FACTORY!\n */\nexport function CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(_custom?: BreakPoint[],\n                                                    options?: BreakPointProviderOptions) {\n  return {\n    provide: BREAKPOINTS,\n    useFactory: buildMergedBreakPoints(_custom, options)\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {MatchMedia} from './match-media';\nimport {MediaMonitor} from './media-monitor';\nimport {OBSERVABLE_MEDIA_PROVIDER} from './observable-media-provider';\nimport {DEFAULT_BREAKPOINTS_PROVIDER} from './breakpoints/break-points-provider';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [\n    DEFAULT_BREAKPOINTS_PROVIDER,  // Supports developer overrides of list of known breakpoints\n    BreakPointRegistry,      // Registry of known/used BreakPoint(s)\n    MatchMedia,              // Low-level service to publish observables w/ window.matchMedia()\n    MediaMonitor,            // MediaQuery monitor service observes all known breakpoints\n    OBSERVABLE_MEDIA_PROVIDER  // easy subscription injectable `media$` matchMedia observable\n  ]\n})\nexport class MediaQueriesModule {\n}\n\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor';\nimport {MatchMedia} from './match-media';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\n/**\n * Ensure a single global service provider\n */\nexport function MEDIA_MONITOR_PROVIDER_FACTORY(parentMonitor: MediaMonitor,\n                                               breakpoints: BreakPointRegistry,\n                                               matchMedia: MatchMedia) {\n  return parentMonitor || new MediaMonitor(breakpoints, matchMedia);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const MEDIA_MONITOR_PROVIDER = {\n  provide : MediaMonitor,\n  deps : [\n    [ new Optional(), new SkipSelf(), MediaMonitor ],\n    BreakPointRegistry,\n    MatchMedia,\n  ],\n  useFactory : MEDIA_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap] = validateValue(value);\n  return  buildCSS(direction, wrap);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nfunction validateValue(value: string) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap] = value.split(' ');\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n  return [direction, validateWrapValue(wrap)];\n}\n\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null) {\n  return {\n    'display': 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs/Subscription';\nimport {map} from 'rxjs/operator/map';\n\nimport {MediaChange, MediaQuerySubscriber} from '../../media-query/media-change';\nimport {BreakPoint} from '../../media-query/breakpoints/break-point';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {extendObject} from '../../utils/object-extend';\n\nexport declare type SubscriptionList = Subscription[ ];\n\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nexport class ResponsiveActivation {\n  private _subscribers: SubscriptionList = [];\n  private _activatedInputKey: string;\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n    this._subscribers = this._configureChangeObservers();\n  }\n\n  /**\n   * Accessor to the DI'ed directive property\n   * Each directive instance has a reference to the MediaMonitor which is\n   * used HERE to subscribe to mediaQuery change notifications.\n   */\n  get mediaMonitor(): MediaMonitor {\n    return this._mediaMonitor;\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    let key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  public hasKeyValue(key) {\n    let value = this._options.inputKeys[key];\n    return typeof value !== 'undefined';\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach((link: Subscription) => {\n      link.unsubscribe();\n    });\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): SubscriptionList {\n    let subscriptions = [];\n\n    this._buildRegistryMap().forEach((bp: BreakPointX) => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        let buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n            map.call(this.mediaMonitor.observe(bp.alias), buildChanges)\n                .subscribe(change => {\n                  this._onMonitorEvents(change);\n                })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this.mediaMonitor.breakpoints\n        .map(bp => {\n          return <BreakPointX> extendObject({}, bp, {\n            baseKey: this._options.baseKey,             // e.g. layout, hide, self-align, flex-wrap\n            key: this._options.baseKey + bp.suffix  // e.g.  layoutGtSm, layoutMd, layoutGtLg\n          });\n        })\n        .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property == this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                     // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey == currentKey) ? null : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey) {\n    let items: BreakPoint[] = this.mediaMonitor.activeOverlaps;\n    let isMissingKey = (key) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      items.some(bp => {\n        let key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {extendObject} from '../../utils/object-extend';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {LayoutDirective} from './layout';\nimport {LayoutWrapDirective} from './layout-wrap';\nimport {validateBasis} from '../../utils/basis-validator';\n\n\n/** Built-in aliases for different flex-basis values. */\nexport type FlexBasisAlias = 'grow' | 'initial' | 'auto' | 'none' | 'nogrow' | 'noshrink';\n\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive({selector: `\n  [fxFlex],\n  [fxFlex.xs], [fxFlex.sm], [fxFlex.md], [fxFlex.lg], [fxFlex.xl],\n  [fxFlex.lt-sm], [fxFlex.lt-md], [fxFlex.lt-lg], [fxFlex.lt-xl],\n  [fxFlex.gt-xs], [fxFlex.gt-sm], [fxFlex.gt-md], [fxFlex.gt-lg],\n`\n})\nexport class FlexDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /** The flex-direction of this element's flex container. Defaults to 'row'. */\n  protected _layout = 'row';\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShrink')     set shrink(val)    { this._cacheInput('shrink', val); };\n  @Input('fxGrow')       set grow(val)      { this._cacheInput('grow', val); };\n\n  @Input('fxFlex')       set flex(val)      { this._cacheInput('flex', val); };\n  @Input('fxFlex.xs')    set flexXs(val)    { this._cacheInput('flexXs', val); };\n  @Input('fxFlex.sm')    set flexSm(val)    { this._cacheInput('flexSm', val); };\n  @Input('fxFlex.md')    set flexMd(val)    { this._cacheInput('flexMd', val); };\n  @Input('fxFlex.lg')    set flexLg(val)    { this._cacheInput('flexLg', val); };\n  @Input('fxFlex.xl')    set flexXl(val)    { this._cacheInput('flexXl', val); };\n\n  @Input('fxFlex.gt-xs') set flexGtXs(val)  { this._cacheInput('flexGtXs', val); };\n  @Input('fxFlex.gt-sm') set flexGtSm(val)  { this._cacheInput('flexGtSm', val); };\n  @Input('fxFlex.gt-md') set flexGtMd(val)  { this._cacheInput('flexGtMd', val); };\n  @Input('fxFlex.gt-lg') set flexGtLg(val)  { this._cacheInput('flexGtLg', val); };\n\n  @Input('fxFlex.lt-sm') set flexLtSm(val) { this._cacheInput('flexLtSm', val); };\n  @Input('fxFlex.lt-md') set flexLtMd(val) { this._cacheInput('flexLtMd', val); };\n  @Input('fxFlex.lt-lg') set flexLtLg(val) { this._cacheInput('flexLtLg', val); };\n  @Input('fxFlex.lt-xl') set flexLtXl(val) { this._cacheInput('flexLtXl', val); };\n  /* tslint:enable */\n\n  // Note: Explicitly @SkipSelf on LayoutDirective and LayoutWrapDirective because we are looking\n  //       for the parent flex container for this flex item.\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              @Optional() @SkipSelf() protected _wrap: LayoutWrapDirective) {\n\n    super(monitor, elRef, renderer);\n\n    this._cacheInput('flex', '');\n    this._cacheInput('shrink', 1);\n    this._cacheInput('grow', 1);\n\n    if (_container) {\n      // If this flex item is inside of a flex container marked with\n      // Subscribe to layout immediate parent direction changes\n      this._layoutWatcher = _container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['flex'] != null || this._mqActivation) {\n      this._updateStyle();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('flex', '', (changes: MediaChange) => {\n      this._updateStyle(changes.value);\n    });\n    this._updateStyle();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateStyle();\n  }\n\n  protected _updateStyle(value?: string|number) {\n    let flexBasis = value || this._queryInput('flex') || '';\n    if (this._mqActivation) {\n      flexBasis = this._mqActivation.activatedInput;\n    }\n\n    let basis = String(flexBasis).replace(';', '');\n    let parts = validateBasis(basis, this._queryInput('grow'), this._queryInput('shrink'));\n    this._applyStyleToElement(this._validateValue.apply(this, parts));\n  }\n\n  /**\n   * Validate the value to be one of the acceptable value options\n   * Use default fallback of 'row'\n   */\n  protected _validateValue(grow: number|string,\n                           shrink: number|string,\n                           basis: string|number|FlexBasisAlias) {\n      // The flex-direction of this element's flex container. Defaults to 'row'.\n      let layout = this._getFlowDirection(this.parentElement, true);\n      let direction = (layout.indexOf('column') > -1) ? 'column' : 'row';\n      let css, isValue;\n\n      grow = (grow == '0') ? 0 : grow;\n      shrink = (shrink == '0') ? 0 : shrink;\n\n      // flex-basis allows you to specify the initial/starting main-axis size of the element,\n      // before anything else is computed. It can either be a percentage or an absolute value.\n      // It is, however, not the breaking point for flex-grow/shrink properties\n      //\n      // flex-grow can be seen as this:\n      //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n      //   1: (Default value). Stretch; will be the same size to all other flex items on\n      //       the same row since they have a default value of 1.\n      //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n      //      with 'flex-grow: 1' on the same row.\n\n      // Use `null` to clear existing styles.\n      let clearStyles = {\n        'max-width': null,\n        'max-height': null,\n        'min-width': null,\n        'min-height': null\n      };\n      switch (basis || '') {\n        case '':\n          css = extendObject(clearStyles, {'flex': '1 1 0.000000001px'});\n          break;\n        case 'initial':   // default\n        case 'nogrow':\n          grow = 0;\n          css = extendObject(clearStyles, {'flex': '0 1 auto'});\n          break;\n        case 'grow':\n          css = extendObject(clearStyles, {'flex': '1 1 100%'});\n          break;\n        case 'noshrink':\n          shrink = 0;\n          css = extendObject(clearStyles, {'flex': '1 0 auto'});\n          break;\n        case 'auto':\n          css = extendObject(clearStyles, {'flex': `${grow} ${shrink} auto`});\n          break;\n        case 'none':\n          grow = 0;\n          shrink = 0;\n          css = extendObject(clearStyles, {'flex': '0 0 auto'});\n          break;\n        default:\n          let hasCalc = String(basis).indexOf('calc') > -1;\n          let isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n\n          isValue = hasCalc ||\n              String(basis).indexOf('px') > -1 ||\n              String(basis).indexOf('em') > -1 ||\n              String(basis).indexOf('vw') > -1 ||\n              String(basis).indexOf('vh') > -1;\n\n          // Defaults to percentage sizing unless `px` is explicitly set\n          if (!isValue && !isPercent && !isNaN(basis as any)) {\n            basis = basis + '%';\n          }\n\n          if (basis === '0px') {\n            basis = '0%';\n          }\n\n          // Set max-width = basis if using layout-wrap\n          // tslint:disable-next-line:max-line-length\n          // @see https://github.com/philipwalton/flexbugs#11-min-and-max-size-declarations-are-ignored-when-wrappifl-flex-items\n\n          css = extendObject(clearStyles, { // fix issue #5345\n            'flex': `${grow} ${shrink} ${(isValue || this._wrap) ? basis : '100%'}`,\n          });\n          break;\n      }\n\n      let max = (direction === 'row') ? 'max-width' : 'max-height';\n      let min = (direction === 'row') ? 'min-width' : 'min-height';\n\n      let usingCalc = (String(basis).indexOf('calc') > -1) || (basis == 'auto');\n      let isPx = String(basis).indexOf('px') > -1 || usingCalc;\n\n\n      // make box inflexible when shrink and grow are both zero\n      // should not set a min when the grow is zero\n      // should not set a max when the shrink is zero\n      let isFixed = !grow && !shrink;\n      css[min] = (basis == '0%') ? 0 : isFixed || (isPx && grow) ? basis : null;\n      css[max] = (basis == '0%') ? 0 : isFixed || (!usingCalc && shrink) ? basis : null;\n\n    return extendObject(css, {'box-sizing': 'border-box'});\n  }\n\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer,\n  SimpleChanges,\n  Self,\n  Optional\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LayoutDirective} from './layout';\n\nconst FALSY = ['false', false, 0];\n\n/**\n * For fxHide selectors, we invert the 'value'\n * and assign to the equivalent fxShow selector cache\n *  - When 'hide' === '' === true, do NOT show the element\n *  - When 'hide' === false or 0... we WILL show the element\n */\nexport function negativeOf(hide: any) {\n  return (hide === '') ? false :\n         ((hide === 'false') || (hide === 0)) ? true : !hide;\n}\n\n/**\n * 'show' Layout API directive\n *\n */\n@Directive({\n  selector: `\n  [fxShow],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`\n})\nexport class ShowHideDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShow')       set show(val) {  this._cacheInput('show', val);  }\n  @Input('fxShow.xs')    set showXs(val) {this._cacheInput('showXs', val);}\n  @Input('fxShow.sm')    set showSm(val) {this._cacheInput('showSm', val); };\n  @Input('fxShow.md')    set showMd(val) {this._cacheInput('showMd', val); };\n  @Input('fxShow.lg')    set showLg(val) {this._cacheInput('showLg', val); };\n  @Input('fxShow.xl')    set showXl(val) {this._cacheInput('showXl', val); };\n\n  @Input('fxShow.lt-sm') set showLtSm(val) { this._cacheInput('showLtSm', val); };\n  @Input('fxShow.lt-md') set showLtMd(val) { this._cacheInput('showLtMd', val); };\n  @Input('fxShow.lt-lg') set showLtLg(val) { this._cacheInput('showLtLg', val); };\n  @Input('fxShow.lt-xl') set showLtXl(val) { this._cacheInput('showLtXl', val); };\n\n  @Input('fxShow.gt-xs') set showGtXs(val) {this._cacheInput('showGtXs', val); };\n  @Input('fxShow.gt-sm') set showGtSm(val) {this._cacheInput('showGtSm', val); };\n  @Input('fxShow.gt-md') set showGtMd(val) {this._cacheInput('showGtMd', val); };\n  @Input('fxShow.gt-lg') set showGtLg(val) {this._cacheInput('showGtLg', val); };\n\n  @Input('fxHide')       set hide(val) {this._cacheInput('show', negativeOf(val));}\n  @Input('fxHide.xs')    set hideXs(val) {this._cacheInput('showXs', negativeOf(val));}\n  @Input('fxHide.sm')    set hideSm(val) {this._cacheInput('showSm', negativeOf(val)); };\n  @Input('fxHide.md')    set hideMd(val) {this._cacheInput('showMd', negativeOf(val)); };\n  @Input('fxHide.lg')    set hideLg(val) {this._cacheInput('showLg', negativeOf(val)); };\n  @Input('fxHide.xl')    set hideXl(val) {this._cacheInput('showXl', negativeOf(val)); };\n\n  @Input('fxHide.lt-sm') set hideLtSm(val) { this._cacheInput('showLtSm', negativeOf(val)); };\n  @Input('fxHide.lt-md') set hideLtMd(val) { this._cacheInput('showLtMd', negativeOf(val)); };\n  @Input('fxHide.lt-lg') set hideLtLg(val) { this._cacheInput('showLtLg', negativeOf(val)); };\n  @Input('fxHide.lt-xl') set hideLtXl(val) { this._cacheInput('showLtXl', negativeOf(val)); };\n\n  @Input('fxHide.gt-xs') set hideGtXs(val) {this._cacheInput('showGtXs', negativeOf(val)); };\n  @Input('fxHide.gt-sm') set hideGtSm(val) {this._cacheInput('showGtSm', negativeOf(val)); };\n  @Input('fxHide.gt-md') set hideGtMd(val) {this._cacheInput('showGtMd', negativeOf(val)); };\n  @Input('fxHide.gt-lg') set hideGtLg(val) {this._cacheInput('showGtLg', negativeOf(val)); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n              @Optional() @Self() protected _layout: LayoutDirective,\n              protected elRef: ElementRef,\n              protected renderer: Renderer) {\n\n    super(monitor, elRef, renderer);\n\n    this._display = this._getDisplayStyle();  // re-invoke override to use `this._layout`\n    if (_layout) {\n      /**\n       * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.\n       * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS\n       */\n      this._layoutWatcher = _layout.layout$.subscribe(() => this._updateWithValue());\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly defined.\n   */\n  protected _getDisplayStyle(): string {\n    return this._layout ? 'flex' : super._getDisplayStyle();\n  }\n\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['show'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    let value = this._getDefaultVal('show', true);\n\n    // Build _mqActivation controller\n    this._listenForMediaQueryChanges('show', value, (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected _updateWithValue(value?: string|number|boolean) {\n    value = value || this._getDefaultVal('show', true);\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    let shouldShow = this._validateTruthy(value);\n    this._applyStyleToElement(this._buildCSS(shouldShow));\n  }\n\n\n  /** Build the CSS that should be assigned to the element instance */\n  protected _buildCSS(show) {\n    return {'display': show ? this._display : 'none'};\n  }\n\n  /**  Validate the to be not FALSY */\n  _validateTruthy(show) {\n    return (FALSY.indexOf(show) == -1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Renderer} from '@angular/core';\n\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {BaseFxDirective} from './base';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `\n  [fxFill],\n  [fxFlexFill]\n`})\nexport class FlexFillDirective extends BaseFxDirective {\n  constructor(monitor: MediaMonitor, public elRef: ElementRef, public renderer: Renderer) {\n    super(monitor, elRef, renderer);\n    this._applyStyleToElement(FLEX_FILL_CSS);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string;\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overriden from custom, application-specific ranges\n *\n */\n@Injectable()\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[ ]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[ ] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint {\n    return this._registry.find(bp => bp.alias == alias);\n  }\n\n  findByQuery(query: string): BreakPoint {\n    return this._registry.find(bp => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => it.suffix);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\nimport {Observable, Subscribable} from 'rxjs/Observable';\n\nimport {map} from 'rxjs/operator/map';\nimport {filter} from 'rxjs/operator/filter';\n\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {MediaChange} from './media-change';\nimport {MatchMedia} from './match-media';\nimport {mergeAlias} from './../utils/add-alias';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import 'rxjs/add/operator/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .filter((change:MediaChange) => true)   // silly noop filter\n *        .subscribe(onChange);\n *    }\n *  }\n */\n@Injectable()\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  public filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias): boolean {\n    let query = this._toMediaQuery(alias);\n    return this.mediaWatcher.isActive(query);\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(next?: (value: MediaChange) => void,\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    return this.observable$.subscribe(next, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    let queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const self = this;\n    const activationsOnly = (change: MediaChange) => {\n      return change.matches === true;\n    };\n    const addAliasInformation = (change: MediaChange) => {\n      return mergeAlias(change, this._findByQuery(change.mediaQuery));\n    };\n    const excludeOverlaps = (change: MediaChange) => {\n      let bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(self.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return filter.call(\n        map.call(\n            filter.call(\n                this.mediaWatcher.observe(),\n                activationsOnly\n            ),\n            addAliasInformation),\n        excludeOverlaps);\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query) {\n    let bp: BreakPoint = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private observable$: Observable<MediaChange>;\n}\n\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Optional,\n  SkipSelf\n} from '@angular/core';\n\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {MatchMedia} from './match-media';\nimport {ObservableMedia, MediaService} from './observable-media';\n\n/**\n * Ensure a single global ObservableMedia service provider\n */\nexport function OBSERVABLE_MEDIA_PROVIDER_FACTORY(parentService: ObservableMedia,\n                                                  matchMedia: MatchMedia,\n                                                  breakpoints: BreakPointRegistry) {\n  return parentService || new MediaService(breakpoints, matchMedia);\n}\n/**\n *  Provider to return global service for observable service for all MediaQuery activations\n */\nexport const OBSERVABLE_MEDIA_PROVIDER = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  deps: [\n    [ new Optional(), new SkipSelf(), ObservableMedia ],\n    MatchMedia,\n    BreakPointRegistry\n  ],\n  useFactory: OBSERVABLE_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientations: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientations: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientations: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientations: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientations: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientations: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n import {BreakPoint} from '../media-query/breakpoints/break-point';\nimport {extendObject} from './object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix || bp.suffix === '') {\n      bp.suffix = camelCase(bp.alias);          // create Suffix value based on alias\n      bp.overlapping = bp.overlapping || false; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const merged = defaults.map((bp) => extendObject({}, bp));\n  const findByAlias = (alias) => merged.reduce((result, bp) => {\n    return result || (( bp.alias === alias) ? bp : null);\n  }, null);\n\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    let target = findByAlias(bp.alias);\n    if (target) {\n      extendObject(target, bp);\n    } else {\n      merged.push(bp);\n    }\n  });\n\n  return validateSuffixes(merged);\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef, OnDestroy, SimpleChanges, OnChanges,\n  SimpleChange, Renderer\n} from '@angular/core';\nimport {ɵgetDOM as getDom} from '@angular/platform-browser';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nimport {ResponsiveActivation, KeyOptions} from '../responsive/responsive-activation';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5}).\n */\nexport type StyleDefinition = string | { [property: string]: string | number };\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective implements OnDestroy, OnChanges {\n\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _renderer: Renderer) {\n    this._display = this._getDisplayStyle();\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseFxDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    this._mediaMonitor = null;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows use to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source?: HTMLElement): string {\n    let element: HTMLElement = source || this._elementRef.nativeElement;\n    let value = this._lookupStyle(element, 'display');\n\n    return value ? value.trim() :\n        ((element.nodeType === 1) ? 'block' : 'inline-block');\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlowDirection(target: any, addIfMissing = false): string {\n    let value = 'row';\n\n    if (target) {\n      value = this._lookupStyle(target, 'flex-direction') || 'row';\n\n      let hasInlineValue = getDom().getStyle(target, 'flex-direction');\n      if (!hasInlineValue && addIfMissing) {\n        this._applyStyleToElements(buildLayoutCSS(value), [target]);\n      }\n    }\n\n    return value.trim();\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   */\n  protected _lookupStyle(element: HTMLElement, styleName: string): any {\n    let value = '';\n    try {\n      if (element) {\n        let immediateValue = getDom().getStyle(element, styleName);\n        value = immediateValue || getDom().getComputedStyle(element).getPropertyValue(styleName);\n      }\n    } catch (e) {\n      // TODO: platform-server throws an exception for getComputedStyle\n    }\n    return value;\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values. Each\n   * value will be added as element style.\n   */\n  protected _applyMultiValueStyleToElement(styles: {}, element: any) {\n    Object.keys(styles).forEach(key => {\n      const values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n      for (let value of values) {\n        this._renderer.setElementStyle(element, key, value);\n      }\n    });\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 nativeElement?: any) {\n    let styles = {};\n    let element = nativeElement || this._elementRef.nativeElement;\n\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n\n    styles = applyCssPrefixes(style);\n\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[ ]) {\n    let styles = applyCssPrefixes(style);\n\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(\n          keyOptions,\n          this._mediaMonitor,\n          (change) => onMediaQueryChange(change)\n      );\n    }\n    return this._mqActivation;\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    const obj = this._elementRef.nativeElement.children;\n    const buffer = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  /** Original dom Elements CSS display style */\n  protected _display;\n\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer,\n  SimpleChanges,\n} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive({selector: `\n  [fxLayout],\n  [fxLayout.xs], [fxLayout.sm], [fxLayout.md], [fxLayout.lg], [fxLayout.xl],\n  [fxLayout.lt-sm], [fxLayout.lt-md], [fxLayout.lt-lg], [fxLayout.lt-xl],\n  [fxLayout.gt-xs], [fxLayout.gt-sm], [fxLayout.gt-md], [fxLayout.gt-lg]\n`})\nexport class LayoutDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Create Observable for nested/child 'flex' directives. This allows\n   * child flex directives to subscribe/listen for flexbox direction changes.\n   */\n  protected _announcer: BehaviorSubject<string>;\n\n  /**\n   * Publish observer to enabled nested, dependent directives to listen\n   * to parent 'layout' direction changes\n   */\n  public layout$: Observable<string>;\n\n  /* tslint:disable */\n  @Input('fxLayout')       set layout(val)     { this._cacheInput('layout', val); };\n  @Input('fxLayout.xs')    set layoutXs(val)   { this._cacheInput('layoutXs', val); };\n  @Input('fxLayout.sm')    set layoutSm(val)   { this._cacheInput('layoutSm', val); };\n  @Input('fxLayout.md')    set layoutMd(val)   { this._cacheInput('layoutMd', val); };\n  @Input('fxLayout.lg')    set layoutLg(val)   { this._cacheInput('layoutLg', val); };\n  @Input('fxLayout.xl')    set layoutXl(val)   { this._cacheInput('layoutXl', val); };\n\n  @Input('fxLayout.gt-xs') set layoutGtXs(val) { this._cacheInput('layoutGtXs', val); };\n  @Input('fxLayout.gt-sm') set layoutGtSm(val) { this._cacheInput('layoutGtSm', val); };\n  @Input('fxLayout.gt-md') set layoutGtMd(val) { this._cacheInput('layoutGtMd', val); };\n  @Input('fxLayout.gt-lg') set layoutGtLg(val) { this._cacheInput('layoutGtLg', val); };\n\n  @Input('fxLayout.lt-sm') set layoutLtSm(val) { this._cacheInput('layoutLtSm', val); };\n  @Input('fxLayout.lt-md') set layoutLtMd(val) { this._cacheInput('layoutLtMd', val); };\n  @Input('fxLayout.lt-lg') set layoutLtLg(val) { this._cacheInput('layoutLtLg', val); };\n  @Input('fxLayout.lt-xl') set layoutLtXl(val) { this._cacheInput('layoutLtXl', val); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor, elRef: ElementRef, renderer: Renderer) {\n    super(monitor, elRef, renderer);\n    this._announcer = new BehaviorSubject<string>('row');\n    this.layout$ = this._announcer.asObservable();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxLayout')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['layout'] != null || this._mqActivation) {\n      this._updateWithDirection();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('layout', 'row', (changes: MediaChange) => {\n      this._updateWithDirection(changes.value);\n    });\n    this._updateWithDirection();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Validate the direction value and then update the host's inline flexbox styles\n   */\n  protected _updateWithDirection(value?: string) {\n    value = value || this._queryInput('layout') || 'row';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Update styles and announce to subscribers the *new* direction\n    let css = buildLayoutCSS(value);\n\n    this._applyStyleToElement(css);\n    this._announcer.next(css['flex-direction']);\n  }\n\n\n\n\n\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer,\n  SimpleChanges, Self, Optional,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {LayoutDirective} from './layout';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {validateWrapValue, LAYOUT_VALUES} from '../../utils/layout-validator';\n/**\n * @deprecated\n * This functionality is now part of the `fxLayout` API\n *\n * 'layout-wrap' flexbox styling directive\n * Defines wrapping of child elements in layout container\n * Optional values: reverse, wrap-reverse, none, nowrap, wrap (default)]\n *\n *\n * @see https://css-tricks.com/almanac/properties/f/flex-wrap/\n */\n@Directive({selector: `\n  [fxLayoutWrap], [fxLayoutWrap.xs], [fxLayoutWrap.sm], [fxLayoutWrap.lg], [fxLayoutWrap.xl],\n  [fxLayoutWrap.gt-xs], [fxLayoutWrap.gt-sm], [fxLayoutWrap.gt-md], [fxLayoutWrap.gt-lg],\n  [fxLayoutWrap.lt-xs], [fxLayoutWrap.lt-sm], [fxLayoutWrap.lt-md], [fxLayoutWrap.lt-lg]\n`})\nexport class LayoutWrapDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxLayoutWrap')       set wrap(val)     { this._cacheInput('wrap', val); }\n  @Input('fxLayoutWrap.xs')    set wrapXs(val)   { this._cacheInput('wrapXs', val); }\n  @Input('fxLayoutWrap.sm')    set wrapSm(val)   { this._cacheInput('wrapSm', val); };\n  @Input('fxLayoutWrap.md')    set wrapMd(val)   { this._cacheInput('wrapMd', val); };\n  @Input('fxLayoutWrap.lg')    set wrapLg(val)   { this._cacheInput('wrapLg', val); };\n  @Input('fxLayoutWrap.xl')    set wrapXl(val)   { this._cacheInput('wrapXl', val); };\n\n  @Input('fxLayoutWrap.gt-xs') set wrapGtXs(val) { this._cacheInput('wrapGtXs', val); };\n  @Input('fxLayoutWrap.gt-sm') set wrapGtSm(val) { this._cacheInput('wrapGtSm', val); };\n  @Input('fxLayoutWrap.gt-md') set wrapGtMd(val) { this._cacheInput('wrapGtMd', val); };\n  @Input('fxLayoutWrap.gt-lg') set wrapGtLg(val) { this._cacheInput('wrapGtLg', val); };\n\n  @Input('fxLayoutWrap.lt-sm') set wrapLtSm(val) { this._cacheInput('wrapLtSm', val); };\n  @Input('fxLayoutWrap.lt-md') set wrapLtMd(val) { this._cacheInput('wrapLtMd', val); };\n  @Input('fxLayoutWrap.lt-lg') set wrapLtLg(val) { this._cacheInput('wrapLtLg', val); };\n  @Input('fxLayoutWrap.lt-xl') set wrapLtXl(val) { this._cacheInput('wrapLtXl', val); };\n\n  /* tslint:enable */\n  constructor(\n    monitor: MediaMonitor,\n    elRef: ElementRef,\n    renderer: Renderer,\n    @Optional() @Self() container: LayoutDirective) {\n\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['wrap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('wrap', 'wrap', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n      super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase().replace('-reverse', '');\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n\n    this._updateWithValue();\n  }\n\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('wrap');\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n    value = validateWrapValue(value || 'wrap');\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  /**\n   * Build the CSS that should be assigned to the element instance\n   */\n  protected _buildCSS(value) {\n    return {\n      'display': 'flex',\n      'flex-wrap': value,\n      'flex-direction': this.flowDirection\n    };\n  }\n\n  protected get flowDirection(): string {\n    let computeFlowDirection = () => this._getFlowDirection(this._elementRef.nativeElement);\n    return this._layoutWatcher ? this._layout : computeFlowDirection();\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer,\n  SimpleChanges,\n} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n@Directive({\n  selector: `\n  [fxFlexAlign],\n  [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md], [fxFlexAlign.lg], [fxFlexAlign.xl],\n  [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md], [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl],\n  [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm], [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`\n})\nexport class FlexAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexAlign')       set align(val)  { this._cacheInput('align', val);  };\n  @Input('fxFlexAlign.xs')    set alignXs(val)  { this._cacheInput('alignXs', val);  };\n  @Input('fxFlexAlign.sm')    set alignSm(val)  { this._cacheInput('alignSm', val); };\n  @Input('fxFlexAlign.md')    set alignMd(val)  { this._cacheInput('alignMd', val); };\n  @Input('fxFlexAlign.lg')    set alignLg(val)  { this._cacheInput('alignLg', val); };\n  @Input('fxFlexAlign.xl')    set alignXl(val)  { this._cacheInput('alignXl', val); };\n\n  @Input('fxFlexAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxFlexAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxFlexAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxFlexAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  @Input('fxFlexAlign.gt-xs') set alignGtXs(val)  { this._cacheInput('alignGtXs', val); };\n  @Input('fxFlexAlign.gt-sm') set alignGtSm(val)  { this._cacheInput('alignGtSm', val); };\n  @Input('fxFlexAlign.gt-md') set alignGtMd(val)  { this._cacheInput('alignGtMd', val); };\n  @Input('fxFlexAlign.gt-lg') set alignGtLg(val)  { this._cacheInput('alignGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor, elRef: ElementRef, renderer: Renderer) {\n    super(monitor, elRef, renderer);\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('align', 'stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('align') || 'stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(align) {\n    let css = {};\n\n    // Cross-axis\n    switch (align) {\n      case 'start':\n        css['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        css['align-self'] = 'flex-end';\n        break;\n      default:\n        css['align-self'] = align;\n        break;\n    }\n\n    return css;\n  }\n}\n"],"names":["enumerable","Object","defineProperty","ShowHideDirective","prototype","set","val","this","_cacheInput","configurable","negativeOf","_getDisplayStyle","_layout","_super","call","ngOnChanges","changes","_mqActivation","_updateWithValue","ngOnInit","_this","value","_getDefaultVal","_listenForMediaQueryChanges","ngOnDestroy","_layoutWatcher","unsubscribe","activatedInput","shouldShow","_validateTruthy","display","show","_display","BaseFxDirective","type","Directive","args","ctorParameters","LayoutDirective","decorators","Optional","Self","Renderer","propDecorators","Input","showXs","showSm","showMd","showLg","showXl","showLtSm","showLtMd","showLtLg","showLtXl","showGtXs","showGtSm","showGtMd","showGtLg","hide","hideXs","hideSm","hideMd","hideLg","hideXl","hideLtSm","hideLtMd","hideLtLg","hideLtXl","hideGtXs","hideGtSm","hideGtMd","hideGtLg","FlexAlignDirective","monitor","elRef","renderer","tslib_1.__extends","_queryInput","_applyStyleToElement","_buildCSS","align","css","MediaMonitor","ElementRef","alignXs","alignSm","alignMd","alignLg","alignXl","alignLtSm","alignLtMd","alignLtLg","alignLtXl","alignGtXs","alignGtSm","alignGtMd","alignGtLg","FLEX_FILL_CSS","margin","width","height","min-width","min-height","FlexFillDirective","selector","FlexOffsetDirective","offset","isPercent","String","indexOf","isNaN","margin-left","offsetXs","offsetSm","offsetLg","offsetXl","offsetLtSm","offsetLtMd","offsetLtLg","offsetLtXl","offsetGtXs","offsetGtSm","offsetGtMd","offsetGtLg","FlexOrderDirective","parseInt","order","orderXs","orderSm","orderMd","orderXl","orderGtXs","orderGtSm","orderGtMd","orderGtLg","orderLtSm","orderLtMd","orderLtLg","orderLtXl","LayoutAlignDirective","container","layout$","subscribe","_onLayoutChange","bind","map","direction","toLowerCase","LAYOUT_VALUES","find","x","_allowStretching","_a","split","main_axis","cross_axis","_","extendObject","box-sizing","LayoutGapDirective","__extends","d","b","__","constructor","extendStatics","create","isBrowser","ɵgetDOM","supportsDOMEvents","getDom","list","mediaQueries","filter","it","ALL_STYLES","length","setAttribute","styleEl_1","cssText","query","createTextNode","appendChild","_document","head","forEach","mq","e","console","error","normalizeQuery","mediaQuery","unique","seen","item","hasOwnProperty","dest","sources","_i","arguments","TypeError","sources_1","source","key","mergeAlias","mqAlias","alias","suffix","OBSERVABLE_MEDIA_PROVIDER_FACTORY","parentService","matchMedia","breakpoints","MediaService","firstUpperCase","part","first","charAt","remainder","slice","toUpperCase","camelCase","name","replace","ALIAS_DELIMITERS","join","validateSuffixes","bp","overlapping","mergeByAlias","defaults","custom","merged","result","target","findByAlias","push","buildMergedBreakPoints","_custom","options","orientation","orientations","ORIENTATION_BREAKPOINTS","concat","DEFAULT_BREAKPOINTS","DEFAULT_BREAKPOINTS_PROVIDER_FACTORY","CUSTOM_BREAKPOINTS_PROVIDER_FACTORY","provide","BREAKPOINTS","useFactory","MEDIA_MONITOR_PROVIDER_FACTORY","parentMonitor","applyCssPrefixes","buildLayoutCSS","validateValue","buildCSS","wrap","validateWrapValue","flex-direction","flex-wrap","validateBasis","basis","grow","shrink","parts","j","_validateCalcValue","substring","trim","matches","substr","calc","setPrototypeOf","__proto__","Array","p","MediaChange","MatchMedia","_zone","_registry","Map","_source","BehaviorSubject","_observable$","asObservable","isActive","has","get","observe","registerQuery","change","prepareQueryCSS","mql","onMQLEvent","run","next","_buildMQL","addListener","media","removeListener","Injectable","NgZone","undefined","Inject","DOCUMENT","BreakPointRegistry","overlaps","nonOverlaps","findByQuery","_breakpoints","_matchMedia","_registerBreakpoints","items","overlappings","reverse","found","hasAlias","media$","queries","sortedItems","ObservableMedia","complete","mediaWatcher","filterOverlaps","_registerBreakPoints","_toMediaQuery","observable$","_buildObservable","self","activationsOnly","addAliasInformation","_findByQuery","excludeOverlaps","_findByAlias","OBSERVABLE_MEDIA_PROVIDER","deps","SkipSelf","RESPONSIVE_ALIASES","TABLET_LANDSCAPE","TABLET_PORTRAIT","WEB_PORTRAIT","WEB_LANDSCAPE","ScreenTypes","HANDSET","HANDSET_PORTRAIT","TABLET","WEB","HANDSET_LANDSCAPE","MediaQueriesModule","NgModule","providers","DEFAULT_BREAKPOINTS_PROVIDER","MEDIA_MONITOR_PROVIDER","KeyOptions","baseKey","defaultValue","inputKeys","ResponsiveActivation","_options","_mediaMonitor","_onMediaChanges","_subscribers","_configureChangeObservers","_activatedInputKey","activatedInputKey","hasKeyValue","_lookupKeyValue","destroy","link","subscriptions","_buildRegistryMap","_keyInUse","buildChanges","clone","property","mediaMonitor","_onMonitorEvents","_calculateActivatedValue","current","currentKey","newKey","_validateInputKey","inputKey","activeOverlaps","isMissingKey","some","_elementRef","_renderer","_inputMap","previousVal","SimpleChange","Error","fallbackVal","element","nativeElement","_lookupStyle","nodeType","_getFlowDirection","addIfMissing","getStyle","_applyStyleToElements","styleName","getComputedStyle","getPropertyValue","values","isArray","styles","values_1","style","elements","el","prop","onMediaQueryChange","keyOptions","obj","children","buffer","_announcer","_updateWithDirection","layout","layoutXs","layoutSm","layoutMd","layoutLg","layoutXl","layoutGtXs","layoutGtSm","layoutGtMd","layoutGtLg","layoutLtSm","layoutLtMd","layoutLtLg","layoutLtXl","LayoutWrapDirective","flowDirection","wrapXs","wrapSm","wrapGtSm","wrapGtMd","wrapGtLg","wrapLtSm","wrapLtMd","wrapLtLg","wrapLtXl","FlexDirective","_container","_wrap","_updateStyle","flexBasis","_validateValue","apply","isValue","parentElement","clearStyles","max-width","max-height","flex","hasCalc","max","min","usingCalc","isPx","isFixed","parentNode","flexXs","flexSm","flexMd","flexLg","flexXl","flexGtXs","flexGtSm","flexGtMd","flexGtLg","flexLtSm","flexLtMd","flexLtLg","flexLtXl"],"mappings":"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"}