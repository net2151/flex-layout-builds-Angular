{"version":3,"file":"flex-layout.umd.js","sources":["../../src/lib/module.ts","../../src/lib/media-query/_module.ts","../../src/lib/media-query/media-monitor-provider.ts","../../src/lib/media-query/observable-media-provider.ts","../../src/lib/media-query/breakpoints/break-points-provider.ts","../../src/lib/utils/breakpoint-tools.ts","../../src/lib/media-query/observable-media.ts","../../src/lib/media-query/breakpoints/data/orientation-break-points.ts","../../src/lib/media-query/breakpoints/data/break-points.ts","../../src/lib/api/ext/img-src.ts","../../src/lib/api/ext/show-hide.ts","../../src/lib/api/ext/style.ts","../../src/lib/utils/style-transforms.ts","../../src/lib/api/ext/class.ts","../../src/lib/api/core/renderer-adapter.ts","../../src/lib/api/flexbox/flex-order.ts","../../src/lib/api/flexbox/flex-offset.ts","../../src/lib/api/flexbox/flex-fill.ts","../../src/lib/api/flexbox/flex-align.ts","../../src/lib/api/flexbox/flex.ts","../../src/lib/utils/basis-validator.ts","../../src/lib/api/flexbox/layout-wrap.ts","../../src/lib/api/flexbox/layout-gap.ts","../../src/lib/api/flexbox/layout-align.ts","../../src/lib/api/flexbox/layout.ts","../../src/lib/media-query/media-monitor.ts","../../src/lib/utils/add-alias.ts","../../src/lib/media-query/match-media.ts","../../src/lib/media-query/media-change.ts","../../src/lib/media-query/breakpoints/break-point-registry.ts","../../src/lib/media-query/breakpoints/break-points-token.ts","../../src/lib/api/core/base-adapter.ts","../../src/lib/api/core/base.ts","../../src/lib/api/core/responsive-activation.ts","../../src/lib/utils/object-extend.ts","../../src/lib/utils/style-utils.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/version.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {MediaQueriesModule} from './media-query/_module';\n\nimport {BreakPoint} from './media-query/breakpoints/break-point';\nimport {\n  BreakPointProviderOptions,\n  DEFAULT_BREAKPOINTS_PROVIDER,\n  CUSTOM_BREAKPOINTS_PROVIDER_FACTORY\n} from './media-query/breakpoints/break-points-provider';\nimport {MEDIA_MONITOR_PROVIDER} from './media-query/media-monitor-provider';\nimport {OBSERVABLE_MEDIA_PROVIDER} from './media-query/observable-media-provider';\n\nimport {FlexDirective} from './api/flexbox/flex';\nimport {LayoutDirective} from './api/flexbox/layout';\nimport {FlexAlignDirective} from './api/flexbox/flex-align';\nimport {FlexFillDirective} from './api/flexbox/flex-fill';\nimport {FlexOffsetDirective} from './api/flexbox/flex-offset';\nimport {FlexOrderDirective} from './api/flexbox/flex-order';\nimport {LayoutAlignDirective} from './api/flexbox/layout-align';\nimport {LayoutWrapDirective} from './api/flexbox/layout-wrap';\nimport {LayoutGapDirective} from './api/flexbox/layout-gap';\n\nimport {ShowHideDirective} from './api/ext/show-hide';\nimport {ClassDirective} from './api/ext/class';\nimport {StyleDirective} from './api/ext/style';\nimport {ImgSrcDirective} from './api/ext/img-src';\n\n/**\n * Since the equivalent results are easily achieved with a css class attached to each\n * layout child, these have been deprecated and removed from the API.\n *\n *  import {LayoutPaddingDirective} from './api/flexbox/layout-padding';\n *  import {LayoutMarginDirective} from './api/flexbox/layout-margin';\n */\n\nconst ALL_DIRECTIVES = [\n  LayoutDirective,\n  LayoutWrapDirective,\n  LayoutGapDirective,\n  LayoutAlignDirective,\n  FlexDirective,\n  FlexOrderDirective,\n  FlexOffsetDirective,\n  FlexFillDirective,\n  FlexAlignDirective,\n  ShowHideDirective,\n  ClassDirective,\n  StyleDirective,\n  ImgSrcDirective\n];\n\n/**\n *\n */\n@NgModule({\n  imports: [MediaQueriesModule],\n  exports: [MediaQueriesModule, ...ALL_DIRECTIVES],\n  declarations: [...ALL_DIRECTIVES],\n  providers: [\n    MEDIA_MONITOR_PROVIDER,\n    DEFAULT_BREAKPOINTS_PROVIDER,   // Extend defaults with internal custom breakpoints\n    OBSERVABLE_MEDIA_PROVIDER\n  ]\n})\nexport class FlexLayoutModule {\n  /**\n   * External uses can easily add custom breakpoints AND include internal orientations\n   * breakpoints; which are not available by default.\n   *\n   * !! Selector aliases are not auto-configured. Developers must subclass\n   * the API directives to support extra selectors for the orientations breakpoints !!\n   */\n  static provideBreakPoints(breakpoints: BreakPoint[],\n                            options ?: BreakPointProviderOptions): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: [\n        CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(breakpoints, options || {orientations: false})\n      ]\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {MatchMedia} from './match-media';\nimport {MediaMonitor} from './media-monitor';\nimport {OBSERVABLE_MEDIA_PROVIDER} from './observable-media-provider';\nimport {DEFAULT_BREAKPOINTS_PROVIDER} from './breakpoints/break-points-provider';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [\n    DEFAULT_BREAKPOINTS_PROVIDER,  // Supports developer overrides of list of known breakpoints\n    BreakPointRegistry,      // Registry of known/used BreakPoint(s)\n    MatchMedia,              // Low-level service to publish observables w/ window.matchMedia()\n    MediaMonitor,            // MediaQuery monitor service observes all known breakpoints\n    OBSERVABLE_MEDIA_PROVIDER  // easy subscription injectable `media$` matchMedia observable\n  ]\n})\nexport class MediaQueriesModule {\n}\n\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor';\nimport {MatchMedia} from './match-media';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\n/**\n * Ensure a single global service provider\n */\nexport function MEDIA_MONITOR_PROVIDER_FACTORY(parentMonitor: MediaMonitor,\n                                               breakpoints: BreakPointRegistry,\n                                               matchMedia: MatchMedia) {\n  return parentMonitor || new MediaMonitor(breakpoints, matchMedia);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const MEDIA_MONITOR_PROVIDER = {\n  provide : MediaMonitor,\n  deps : [\n    [ new Optional(), new SkipSelf(), MediaMonitor ],\n    BreakPointRegistry,\n    MatchMedia,\n  ],\n  useFactory : MEDIA_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Optional,\n  SkipSelf\n} from '@angular/core';\n\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {MatchMedia} from './match-media';\nimport {ObservableMedia, MediaService} from './observable-media';\n\n/**\n * Ensure a single global ObservableMedia service provider\n */\nexport function OBSERVABLE_MEDIA_PROVIDER_FACTORY(parentService: ObservableMedia,\n                                                  matchMedia: MatchMedia,\n                                                  breakpoints: BreakPointRegistry) {\n  return parentService || new MediaService(breakpoints, matchMedia);\n}\n/**\n *  Provider to return global service for observable service for all MediaQuery activations\n */\nexport const OBSERVABLE_MEDIA_PROVIDER = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  deps: [\n    [ new Optional(), new SkipSelf(), ObservableMedia ],\n    MatchMedia,\n    BreakPointRegistry\n  ],\n  useFactory: OBSERVABLE_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  InjectionToken,    // tslint:disable-line:no-unused-variable\n} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {DEFAULT_BREAKPOINTS} from './data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from './data/orientation-break-points';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {mergeByAlias, validateSuffixes} from '../../utils/breakpoint-tools';\n\n\n/**\n * Options to identify which breakpoint types to include as part of\n * a BreakPoint provider\n */\nexport interface BreakPointProviderOptions {\n  /**\n   * include pre-configured, internal default breakpoints.\n   * @default 'true'\n   */\n  defaults ?: boolean;\n  /**\n   * include pre-configured, internal orientations breakpoints.\n   * @default 'false'\n   */\n  orientations ?: boolean;\n}\n\n/**\n * Add new custom items to the default list or override existing default with custom overrides\n */\nexport function buildMergedBreakPoints(_custom?: BreakPoint[],\n                                       options?: BreakPointProviderOptions) {\n  options = extendObject({ }, {\n        defaults: true,       // exclude pre-configured, internal default breakpoints\n        orientation: false      // exclude pre-configured, internal orientations breakpoints\n  }, options || { });\n\n  return () => {\n    // Order so the defaults are loaded last; so ObservableMedia will report these last!\n    let defaults = options.orientations ? ORIENTATION_BREAKPOINTS.concat(DEFAULT_BREAKPOINTS) :\n        DEFAULT_BREAKPOINTS;\n\n    return options.defaults ? mergeByAlias(defaults, _custom || []) : mergeByAlias(_custom);\n  };\n}\n\n/**\n *  Ensure that only a single global BreakPoint list is instantiated...\n */\nexport function DEFAULT_BREAKPOINTS_PROVIDER_FACTORY() {\n  return validateSuffixes(DEFAULT_BREAKPOINTS);\n}\n/**\n * Default Provider that does not support external customization nor provide\n * the extra extended breakpoints:   \"handset\", \"tablet\", and \"web\"\n *\n *  NOTE: !! breakpoints are considered to have unique 'alias' properties,\n *        custom breakpoints matching existing breakpoints will override the properties\n *        of the existing (and not be added as an extra breakpoint entry).\n *        [xs, gt-xs, sm, gt-sm, md, gt-md, lg, gt-lg, xl]\n */\nexport const DEFAULT_BREAKPOINTS_PROVIDER = { // tslint:disable-line:variable-name\n  provide: BREAKPOINTS,\n  useFactory: DEFAULT_BREAKPOINTS_PROVIDER_FACTORY\n};\n/**\n * Use with FlexLayoutModule.CUSTOM_BREAKPOINTS_PROVIDER_FACTORY!\n */\nexport function CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(_custom?: BreakPoint[],\n                                                    options?: BreakPointProviderOptions) {\n  return {\n    provide: BREAKPOINTS,\n    useFactory: buildMergedBreakPoints(_custom, options)\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n import {BreakPoint} from '../media-query/breakpoints/break-point';\nimport {extendObject} from './object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix || bp.suffix === '') {\n      bp.suffix = camelCase(bp.alias);          // create Suffix value based on alias\n      bp.overlapping = bp.overlapping || false; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const merged = defaults.map((bp) => extendObject({}, bp));\n  const findByAlias = (alias) => merged.reduce((result, bp) => {\n    return result || (( bp.alias === alias) ? bp : null);\n  }, null);\n\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    let target = findByAlias(bp.alias);\n    if (target) {\n      extendObject(target, bp);\n    } else {\n      merged.push(bp);\n    }\n  });\n\n  return validateSuffixes(merged);\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\nimport {Observable, Subscribable} from 'rxjs/Observable';\n\nimport {map} from 'rxjs/operator/map';\nimport {filter} from 'rxjs/operator/filter';\n\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {MediaChange} from './media-change';\nimport {MatchMedia} from './match-media';\nimport {mergeAlias} from './../utils/add-alias';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import 'rxjs/add/operator/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .filter((change:MediaChange) => true)   // silly noop filter\n *        .subscribe(onChange);\n *    }\n *  }\n */\n@Injectable()\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  public filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias): boolean {\n    let query = this._toMediaQuery(alias);\n    return this.mediaWatcher.isActive(query);\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(next?: (value: MediaChange) => void,\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    return this.observable$.subscribe(next, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    let queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const self = this;\n    const activationsOnly = (change: MediaChange) => {\n      return change.matches === true;\n    };\n    const addAliasInformation = (change: MediaChange) => {\n      return mergeAlias(change, this._findByQuery(change.mediaQuery));\n    };\n    const excludeOverlaps = (change: MediaChange) => {\n      let bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(self.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return filter.call(\n        map.call(\n            filter.call(\n                this.mediaWatcher.observe(),\n                activationsOnly\n            ),\n            addAliasInformation),\n        excludeOverlaps);\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query) {\n    let bp: BreakPoint = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private observable$: Observable<MediaChange>;\n}\n\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientations: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientations: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientations: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientations: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientations: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientations: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(min-width: 0px) and (max-width: 599px)'\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)'\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)'\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)'\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)'\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)'\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)'\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)'\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)'\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)'\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1920px)'\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)'\n  }\n];\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  Renderer2\n} from '@angular/core';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/**\n * This directive provides a responsive API for the HTML <img> 'src' attribute\n * and will update the img.src property upon each responsive activation.\n *\n * e.g.\n *      <img src=\"defaultScene.jpg\" src.xs=\"mobileScene.jpg\"></img>\n *\n * @see https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-src/\n */\n@Directive({\n  selector: `\n  img[src.xs],    img[src.sm],    img[src.md],    img[src.lg],   img[src.xl],\n  img[src.lt-sm], img[src.lt-md], img[src.lt-lg], img[src.lt-xl],\n  img[src.gt-xs], img[src.gt-sm], img[src.gt-md], img[src.gt-lg]\n`\n})\nexport class ImgSrcDirective extends BaseFxDirective implements OnInit, OnChanges {\n\n  /* tslint:disable */\n  @Input('src')        set srcBase(val) { this.cacheDefaultSrc(val);           }\n\n  @Input('src.xs')     set srcXs(val)   { this._cacheInput('srcXs', val);  }\n  @Input('src.sm')     set srcSm(val)   { this._cacheInput('srcSm', val);  }\n  @Input('src.md')     set srcMd(val)   { this._cacheInput('srcMd', val);  }\n  @Input('src.lg')     set srcLg(val)   { this._cacheInput('srcLg', val);  }\n  @Input('src.xl')     set srcXl(val)   { this._cacheInput('srcXl', val);  }\n\n  @Input('src.lt-sm')  set srcLtSm(val) { this._cacheInput('srcLtSm', val);  }\n  @Input('src.lt-md')  set srcLtMd(val) { this._cacheInput('srcLtMd', val);  }\n  @Input('src.lt-lg')  set srcLtLg(val) { this._cacheInput('srcLtLg', val);  }\n  @Input('src.lt-xl')  set srcLtXl(val) { this._cacheInput('srcLtXl', val);  }\n\n  @Input('src.gt-xs')  set srcGtXs(val) { this._cacheInput('srcGtXs', val);  }\n  @Input('src.gt-sm')  set srcGtSm(val) { this._cacheInput('srcGtSm', val);  }\n  @Input('src.gt-md')  set srcGtMd(val) { this._cacheInput('srcGtMd', val);  }\n  @Input('src.gt-lg')  set srcGtLg(val) { this._cacheInput('srcGtLg', val);  }\n  /* tslint:enable */\n\n  constructor(elRef: ElementRef, renderer: Renderer2, monitor: MediaMonitor) {\n    super(monitor, elRef, renderer);\n    this._cacheInput('src', elRef.nativeElement.getAttribute('src') || '');\n  }\n\n  /**\n   * Listen for responsive changes to update the img.src attribute\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (this.hasResponsiveKeys) {\n      // Listen for responsive changes\n      this._listenForMediaQueryChanges('src', this.defaultSrc, () => {\n        this._updateSrcFor();\n      });\n    }\n    this._updateSrcFor();\n  }\n\n  /**\n   * Update the 'src' property of the host <img> element\n   */\n  ngOnChanges() {\n    if (this.hasInitialized) {\n      this._updateSrcFor();\n    }\n  }\n\n  /**\n   * Use the [responsively] activated input value to update\n   * the host img src attribute or assign a default `img.src=''`\n   * if the src has not been defined.\n   *\n   * Do nothing to standard `<img src=\"\">` usages, only when responsive\n   * keys are present do we actually call `setAttribute()`\n   */\n  protected _updateSrcFor() {\n    if (this.hasResponsiveKeys) {\n      let url = this.activatedValue || this.defaultSrc;\n      this._renderer.setAttribute(this.nativeElement, 'src', String(url));\n    }\n  }\n\n  /**\n   * Cache initial value of 'src', this will be used as fallback when breakpoint\n   * activations change.\n   * NOTE: The default 'src' property is not bound using @Input(), so perform\n   * a post-ngOnInit() lookup of the default src value (if any).\n   */\n  protected cacheDefaultSrc(value?: string) {\n    this._cacheInput('src', value || '');\n  }\n\n  /**\n   * Empty values are maintained, undefined values are exposed as ''\n   */\n  protected get defaultSrc(): string {\n    return this._queryInput('src') || '';\n  }\n\n  /**\n   * Does the <img> have 1 or more src.<xxx> responsive inputs\n   * defined... these will be mapped to activated breakpoints.\n   */\n  protected get hasResponsiveKeys() {\n    return Object.keys(this._inputMap).length > 1;\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  Self,\n  Optional\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LayoutDirective} from '../flexbox/layout';\n\nconst FALSY = ['false', false, 0];\n\n/**\n * For fxHide selectors, we invert the 'value'\n * and assign to the equivalent fxShow selector cache\n *  - When 'hide' === '' === true, do NOT show the element\n *  - When 'hide' === false or 0... we WILL show the element\n */\nexport function negativeOf(hide: any) {\n  return (hide === '') ? false :\n         ((hide === 'false') || (hide === 0)) ? true : !hide;\n}\n\n/**\n * 'show' Layout API directive\n *\n */\n@Directive({\n  selector: `\n  [fxShow],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`\n})\nexport class ShowHideDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShow')       set show(val) {  this._cacheInput('show', val);  }\n  @Input('fxShow.xs')    set showXs(val) {this._cacheInput('showXs', val);}\n  @Input('fxShow.sm')    set showSm(val) {this._cacheInput('showSm', val); };\n  @Input('fxShow.md')    set showMd(val) {this._cacheInput('showMd', val); };\n  @Input('fxShow.lg')    set showLg(val) {this._cacheInput('showLg', val); };\n  @Input('fxShow.xl')    set showXl(val) {this._cacheInput('showXl', val); };\n\n  @Input('fxShow.lt-sm') set showLtSm(val) { this._cacheInput('showLtSm', val); };\n  @Input('fxShow.lt-md') set showLtMd(val) { this._cacheInput('showLtMd', val); };\n  @Input('fxShow.lt-lg') set showLtLg(val) { this._cacheInput('showLtLg', val); };\n  @Input('fxShow.lt-xl') set showLtXl(val) { this._cacheInput('showLtXl', val); };\n\n  @Input('fxShow.gt-xs') set showGtXs(val) {this._cacheInput('showGtXs', val); };\n  @Input('fxShow.gt-sm') set showGtSm(val) {this._cacheInput('showGtSm', val); };\n  @Input('fxShow.gt-md') set showGtMd(val) {this._cacheInput('showGtMd', val); };\n  @Input('fxShow.gt-lg') set showGtLg(val) {this._cacheInput('showGtLg', val); };\n\n  @Input('fxHide')       set hide(val) {this._cacheInput('show', negativeOf(val));}\n  @Input('fxHide.xs')    set hideXs(val) {this._cacheInput('showXs', negativeOf(val));}\n  @Input('fxHide.sm')    set hideSm(val) {this._cacheInput('showSm', negativeOf(val)); };\n  @Input('fxHide.md')    set hideMd(val) {this._cacheInput('showMd', negativeOf(val)); };\n  @Input('fxHide.lg')    set hideLg(val) {this._cacheInput('showLg', negativeOf(val)); };\n  @Input('fxHide.xl')    set hideXl(val) {this._cacheInput('showXl', negativeOf(val)); };\n\n  @Input('fxHide.lt-sm') set hideLtSm(val) { this._cacheInput('showLtSm', negativeOf(val)); };\n  @Input('fxHide.lt-md') set hideLtMd(val) { this._cacheInput('showLtMd', negativeOf(val)); };\n  @Input('fxHide.lt-lg') set hideLtLg(val) { this._cacheInput('showLtLg', negativeOf(val)); };\n  @Input('fxHide.lt-xl') set hideLtXl(val) { this._cacheInput('showLtXl', negativeOf(val)); };\n\n  @Input('fxHide.gt-xs') set hideGtXs(val) {this._cacheInput('showGtXs', negativeOf(val)); };\n  @Input('fxHide.gt-sm') set hideGtSm(val) {this._cacheInput('showGtSm', negativeOf(val)); };\n  @Input('fxHide.gt-md') set hideGtMd(val) {this._cacheInput('showGtMd', negativeOf(val)); };\n  @Input('fxHide.gt-lg') set hideGtLg(val) {this._cacheInput('showGtLg', negativeOf(val)); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n              @Optional() @Self() protected _layout: LayoutDirective,\n              protected elRef: ElementRef,\n              protected renderer: Renderer2) {\n\n    super(monitor, elRef, renderer);\n\n    if (_layout) {\n      /**\n       * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.\n       * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS\n       */\n      this._layoutWatcher = _layout.layout$.subscribe(() => this._updateWithValue());\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected _getDisplayStyle(): string {\n    return this._layout ? 'flex' : super._getDisplayStyle();\n  }\n\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.hasInitialized && (changes['show'] != null || this._mqActivation)) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    let value = this._getDefaultVal('show', true);\n    // Build _mqActivation controller\n    this._listenForMediaQueryChanges('show', value, (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected _updateWithValue(value?: string|number|boolean) {\n    value = value || this._getDefaultVal('show', true);\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    let shouldShow = this._validateTruthy(value);\n    this._applyStyleToElement(this._buildCSS(shouldShow));\n  }\n\n\n  /** Build the CSS that should be assigned to the element instance */\n  protected _buildCSS(show) {\n    return {'display': show ? this._display : 'none'};\n  }\n\n  /**  Validate the to be not FALSY */\n  _validateTruthy(show) {\n    return (FALSY.indexOf(show) == -1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  KeyValueDiffers,\n  OnDestroy,\n  OnChanges,\n  Optional,\n  Renderer2,\n  SecurityContext,\n  Self,\n  SimpleChanges,\n} from '@angular/core';\nimport {NgStyle} from '@angular/common';\n\nimport {BaseFxDirective} from '../core/base';\nimport {BaseFxDirectiveAdapter} from '../core/base-adapter';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  ngStyleUtils as _\n} from '../../utils/style-transforms';\nimport {RendererAdapter} from '../core/renderer-adapter';\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({\n  selector: `\n    [style.xs], [style.sm], [style.md], [style.lg], [style.xl],\n    [style.lt-sm], [style.lt-md], [style.lt-lg], [style.lt-xl],\n    [style.gt-xs], [style.gt-sm], [style.gt-md], [style.gt-lg],\n    [ngStyle],\n    [ngStyle.xs], [ngStyle.sm], [ngStyle.lg], [ngStyle.xl],\n    [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n    [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n  `\n})\nexport class StyleDirective extends BaseFxDirective\n    implements DoCheck, OnChanges, OnDestroy {\n\n  /**\n   * Intercept ngStyle assignments so we cache the default styles\n   * which are merged with activated styles or used as fallbacks.\n   */\n  @Input('ngStyle')\n  set styleBase(val: NgStyleType) {\n    this._base.cacheInput('style', val, true);\n    this._ngStyleInstance.ngStyle = this._base.inputMap['style'];\n  }\n\n  /* tslint:disable */\n  @Input('ngStyle.xs')    set ngStyleXs(val: NgStyleType) { this._base.cacheInput('styleXs', val, true); }\n  @Input('ngStyle.sm')    set ngStyleSm(val: NgStyleType) {  this._base.cacheInput('styleSm', val, true); };\n  @Input('ngStyle.md')    set ngStyleMd(val: NgStyleType) { this._base.cacheInput('styleMd', val, true); };\n  @Input('ngStyle.lg')    set ngStyleLg(val: NgStyleType) { this._base.cacheInput('styleLg', val, true);};\n  @Input('ngStyle.xl')    set ngStyleXl(val: NgStyleType) { this._base.cacheInput('styleXl', val, true); };\n\n  @Input('ngStyle.lt-sm') set ngStyleLtSm(val: NgStyleType) { this._base.cacheInput('styleLtSm', val, true); };\n  @Input('ngStyle.lt-md') set ngStyleLtMd(val: NgStyleType) { this._base.cacheInput('styleLtMd', val, true); };\n  @Input('ngStyle.lt-lg') set ngStyleLtLg(val: NgStyleType) { this._base.cacheInput('styleLtLg', val, true); };\n  @Input('ngStyle.lt-xl') set ngStyleLtXl(val: NgStyleType) { this._base.cacheInput('styleLtXl', val, true); };\n\n  @Input('ngStyle.gt-xs') set ngStyleGtXs(val: NgStyleType) { this._base.cacheInput('styleGtXs', val, true); };\n  @Input('ngStyle.gt-sm') set ngStyleGtSm(val: NgStyleType) { this._base.cacheInput('styleGtSm', val, true);} ;\n  @Input('ngStyle.gt-md') set ngStyleGtMd(val: NgStyleType) { this._base.cacheInput('styleGtMd', val, true);};\n  @Input('ngStyle.gt-lg') set ngStyleGtLg(val: NgStyleType) { this._base.cacheInput('styleGtLg', val, true); };\n\n  /** Deprecated selectors */\n  @Input('style.xs')      set styleXs(val: NgStyleType) { this._base.cacheInput('styleXs', val, true); }\n  @Input('style.sm')      set styleSm(val: NgStyleType) { this._base.cacheInput('styleSm', val, true); };\n  @Input('style.md')      set styleMd(val: NgStyleType) { this._base.cacheInput('styleMd', val, true);};\n  @Input('style.lg')      set styleLg(val: NgStyleType) { this._base.cacheInput('styleLg', val, true); };\n  @Input('style.xl')      set styleXl(val: NgStyleType) { this._base.cacheInput('styleXl', val, true); };\n\n  @Input('style.lt-sm')   set styleLtSm(val: NgStyleType) { this._base.cacheInput('styleLtSm', val, true); };\n  @Input('style.lt-md')   set styleLtMd(val: NgStyleType) { this._base.cacheInput('styleLtMd', val, true); };\n  @Input('style.lt-lg')   set styleLtLg(val: NgStyleType) { this._base.cacheInput('styleLtLg', val, true);};\n  @Input('style.lt-xl')   set styleLtXl(val: NgStyleType) { this._base.cacheInput('styleLtXl', val, true); };\n\n  @Input('style.gt-xs')   set styleGtXs(val: NgStyleType) { this._base.cacheInput('styleGtXs', val, true); };\n  @Input('style.gt-sm')   set styleGtSm(val: NgStyleType) { this._base.cacheInput('styleGtSm', val, true); };\n  @Input('style.gt-md')   set styleGtMd(val: NgStyleType) { this._base.cacheInput('styleGtMd', val, true);};\n  @Input('style.gt-lg')   set styleGtLg(val: NgStyleType) { this._base.cacheInput('styleGtLg', val, true); };\n\n  /* tslint:enable */\n  /**\n   *  Constructor for the ngStyle subclass; which adds selectors and\n   *  a MediaQuery Activation Adapter\n   */\n  constructor(private monitor: MediaMonitor,\n              protected _sanitizer: DomSanitizer,\n              _ngEl: ElementRef, _renderer: Renderer2,\n              _differs: KeyValueDiffers,\n              @Optional() @Self() private _ngStyleInstance: NgStyle) {\n\n    super(monitor, _ngEl, _renderer);\n\n    // Build adapter, `cacheInput()` interceptor, and get current inline style if any\n    this._buildAdapter(this.monitor, _ngEl, _renderer);\n    this._base.cacheInput('style', _ngEl.nativeElement.getAttribute('style'), true);\n\n    // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been defined on\n    // the same host element; since the responsive versions may be defined...\n    if ( !this._ngStyleInstance ) {\n      let adapter = new RendererAdapter(_renderer);\n      this._ngStyleInstance = new NgStyle(_differs, _ngEl, <any> adapter);\n    }\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._updateStyle();\n    }\n  }\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    if (!this._base.hasMediaQueryListener) {\n      this._configureMQListener();\n    }\n    this._ngStyleInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n    this._ngStyleInstance = null;\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n     * Build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    protected _configureMQListener() {\n      this._base.listenForMediaQueryChanges('style', '', (changes: MediaChange) => {\n        this._updateStyle(changes.value);\n\n        // trigger NgClass::_applyIterableChanges()\n        this._ngStyleInstance.ngDoCheck();\n      });\n    }\n\n  // ************************************************************************\n  // Private Internal Methods\n  // ************************************************************************\n\n  /**\n   * Use the currently activated input property and assign to\n   * `ngStyle` which does the style injections...\n   */\n  protected _updateStyle(value?: NgStyleType) {\n    let style = value || this._base.queryInput('style') || '';\n    if (this._base.mqActivation) {\n      style = this._base.mqActivation.activatedInput;\n    }\n\n    // Delegate subsequent activity to the NgStyle logic\n    this._ngStyleInstance.ngStyle = style;\n  }\n\n\n  /**\n   * Build MediaQuery Activation Adapter\n   * This adapter manages listening to mediaQuery change events and identifying\n   * which property value should be used for the style update\n   */\n  protected _buildAdapter(monitor: MediaMonitor, _ngEl: ElementRef, _renderer: Renderer2) {\n    this._base = new BaseFxDirectiveAdapter('style', monitor, _ngEl, _renderer);\n    this._buildCacheInterceptor();\n  }\n\n  /**\n   * Build intercept to convert raw strings to ngStyleMap\n   */\n  protected _buildCacheInterceptor() {\n    let cacheInput = this._base.cacheInput.bind(this._base);\n    this._base.cacheInput = (key?: string, source?: any, cacheRaw = false, merge = true) => {\n      let styles = this._buildStyleMap(source);\n      if (merge) {\n        styles = extendObject({}, this._base.inputMap['style'], styles);\n      }\n      cacheInput(key, styles, cacheRaw);\n    };\n  }\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected _buildStyleMap(styles: NgStyleType) {\n    let sanitizer: NgStyleSanitizer = (val: any) => {\n      // Always safe-guard (aka sanitize) style property values\n      return this._sanitizer.sanitize(SecurityContext.STYLE, val);\n    };\n    if (styles) {\n      switch ( _.getType(styles) ) {\n        case 'string':  return _.buildMapFromList(_.buildRawList(styles), sanitizer);\n        case 'array' :  return _.buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return _.buildMapFromSet(styles, sanitizer);\n        default      :  return _.buildMapFromSet(styles, sanitizer);\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the StyleDirective\n   */\n  protected _base: BaseFxDirectiveAdapter;\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/**\n * NgStyle allowed inputs\n */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\n/**\n * Transform Operators for @angular/flex-layout NgStyle Directive\n */\nexport const ngStyleUtils = {\n  getType,\n  buildRawList,\n  buildMapFromList,\n  buildMapFromSet\n};\n\nfunction getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set ) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/**\n * Convert array of key:value strings to a iterable map object\n */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {});\n}\n\n/**\n * Convert Set<string> or raw Object to an iterable NgStyleMap\n */\nfunction buildMapFromSet(source: any, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list = new Array<string>();\n  if (getType(source) == 'set') {\n    source.forEach(entry => list.push(entry));\n  } else {                                // simple hashmap\n    Object.keys(source).forEach(key => {\n      list.push(`${key}:${source[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/**\n * Convert 'key:value' -> [key, value]\n */\nfunction stringToKeyValue(it: string): NgStyleKeyValue {\n  let [key, val] = it.split(':');\n  return val ? new NgStyleKeyValue(key, val) : null;\n}\n\n/**\n * Convert [ [key,value] ] -> { key : value }\n */\nfunction keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  Self\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\n\nimport {BaseFxDirective} from '../core/base';\nimport {BaseFxDirectiveAdapter} from '../core/base-adapter';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {RendererAdapter} from '../core/renderer-adapter';\n\n/** NgClass allowed inputs **/\nexport type NgClassType = string | string[] | Set<string> | {[klass: string]: any};\n\n/**\n * Directive to add responsive support for ngClass.\n */\n@Directive({\n  selector: `\n    [class.xs], [class.sm], [class.md], [class.lg], [class.xl],\n    [class.lt-sm], [class.lt-md], [class.lt-lg], [class.lt-xl],\n    [class.gt-xs], [class.gt-sm], [class.gt-md], [class.gt-lg],\n\n    [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n    [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n    [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n  `\n})\nexport class ClassDirective extends BaseFxDirective\n    implements DoCheck, OnChanges, OnDestroy {\n\n  /**\n   * Intercept ngClass assignments so we cache the default classes\n   * which are merged with activated styles or used as fallbacks.\n   * Note: Base ngClass values are applied during ngDoCheck()\n   */\n  @Input('ngClass')\n  set ngClassBase(val: NgClassType) {\n    this._ngClassAdapter.cacheInput('ngClass', val, true);\n    this._ngClassInstance.ngClass = val;\n  }\n\n  /* tslint:disable */\n  @Input('ngClass.xs')    set ngClassXs(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassXs',   val, true); }\n  @Input('ngClass.sm')    set ngClassSm(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassSm',   val, true); }\n  @Input('ngClass.md')    set ngClassMd(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassMd',   val, true); }\n  @Input('ngClass.lg')    set ngClassLg(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassLg',   val, true); }\n  @Input('ngClass.xl')    set ngClassXl(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassXl',   val, true); }\n\n  @Input('ngClass.lt-sm') set ngClassLtSm(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtSm', val, true); }\n  @Input('ngClass.lt-md') set ngClassLtMd(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtMd', val, true); }\n  @Input('ngClass.lt-lg') set ngClassLtLg(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtLg', val, true); }\n  @Input('ngClass.lt-xl') set ngClassLtXl(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtXl', val, true); }\n\n  @Input('ngClass.gt-xs') set ngClassGtXs(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtXs', val, true); }\n  @Input('ngClass.gt-sm') set ngClassGtSm(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtSm', val, true); }\n  @Input('ngClass.gt-md') set ngClassGtMd(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtMd', val, true); }\n  @Input('ngClass.gt-lg') set ngClassGtLg(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtLg', val, true); }\n\n  /** Deprecated selectors */\n\n  @Input('class.xs')      set classXs(val:   NgClassType) { this._classAdapter.cacheInput('classXs',   val); }\n  @Input('class.sm')      set classSm(val:   NgClassType) { this._classAdapter.cacheInput('classSm',   val); }\n  @Input('class.md')      set classMd(val:   NgClassType) { this._classAdapter.cacheInput('classMd',   val); }\n  @Input('class.lg')      set classLg(val:   NgClassType) { this._classAdapter.cacheInput('classLg',   val); }\n  @Input('class.xl')      set classXl(val:   NgClassType) { this._classAdapter.cacheInput('classXl',   val); }\n\n  @Input('class.lt-sm')   set classLtSm(val: NgClassType) { this._classAdapter.cacheInput('classLtSm', val); }\n  @Input('class.lt-md')   set classLtMd(val: NgClassType) { this._classAdapter.cacheInput('classLtMd', val); }\n  @Input('class.lt-lg')   set classLtLg(val: NgClassType) { this._classAdapter.cacheInput('classLtLg', val); }\n  @Input('class.lt-xl')   set classLtXl(val: NgClassType) { this._classAdapter.cacheInput('classLtXl', val); }\n\n  @Input('class.gt-xs')   set classGtXs(val: NgClassType) { this._classAdapter.cacheInput('classGtXs', val); }\n  @Input('class.gt-sm')   set classGtSm(val: NgClassType) { this._classAdapter.cacheInput('classGtSm', val); }\n  @Input('class.gt-md')   set classGtMd(val: NgClassType) { this._classAdapter.cacheInput('classGtMd', val); }\n  @Input('class.gt-lg')   set classGtLg(val: NgClassType) { this._classAdapter.cacheInput('classGtLg', val); }\n\n  /* tslint:enable */\n  constructor(protected monitor: MediaMonitor,\n              _ngEl: ElementRef, _renderer: Renderer2,\n              _iterableDiffers: IterableDiffers, _keyValueDiffers: KeyValueDiffers,\n              @Optional() @Self() private _ngClassInstance: NgClass) {\n\n    super(monitor, _ngEl, _renderer);\n\n    this._ngClassAdapter = new BaseFxDirectiveAdapter('ngClass', monitor, _ngEl, _renderer);\n    this._classAdapter = new BaseFxDirectiveAdapter('class', monitor, _ngEl, _renderer);\n    this._classAdapter.cacheInput('class', _ngEl.nativeElement.getAttribute('class') || '');\n\n    // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n    // the same host element; since the responsive variations may be defined...\n    if ( !this._ngClassInstance ) {\n      let adapter = new RendererAdapter(_renderer);\n      this._ngClassInstance = new NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, <any> adapter);\n    }\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.hasInitialized) {\n      if (this._classAdapter.activeKey in changes) {\n        this._updateKlass();\n      }\n      if (this._ngClassAdapter.activeKey in changes) {\n        this._updateNgClass();\n      }\n    }\n  }\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    if (!this._classAdapter.hasMediaQueryListener) {\n      this._configureMQListener();\n    }\n    if ( this._ngClassInstance) {\n      this._ngClassInstance.ngDoCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._classAdapter.ngOnDestroy();\n    this._ngClassAdapter.ngOnDestroy();\n    this._ngClassInstance = null;\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n   * Build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  protected _configureMQListener() {\n    const value = this._classAdapter.queryInput('class');\n    this._classAdapter.listenForMediaQueryChanges('class', value, (changes: MediaChange) => {\n      this._updateKlass(changes.value);\n    });\n\n    this._ngClassAdapter.listenForMediaQueryChanges('ngClass', value, (changes: MediaChange) => {\n      this._updateNgClass(changes.value);\n      this._ngClassInstance.ngDoCheck();    // trigger NgClass::_applyIterableChanges()\n    });\n  }\n\n  /**\n   *  Apply updates directly to the NgClass:klass property\n   *  ::ngDoCheck() is not needed\n   */\n  protected _updateKlass(value?: NgClassType) {\n    let klass = value || this._classAdapter.queryInput('class');\n    if (this._classAdapter.mqActivation) {\n      klass = this._classAdapter.mqActivation.activatedInput;\n    }\n    this._ngClassInstance.klass = klass;\n  }\n\n  /**\n   *  Identify the activated input value and update the ngClass iterables...\n   *  needs ngDoCheck() to actually apply the values to the element\n   */\n  protected _updateNgClass(value?: NgClassType) {\n    if (this._ngClassAdapter.mqActivation) {\n      value = this._ngClassAdapter.mqActivation.activatedInput;\n    }\n\n    // Delegate subsequent activity to the NgClass logic\n    this._ngClassInstance.ngClass = value || '';\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the ClassDirective instance\n   */\n  protected _classAdapter: BaseFxDirectiveAdapter;   // used for `class.xxx` selectors\n  protected _ngClassAdapter: BaseFxDirectiveAdapter;   // used for `ngClass.xxx` selectors\n}\n\n","import {Renderer2, RendererStyleFlags2} from '@angular/core';\n\n/**\n * Adapts the 'deprecated' Angular Renderer v1 API to use the new Renderer2 instance\n * This is required for older versions of NgStyle and NgClass that require\n * the v1 API (but should use the v2 instances)\n */\nexport class RendererAdapter {\n  constructor(private _renderer: Renderer2) { }\n\n  setElementClass(el: any, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this._renderer.addClass(el, className);\n    } else {\n      this._renderer.removeClass(el, className);\n    }\n  }\n\n  setElementStyle(el: any, styleName: string, styleValue: string): void {\n    if (styleValue) {\n      this._renderer.setStyle(el, styleName, styleValue);\n    } else {\n      this._renderer.removeStyle(el, styleName);\n    }\n  }\n\n  // new API is forwarded\n  addClass(el: any, name: string): void {\n    this._renderer.addClass(el, name);\n  }\n\n  removeClass(el: any, name: string): void {\n    this._renderer.removeClass(el, name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void {\n    this._renderer.setStyle(el, style, value, flags);\n  }\n\n  removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void {\n    this._renderer.removeStyle(el, style, flags);\n  }\n\n  // ******************************************************************\n  // !! Renderer is an abstract class with abstract methods\n  //\n  // These are implementation of those methods... and do NOTHING since\n  // we only use setElementStyle() and setElementClass()\n  // ******************************************************************\n\n  /* tslint:disable */\n  animate()             : any  { throw _notImplemented('animate'); }\n  attachViewAfter()     : void { throw _notImplemented('attachViewAfter'); }\n  detachView()          : void { throw _notImplemented('detachView'); }\n  destroyView()         : void { throw _notImplemented('destroyView'); }\n  createElement()       : any  { throw _notImplemented('createElement'); }\n  createViewRoot()      : any  { throw _notImplemented('createViewRoot'); }\n  createTemplateAnchor(): any  { throw _notImplemented('createTemplateAnchor'); }\n  createText()          : any  { throw _notImplemented('createText'); }\n  invokeElementMethod() : void { throw _notImplemented('invokeElementMethod'); }\n  projectNodes()        : void { throw _notImplemented('projectNodes'); }\n  selectRootElement()   : any  { throw _notImplemented('selectRootElement'); }\n  setBindingDebugInfo() : void { throw _notImplemented('setBindingDebugInfo'); }\n  setElementProperty()  : void { throw _notImplemented('setElementProperty'); }\n  setElementAttribute() : void { throw _notImplemented('setElementAttribute'); }\n  setText()             : void { throw _notImplemented('setText'); }\n  listen()              : Function { throw _notImplemented('listen');  }\n  listenGlobal()        : Function { throw _notImplemented('listenGlobal');  }\n  /* tslint:enable */\n}\n\nfunction _notImplemented(methodName: string) {\n  return new Error(`The method RendererAdapter::${methodName}() has not been implemented`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n@Directive({selector: `\n  [fxFlexOrder],\n  [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md], [fxFlexOrder.lg], [fxFlexOrder.xl],\n  [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md], [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl],\n  [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm], [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`})\nexport class FlexOrderDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOrder')       set order(val)     { this._cacheInput('order', val); }\n  @Input('fxFlexOrder.xs')    set orderXs(val)   { this._cacheInput('orderXs', val); }\n  @Input('fxFlexOrder.sm')    set orderSm(val)   { this._cacheInput('orderSm', val); };\n  @Input('fxFlexOrder.md')    set orderMd(val)   { this._cacheInput('orderMd', val); };\n  @Input('fxFlexOrder.lg')    set orderLg(val)   { this._cacheInput('orderLg', val); };\n  @Input('fxFlexOrder.xl')    set orderXl(val)   { this._cacheInput('orderXl', val); };\n\n  @Input('fxFlexOrder.gt-xs') set orderGtXs(val) { this._cacheInput('orderGtXs', val); };\n  @Input('fxFlexOrder.gt-sm') set orderGtSm(val) { this._cacheInput('orderGtSm', val); };\n  @Input('fxFlexOrder.gt-md') set orderGtMd(val) { this._cacheInput('orderGtMd', val); };\n  @Input('fxFlexOrder.gt-lg') set orderGtLg(val) { this._cacheInput('orderGtLg', val); };\n\n  @Input('fxFlexOrder.lt-sm') set orderLtSm(val) { this._cacheInput('orderLtSm', val); };\n  @Input('fxFlexOrder.lt-md') set orderLtMd(val) { this._cacheInput('orderLtMd', val); };\n  @Input('fxFlexOrder.lt-lg') set orderLtLg(val) { this._cacheInput('orderLtLg', val); };\n  @Input('fxFlexOrder.lt-xl') set orderLtXl(val) { this._cacheInput('orderLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor, elRef: ElementRef, renderer: Renderer2) {\n    super(monitor, elRef, renderer);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['order'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('order', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('order') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n\n  protected _buildCSS(value) {\n    value = parseInt(value, 10);\n    return {order: isNaN(value) ? 0 : value};\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  SkipSelf\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LayoutDirective} from './layout';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive({selector: `\n  [fxFlexOffset],\n  [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md], [fxFlexOffset.lg], [fxFlexOffset.xl],\n  [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md], [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl],\n  [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm], [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`})\nexport class FlexOffsetDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOffset')       set offset(val)     { this._cacheInput('offset', val); }\n  @Input('fxFlexOffset.xs')    set offsetXs(val)   { this._cacheInput('offsetXs', val); }\n  @Input('fxFlexOffset.sm')    set offsetSm(val)   { this._cacheInput('offsetSm', val); };\n  @Input('fxFlexOffset.md')    set offsetMd(val)   { this._cacheInput('offsetMd', val); };\n  @Input('fxFlexOffset.lg')    set offsetLg(val)   { this._cacheInput('offsetLg', val); };\n  @Input('fxFlexOffset.xl')    set offsetXl(val)   { this._cacheInput('offsetXl', val); };\n\n  @Input('fxFlexOffset.lt-sm') set offsetLtSm(val) { this._cacheInput('offsetLtSm', val); };\n  @Input('fxFlexOffset.lt-md') set offsetLtMd(val) { this._cacheInput('offsetLtMd', val); };\n  @Input('fxFlexOffset.lt-lg') set offsetLtLg(val) { this._cacheInput('offsetLtLg', val); };\n  @Input('fxFlexOffset.lt-xl') set offsetLtXl(val) { this._cacheInput('offsetLtXl', val); };\n\n  @Input('fxFlexOffset.gt-xs') set offsetGtXs(val) { this._cacheInput('offsetGtXs', val); };\n  @Input('fxFlexOffset.gt-sm') set offsetGtSm(val) { this._cacheInput('offsetGtSm', val); };\n  @Input('fxFlexOffset.gt-md') set offsetGtMd(val) { this._cacheInput('offsetGtMd', val); };\n  @Input('fxFlexOffset.gt-lg') set offsetGtLg(val) { this._cacheInput('offsetGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer2,\n              @Optional() @SkipSelf() protected _container: LayoutDirective ) {\n    super(monitor, elRef, renderer);\n\n\n    this.watchParentFlow();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['offset'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * Cleanup\n   */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('offset', 0 , (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** The flex-direction of this element's host container. Defaults to 'row'. */\n  protected _layout = 'row';\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /**\n   * If parent flow-direction changes, then update the margin property\n   * used to offset\n   */\n  protected watchParentFlow() {\n    if (this._container) {\n      // Subscribe to layout immediate parent direction changes (if any)\n      this._layoutWatcher = this._container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateWithValue();\n  }\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('offset') || 0;\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(offset) {\n    let isPercent = String(offset).indexOf('%') > -1;\n    let isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(offset)) {\n      offset = offset + '%';\n    }\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    let layout = this._getFlowDirection(this.parentElement, true);\n    return isFlowHorizontal(layout) ? {'margin-left': `${offset}`} : {'margin-top': `${offset}`};\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Renderer2} from '@angular/core';\n\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {BaseFxDirective} from '../core/base';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `\n  [fxFill],\n  [fxFlexFill]\n`})\nexport class FlexFillDirective extends BaseFxDirective {\n  constructor(monitor: MediaMonitor, public elRef: ElementRef, public renderer: Renderer2) {\n    super(monitor, elRef, renderer);\n    this._applyStyleToElement(FLEX_FILL_CSS);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n@Directive({\n  selector: `\n  [fxFlexAlign],\n  [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md], [fxFlexAlign.lg], [fxFlexAlign.xl],\n  [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md], [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl],\n  [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm], [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`\n})\nexport class FlexAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexAlign')       set align(val)  { this._cacheInput('align', val);  };\n  @Input('fxFlexAlign.xs')    set alignXs(val)  { this._cacheInput('alignXs', val);  };\n  @Input('fxFlexAlign.sm')    set alignSm(val)  { this._cacheInput('alignSm', val); };\n  @Input('fxFlexAlign.md')    set alignMd(val)  { this._cacheInput('alignMd', val); };\n  @Input('fxFlexAlign.lg')    set alignLg(val)  { this._cacheInput('alignLg', val); };\n  @Input('fxFlexAlign.xl')    set alignXl(val)  { this._cacheInput('alignXl', val); };\n\n  @Input('fxFlexAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxFlexAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxFlexAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxFlexAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  @Input('fxFlexAlign.gt-xs') set alignGtXs(val)  { this._cacheInput('alignGtXs', val); };\n  @Input('fxFlexAlign.gt-sm') set alignGtSm(val)  { this._cacheInput('alignGtSm', val); };\n  @Input('fxFlexAlign.gt-md') set alignGtMd(val)  { this._cacheInput('alignGtMd', val); };\n  @Input('fxFlexAlign.gt-lg') set alignGtLg(val)  { this._cacheInput('alignGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor, elRef: ElementRef, renderer: Renderer2) {\n    super(monitor, elRef, renderer);\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('align', 'stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('align') || 'stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(align) {\n    let css = {};\n\n    // Cross-axis\n    switch (align) {\n      case 'start':\n        css['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        css['align-self'] = 'flex-end';\n        break;\n      default:\n        css['align-self'] = align;\n        break;\n    }\n\n    return css;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {extendObject} from '../../utils/object-extend';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {LayoutDirective} from './layout';\nimport {LayoutWrapDirective} from './layout-wrap';\nimport {validateBasis} from '../../utils/basis-validator';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\n\n/** Built-in aliases for different flex-basis values. */\nexport type FlexBasisAlias = 'grow' | 'initial' | 'auto' | 'none' | 'nogrow' | 'noshrink';\n\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive({selector: `\n  [fxFlex],\n  [fxFlex.xs], [fxFlex.sm], [fxFlex.md], [fxFlex.lg], [fxFlex.xl],\n  [fxFlex.lt-sm], [fxFlex.lt-md], [fxFlex.lt-lg], [fxFlex.lt-xl],\n  [fxFlex.gt-xs], [fxFlex.gt-sm], [fxFlex.gt-md], [fxFlex.gt-lg],\n`\n})\nexport class FlexDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /** The flex-direction of this element's flex container. Defaults to 'row'. */\n  protected _layout = 'row';\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShrink')     set shrink(val)    { this._cacheInput('shrink', val); };\n  @Input('fxGrow')       set grow(val)      { this._cacheInput('grow', val); };\n\n  @Input('fxFlex')       set flex(val)      { this._cacheInput('flex', val); };\n  @Input('fxFlex.xs')    set flexXs(val)    { this._cacheInput('flexXs', val); };\n  @Input('fxFlex.sm')    set flexSm(val)    { this._cacheInput('flexSm', val); };\n  @Input('fxFlex.md')    set flexMd(val)    { this._cacheInput('flexMd', val); };\n  @Input('fxFlex.lg')    set flexLg(val)    { this._cacheInput('flexLg', val); };\n  @Input('fxFlex.xl')    set flexXl(val)    { this._cacheInput('flexXl', val); };\n\n  @Input('fxFlex.gt-xs') set flexGtXs(val)  { this._cacheInput('flexGtXs', val); };\n  @Input('fxFlex.gt-sm') set flexGtSm(val)  { this._cacheInput('flexGtSm', val); };\n  @Input('fxFlex.gt-md') set flexGtMd(val)  { this._cacheInput('flexGtMd', val); };\n  @Input('fxFlex.gt-lg') set flexGtLg(val)  { this._cacheInput('flexGtLg', val); };\n\n  @Input('fxFlex.lt-sm') set flexLtSm(val) { this._cacheInput('flexLtSm', val); };\n  @Input('fxFlex.lt-md') set flexLtMd(val) { this._cacheInput('flexLtMd', val); };\n  @Input('fxFlex.lt-lg') set flexLtLg(val) { this._cacheInput('flexLtLg', val); };\n  @Input('fxFlex.lt-xl') set flexLtXl(val) { this._cacheInput('flexLtXl', val); };\n  /* tslint:enable */\n\n  // Note: Explicitly @SkipSelf on LayoutDirective and LayoutWrapDirective because we are looking\n  //       for the parent flex container for this flex item.\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer2,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              @Optional() @SkipSelf() protected _wrap: LayoutWrapDirective) {\n\n    super(monitor, elRef, renderer);\n\n    this._cacheInput('flex', '');\n    this._cacheInput('shrink', 1);\n    this._cacheInput('grow', 1);\n\n    if (_container) {\n      // If this flex item is inside of a flex container marked with\n      // Subscribe to layout immediate parent direction changes\n      this._layoutWatcher = _container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['flex'] != null || this._mqActivation) {\n      this._updateStyle();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('flex', '', (changes: MediaChange) => {\n      this._updateStyle(changes.value);\n    });\n    this._updateStyle();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateStyle();\n  }\n\n  protected _updateStyle(value?: string|number) {\n    let flexBasis = value || this._queryInput('flex') || '';\n    if (this._mqActivation) {\n      flexBasis = this._mqActivation.activatedInput;\n    }\n\n    let basis = String(flexBasis).replace(';', '');\n    let parts = validateBasis(basis, this._queryInput('grow'), this._queryInput('shrink'));\n    this._applyStyleToElement(this._validateValue.apply(this, parts));\n  }\n\n  /**\n   * Validate the value to be one of the acceptable value options\n   * Use default fallback of 'row'\n   */\n  protected _validateValue(grow: number|string,\n                           shrink: number|string,\n                           basis: string|number|FlexBasisAlias) {\n      // The flex-direction of this element's flex container. Defaults to 'row'.\n      let layout = this._getFlowDirection(this.parentElement, true);\n      let direction = (layout.indexOf('column') > -1) ? 'column' : 'row';\n      let css, isValue;\n\n      grow = (grow == '0') ? 0 : grow;\n      shrink = (shrink == '0') ? 0 : shrink;\n\n      // flex-basis allows you to specify the initial/starting main-axis size of the element,\n      // before anything else is computed. It can either be a percentage or an absolute value.\n      // It is, however, not the breaking point for flex-grow/shrink properties\n      //\n      // flex-grow can be seen as this:\n      //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n      //   1: (Default value). Stretch; will be the same size to all other flex items on\n      //       the same row since they have a default value of 1.\n      //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n      //      with 'flex-grow: 1' on the same row.\n\n      // Use `null` to clear existing styles.\n      let clearStyles = {\n        'max-width': null,\n        'max-height': null,\n        'min-width': null,\n        'min-height': null\n      };\n      switch (basis || '') {\n        case '':\n          css = extendObject(clearStyles, {'flex': '1 1 0.000000001px'});\n          break;\n        case 'initial':   // default\n        case 'nogrow':\n          grow = 0;\n          css = extendObject(clearStyles, {'flex': '0 1 auto'});\n          break;\n        case 'grow':\n          css = extendObject(clearStyles, {'flex': '1 1 100%'});\n          break;\n        case 'noshrink':\n          shrink = 0;\n          css = extendObject(clearStyles, {'flex': '1 0 auto'});\n          break;\n        case 'auto':\n          css = extendObject(clearStyles, {'flex': `${grow} ${shrink} auto`});\n          break;\n        case 'none':\n          grow = 0;\n          shrink = 0;\n          css = extendObject(clearStyles, {'flex': '0 0 auto'});\n          break;\n        default:\n          let hasCalc = String(basis).indexOf('calc') > -1;\n          let isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n\n          isValue = hasCalc ||\n              String(basis).indexOf('px') > -1 ||\n              String(basis).indexOf('em') > -1 ||\n              String(basis).indexOf('vw') > -1 ||\n              String(basis).indexOf('vh') > -1;\n\n          // Defaults to percentage sizing unless `px` is explicitly set\n          if (!isValue && !isPercent && !isNaN(basis as any)) {\n            basis = basis + '%';\n          }\n\n          if (basis === '0px') {\n            basis = '0%';\n          }\n\n          // Set max-width = basis if using layout-wrap\n          // tslint:disable-next-line:max-line-length\n          // @see https://github.com/philipwalton/flexbugs#11-min-and-max-size-declarations-are-ignored-when-wrappifl-flex-items\n\n          css = extendObject(clearStyles, { // fix issue #5345\n            'flex': `${grow} ${shrink} ${(isValue || this._wrap) ? basis : '100%'}`,\n          });\n          break;\n      }\n\n      let max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n      let min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n      let usingCalc = (String(basis).indexOf('calc') > -1) || (basis == 'auto');\n      let isPx = String(basis).indexOf('px') > -1 || usingCalc;\n\n\n      // make box inflexible when shrink and grow are both zero\n      // should not set a min when the grow is zero\n      // should not set a max when the shrink is zero\n      let isFixed = !grow && !shrink;\n      css[min] = (basis == '0%') ? 0 : isFixed || (isPx && grow) ? basis : null;\n      css[max] = (basis == '0%') ? 0 : isFixed || (!usingCalc && shrink) ? basis : null;\n\n    return extendObject(css, {'box-sizing': 'border-box'});\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges, Self, Optional,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from '../core/base';\nimport {LayoutDirective} from './layout';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {validateWrapValue, LAYOUT_VALUES} from '../../utils/layout-validator';\n/**\n * @deprecated\n * This functionality is now part of the `fxLayout` API\n *\n * 'layout-wrap' flexbox styling directive\n * Defines wrapping of child elements in layout container\n * Optional values: reverse, wrap-reverse, none, nowrap, wrap (default)]\n *\n *\n * @see https://css-tricks.com/almanac/properties/f/flex-wrap/\n */\n@Directive({selector: `\n  [fxLayoutWrap], [fxLayoutWrap.xs], [fxLayoutWrap.sm], [fxLayoutWrap.lg], [fxLayoutWrap.xl],\n  [fxLayoutWrap.gt-xs], [fxLayoutWrap.gt-sm], [fxLayoutWrap.gt-md], [fxLayoutWrap.gt-lg],\n  [fxLayoutWrap.lt-xs], [fxLayoutWrap.lt-sm], [fxLayoutWrap.lt-md], [fxLayoutWrap.lt-lg]\n`})\nexport class LayoutWrapDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxLayoutWrap')       set wrap(val)     { this._cacheInput('wrap', val); }\n  @Input('fxLayoutWrap.xs')    set wrapXs(val)   { this._cacheInput('wrapXs', val); }\n  @Input('fxLayoutWrap.sm')    set wrapSm(val)   { this._cacheInput('wrapSm', val); };\n  @Input('fxLayoutWrap.md')    set wrapMd(val)   { this._cacheInput('wrapMd', val); };\n  @Input('fxLayoutWrap.lg')    set wrapLg(val)   { this._cacheInput('wrapLg', val); };\n  @Input('fxLayoutWrap.xl')    set wrapXl(val)   { this._cacheInput('wrapXl', val); };\n\n  @Input('fxLayoutWrap.gt-xs') set wrapGtXs(val) { this._cacheInput('wrapGtXs', val); };\n  @Input('fxLayoutWrap.gt-sm') set wrapGtSm(val) { this._cacheInput('wrapGtSm', val); };\n  @Input('fxLayoutWrap.gt-md') set wrapGtMd(val) { this._cacheInput('wrapGtMd', val); };\n  @Input('fxLayoutWrap.gt-lg') set wrapGtLg(val) { this._cacheInput('wrapGtLg', val); };\n\n  @Input('fxLayoutWrap.lt-sm') set wrapLtSm(val) { this._cacheInput('wrapLtSm', val); };\n  @Input('fxLayoutWrap.lt-md') set wrapLtMd(val) { this._cacheInput('wrapLtMd', val); };\n  @Input('fxLayoutWrap.lt-lg') set wrapLtLg(val) { this._cacheInput('wrapLtLg', val); };\n  @Input('fxLayoutWrap.lt-xl') set wrapLtXl(val) { this._cacheInput('wrapLtXl', val); };\n\n  /* tslint:enable */\n  constructor(\n    monitor: MediaMonitor,\n    elRef: ElementRef,\n    renderer: Renderer2,\n    @Optional() @Self() container: LayoutDirective) {\n\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['wrap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('wrap', 'wrap', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n      super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase().replace('-reverse', '');\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n\n    this._updateWithValue();\n  }\n\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('wrap');\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n    value = validateWrapValue(value || 'wrap');\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  /**\n   * Build the CSS that should be assigned to the element instance\n   */\n  protected _buildCSS(value) {\n    return {\n      'display': 'flex',\n      'flex-wrap': value,\n      'flex-direction': this.flowDirection\n    };\n  }\n\n  protected get flowDirection(): string {\n    let computeFlowDirection = () => this._getFlowDirection(this.nativeElement);\n    return this._layoutWatcher ? this._layout : computeFlowDirection();\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n  Self,\n  AfterContentInit,\n  Optional,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from '../core/base';\nimport {LayoutDirective} from './layout';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n@Directive({\n  selector: `\n  [fxLayoutGap],\n  [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md], [fxLayoutGap.lg], [fxLayoutGap.xl],\n  [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md], [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl],\n  [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm], [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`\n})\nexport class LayoutGapDirective extends BaseFxDirective implements AfterContentInit, OnChanges,\n    OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n  protected _observer: MutationObserver;\n\n  /* tslint:disable */\n @Input('fxLayoutGap')       set gap(val) { this._cacheInput('gap', val); }\n @Input('fxLayoutGap.xs')    set gapXs(val) { this._cacheInput('gapXs', val); }\n @Input('fxLayoutGap.sm')    set gapSm(val) { this._cacheInput('gapSm', val); };\n @Input('fxLayoutGap.md')    set gapMd(val) { this._cacheInput('gapMd', val); };\n @Input('fxLayoutGap.lg')    set gapLg(val) { this._cacheInput('gapLg', val); };\n @Input('fxLayoutGap.xl')    set gapXl(val) { this._cacheInput('gapXl', val); };\n\n @Input('fxLayoutGap.gt-xs') set gapGtXs(val) { this._cacheInput('gapGtXs', val); };\n @Input('fxLayoutGap.gt-sm') set gapGtSm(val) { this._cacheInput('gapGtSm', val); };\n @Input('fxLayoutGap.gt-md') set gapGtMd(val) { this._cacheInput('gapGtMd', val); };\n @Input('fxLayoutGap.gt-lg') set gapGtLg(val) { this._cacheInput('gapGtLg', val); };\n\n @Input('fxLayoutGap.lt-sm') set gapLtSm(val) { this._cacheInput('gapLtSm', val); };\n @Input('fxLayoutGap.lt-md') set gapLtMd(val) { this._cacheInput('gapLtMd', val); };\n @Input('fxLayoutGap.lt-lg') set gapLtLg(val) { this._cacheInput('gapLtLg', val); };\n @Input('fxLayoutGap.lt-xl') set gapLtXl(val) { this._cacheInput('gapLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer2,\n              @Optional() @Self() container: LayoutDirective,\n              private _zone: NgZone) {\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['gap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngAfterContentInit() {\n    this._watchContentChanges();\n    this._listenForMediaQueryChanges('gap', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Watch for child nodes to be added... and apply the layout gap styles to each.\n   * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n   */\n  protected _watchContentChanges() {\n    this._zone.runOutsideAngular(() => {\n\n      if (typeof MutationObserver !== 'undefined') {\n        this._observer = new MutationObserver((mutations: MutationRecord[]) => {\n          let validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n                (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this._updateWithValue();\n          }\n        });\n        this._observer.observe(this.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n    this._updateWithValue();\n  }\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('gap') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Gather all non-hidden Element nodes\n    let items = this.childrenNodes\n        .filter(el => el.nodeType === 1 && this._getDisplayStyle(el) != 'none');\n    let numItems = items.length;\n\n    if (numItems > 1) {\n      let lastItem = items[numItems - 1];\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      items = items.filter((_, j) => j < numItems - 1);\n      this._applyStyleToElements(this._buildCSS(value), items);\n\n      // Clear all gaps for all visible elements\n      this._applyStyleToElements(this._buildCSS(), [lastItem]);\n    }\n  }\n\n  /**\n   * Prepare margin CSS, remove any previous explicitly\n   * assigned margin assignments\n   */\n  private _buildCSS(value: any = null) {\n    let key, margins = {\n      'margin-left': null,\n      'margin-right': null,\n      'margin-top': null,\n      'margin-bottom': null\n    };\n\n    switch (this._layout) {\n      case 'column':\n      case 'column-reverse':\n        key = 'margin-bottom';\n        break;\n      case 'row' :\n      case 'row-reverse':\n      default :\n        key = 'margin-right';\n        break;\n    }\n    margins[key] = value;\n\n    return margins;\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  SimpleChanges, Self,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {extendObject} from '../../utils/object-extend';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {LayoutDirective} from './layout';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n@Directive({selector: `\n  [fxLayoutAlign],\n  [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md], [fxLayoutAlign.lg],[fxLayoutAlign.xl],\n  [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md], [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl],\n  [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm], [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`})\nexport class LayoutAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxLayoutAlign')       set align(val)     { this._cacheInput('align', val); }\n  @Input('fxLayoutAlign.xs')    set alignXs(val)   { this._cacheInput('alignXs', val); }\n  @Input('fxLayoutAlign.sm')    set alignSm(val)   { this._cacheInput('alignSm', val); };\n  @Input('fxLayoutAlign.md')    set alignMd(val)   { this._cacheInput('alignMd', val); };\n  @Input('fxLayoutAlign.lg')    set alignLg(val)   { this._cacheInput('alignLg', val); };\n  @Input('fxLayoutAlign.xl')    set alignXl(val)   { this._cacheInput('alignXl', val); };\n\n  @Input('fxLayoutAlign.gt-xs') set alignGtXs(val) { this._cacheInput('alignGtXs', val); };\n  @Input('fxLayoutAlign.gt-sm') set alignGtSm(val) { this._cacheInput('alignGtSm', val); };\n  @Input('fxLayoutAlign.gt-md') set alignGtMd(val) { this._cacheInput('alignGtMd', val); };\n  @Input('fxLayoutAlign.gt-lg') set alignGtLg(val) { this._cacheInput('alignGtLg', val); };\n\n  @Input('fxLayoutAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxLayoutAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxLayoutAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxLayoutAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  /* tslint:enable */\n  constructor(\n      monitor: MediaMonitor,\n      elRef: ElementRef, renderer: Renderer2,\n      @Optional() @Self() container: LayoutDirective) {\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('align', 'start stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if ( this._layoutWatcher ) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n    this._allowStretching(value, !this._layout ? 'row' : this._layout);\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n\n    let value = this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n    this._allowStretching(value, this._layout || 'row');\n  }\n\n  protected _buildCSS(align) {\n    let css = {}, [main_axis, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    // Main axis\n    switch (main_axis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'space-evenly':\n        css['justify-content'] = 'space-evenly';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (cross_axis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'baseline':\n        css['align-items'] = 'baseline';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : this._layout || 'row',\n      'box-sizing' : 'border-box'\n    });\n  }\n\n\n  /**\n   * Update container element to 'stretch' as needed...\n   * NOTE: this is only done if the crossAxis is explicitly set to 'stretch'\n   */\n  protected _allowStretching(align, layout) {\n    let [, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    if (cross_axis == 'stretch') {\n      // Use `null` values to remove style\n      this._applyStyleToElement({\n        'box-sizing': 'border-box',\n        'max-width': !isFlowHorizontal(layout) ? '100%' : null,\n        'max-height': isFlowHorizontal(layout) ? '100%' : null\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\n\nimport {BaseFxDirective} from '../core/base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive({selector: `\n  [fxLayout],\n  [fxLayout.xs], [fxLayout.sm], [fxLayout.md], [fxLayout.lg], [fxLayout.xl],\n  [fxLayout.lt-sm], [fxLayout.lt-md], [fxLayout.lt-lg], [fxLayout.lt-xl],\n  [fxLayout.gt-xs], [fxLayout.gt-sm], [fxLayout.gt-md], [fxLayout.gt-lg]\n`})\nexport class LayoutDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Create Observable for nested/child 'flex' directives. This allows\n   * child flex directives to subscribe/listen for flexbox direction changes.\n   */\n  protected _announcer: BehaviorSubject<string>;\n\n  /**\n   * Publish observer to enabled nested, dependent directives to listen\n   * to parent 'layout' direction changes\n   */\n  public layout$: Observable<string>;\n\n  /* tslint:disable */\n  @Input('fxLayout')       set layout(val)     { this._cacheInput('layout', val); };\n  @Input('fxLayout.xs')    set layoutXs(val)   { this._cacheInput('layoutXs', val); };\n  @Input('fxLayout.sm')    set layoutSm(val)   { this._cacheInput('layoutSm', val); };\n  @Input('fxLayout.md')    set layoutMd(val)   { this._cacheInput('layoutMd', val); };\n  @Input('fxLayout.lg')    set layoutLg(val)   { this._cacheInput('layoutLg', val); };\n  @Input('fxLayout.xl')    set layoutXl(val)   { this._cacheInput('layoutXl', val); };\n\n  @Input('fxLayout.gt-xs') set layoutGtXs(val) { this._cacheInput('layoutGtXs', val); };\n  @Input('fxLayout.gt-sm') set layoutGtSm(val) { this._cacheInput('layoutGtSm', val); };\n  @Input('fxLayout.gt-md') set layoutGtMd(val) { this._cacheInput('layoutGtMd', val); };\n  @Input('fxLayout.gt-lg') set layoutGtLg(val) { this._cacheInput('layoutGtLg', val); };\n\n  @Input('fxLayout.lt-sm') set layoutLtSm(val) { this._cacheInput('layoutLtSm', val); };\n  @Input('fxLayout.lt-md') set layoutLtMd(val) { this._cacheInput('layoutLtMd', val); };\n  @Input('fxLayout.lt-lg') set layoutLtLg(val) { this._cacheInput('layoutLtLg', val); };\n  @Input('fxLayout.lt-xl') set layoutLtXl(val) { this._cacheInput('layoutLtXl', val); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor, elRef: ElementRef, renderer: Renderer2) {\n    super(monitor, elRef, renderer);\n    this._announcer = new BehaviorSubject<string>('row');\n    this.layout$ = this._announcer.asObservable();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxLayout')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['layout'] != null || this._mqActivation) {\n      this._updateWithDirection();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('layout', 'row', (changes: MediaChange) => {\n      this._updateWithDirection(changes.value);\n    });\n    this._updateWithDirection();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Validate the direction value and then update the host's inline flexbox styles\n   */\n  protected _updateWithDirection(value?: string) {\n    value = value || this._queryInput('layout') || 'row';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Update styles and announce to subscribers the *new* direction\n    let css = buildLayoutCSS(value);\n\n    this._applyStyleToElement(css);\n    this._announcer.next(css['flex-direction']);\n  }\n\n\n\n\n\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {BreakPoint} from './breakpoints/break-point';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\nimport {MatchMedia} from './match-media';\nimport {MediaChange} from './media-change';\n\nimport {mergeAlias} from '../utils/add-alias';\n\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operator/filter';\nimport {map} from 'rxjs/operator/map';\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n */\n@Injectable()\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    let items: BreakPoint[] = this._breakpoints.overlappings.reverse();\n    return items.filter((bp: BreakPoint) => {\n      return this._matchMedia.isActive(bp.mediaQuery);\n    });\n  }\n\n  get active(): BreakPoint {\n    let found = null, items = this.breakpoints.reverse();\n    items.forEach(bp => {\n      if (bp.alias !== '') {\n        if (!found && this._matchMedia.isActive(bp.mediaQuery)) {\n          found = bp;\n        }\n      }\n    });\n\n    let first = this.breakpoints[0];\n    return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias?: string): Observable<MediaChange> {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    let hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    let media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return filter.call(map.call(media$, change => mergeAlias(change, bp)), hasAlias);\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    let queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from '../media-query/media-change';\nimport {BreakPoint} from '../media-query/breakpoints/break-point';\nimport {extendObject} from './object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint) {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {ɵgetDOM as getDom, DOCUMENT} from '@angular/platform-browser';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operator/filter';\n\nimport {MediaChange} from './media-change';\n\n/**\n * EventHandler callback with the mediaQuery [range] activates or deactivates\n */\nexport interface MediaQueryListListener {\n  // Function with Window's MediaQueryList argument\n  (mql: MediaQueryList): void;\n}\n\n/**\n * EventDispatcher for a specific mediaQuery [range]\n */\nexport interface MediaQueryList {\n  readonly matches: boolean;\n  readonly media: string;\n\n  addListener(listener: MediaQueryListListener): void;\n\n  removeListener(listener: MediaQueryListListener): void;\n}\n\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable()\nexport class MatchMedia {\n  protected _registry: Map<string, MediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone, @Inject(DOCUMENT) protected _document: any) {\n    this._registry = new Map<string, MediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    if (this._registry.has(mediaQuery)) {\n      let mql = this._registry.get(mediaQuery);\n      return mql.matches;\n    }\n    return false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    this.registerQuery(mediaQuery);\n\n    return filter.call(this._observable$, (change: MediaChange) => {\n      return mediaQuery ? (change.mediaQuery === mediaQuery) : true;\n    });\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    let list = normalizeQuery(mediaQuery);\n\n    if (list.length > 0) {\n      prepareQueryCSS(list, this._document);\n\n      list.forEach(query => {\n        let mql = this._registry.get(query);\n        let onMQLEvent = (e: MediaQueryList) => {\n          this._zone.run(() => {\n            let change = new MediaChange(e.matches, query);\n            this._source.next(change);\n          });\n        };\n\n        if (!mql) {\n          mql = this._buildMQL(query);\n          mql.addListener(onMQLEvent);\n          this._registry.set(query, mql);\n        }\n\n        if (mql.matches) {\n          onMQLEvent(mql);  // Announce activate range for initial subscribers\n        }\n      });\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    let canListen = isBrowser() && !!(<any>window).matchMedia('all').addListener;\n\n    return canListen ? (<any>window).matchMedia(query) : <MediaQueryList>{\n      matches: query === 'all' || query === '',\n      media: query,\n      addListener: () => {\n      },\n      removeListener: () => {\n      }\n    };\n  }\n}\n\n/**\n * Determine if SSR or Browser rendering.\n */\nexport function isBrowser() {\n  return getDom().supportsDOMEvents();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param query string The mediaQuery used to create a faux CSS selector\n *\n */\nfunction prepareQueryCSS(mediaQueries: string[], _document: any) {\n  let list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    let query = list.join(', ');\n\n    try {\n      let styleEl = getDom().createElement('style');\n\n      getDom().setAttribute(styleEl, 'type', 'text/css');\n      if (!styleEl['styleSheet']) {\n        let cssText = `/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}`;\n        getDom().appendChild(styleEl, getDom().createTextNode(cssText));\n      }\n\n      getDom().appendChild(_document.head, styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n/**\n * Always convert to unique list of queries; for iteration in ::registerQuery()\n */\nfunction normalizeQuery(mediaQuery: string | string[]): string[] {\n  return (typeof mediaQuery === 'undefined') ? [] :\n      (typeof mediaQuery === 'string') ? [mediaQuery] : unique(mediaQuery as string[]);\n}\n\n/**\n * Filter duplicate mediaQueries in the list\n */\nfunction unique(list: string[]): string[] {\n  let seen = {};\n  return list.filter(item => {\n    return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n  });\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string;\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overriden from custom, application-specific ranges\n *\n */\n@Injectable()\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[ ]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[ ] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint {\n    return this._registry.find(bp => bp.alias == alias);\n  }\n\n  findByQuery(query: string): BreakPoint {\n    return this._registry.find(bp => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => it.suffix);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// @TODO - remove after updating to TS v2.4\n// tslint:disable:no-unused-variable\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n    new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, Renderer2} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {ResponsiveActivation} from './responsive-activation';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n\n/**\n * Adapter to the BaseFxDirective abstract class so it can be used via composition.\n * @see BaseFxDirective\n */\nexport class BaseFxDirectiveAdapter extends BaseFxDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseFxDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation;\n  }\n\n  /**\n   * BaseFxDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _renderer: Renderer2) {\n    super(_mediaMonitor, _elementRef, _renderer);\n  }\n\n\n  /**\n   * @see BaseFxDirective._queryInput\n   */\n  queryInput(key) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error(\n        `Invalid class value '${key}' provided. Did you want to cache the raw value?`\n      );\n    }\n  }\n\n  /**\n   * @see BaseFxDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    this._inputMap[key] = source;\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source.join(' ');\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes = [];\n    for (let prop in source) {\n      if (!!source[prop]) {\n        classes.push(prop);\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n\n  /**\n   * Does this directive have 1 or more responsive keys defined\n   * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n   */\n  public get usesResponsiveAPI() {\n    const totalKeys = Object.keys(this._inputMap).length;\n    const baseValue = this._inputMap[this._baseKey];\n    return  (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef, OnDestroy, SimpleChanges, OnChanges,\n  SimpleChange, Renderer2\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  lookupStyle,\n  lookupInlineStyle,\n  applyStyleToElement,\n  applyStyleToElements\n} from '../../utils/style-utils';\n\nimport {ResponsiveActivation, KeyOptions} from '../core/responsive-activation';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective implements OnDestroy, OnChanges {\n\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _renderer: Renderer2) {\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access to host element's parent DOM node\n   */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  protected get nativeElement(): any {\n    return this._elementRef.nativeElement;\n  }\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._display = this._getDisplayStyle();\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseFxDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    this._mediaMonitor = null;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows use to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source: HTMLElement = this.nativeElement): string {\n    return lookupStyle(source || this.nativeElement, 'display');\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlowDirection(target: any, addIfMissing = false): string {\n    let value = 'row';\n\n    if (target) {\n      value = lookupStyle(target, 'flex-direction') || 'row';\n      let hasInlineValue = lookupInlineStyle(target, 'flex-direction');\n\n      if (!hasInlineValue && addIfMissing) {\n        applyStyleToElements(this._renderer, buildLayoutCSS(value), [target]);\n      }\n    }\n\n    return value.trim();\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 nativeElement: any = this.nativeElement) {\n    let element = nativeElement || this.nativeElement;\n    applyStyleToElement(this._renderer, element, style, value);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[ ]) {\n    applyStyleToElements(this._renderer, style, elements || []);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(\n          keyOptions,\n          this._mediaMonitor,\n          (change) => onMediaQueryChange(change)\n      );\n    }\n    return this._mqActivation;\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    const obj = this.nativeElement.children;\n    const buffer = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** Original dom Elements CSS display style */\n  protected _display;\n\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs/Subscription';\nimport {map} from 'rxjs/operator/map';\n\nimport {MediaChange, MediaQuerySubscriber} from '../../media-query/media-change';\nimport {BreakPoint} from '../../media-query/breakpoints/break-point';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {extendObject} from '../../utils/object-extend';\n\nexport declare type SubscriptionList = Subscription[ ];\n\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nexport class ResponsiveActivation {\n  private _subscribers: SubscriptionList = [];\n  private _activatedInputKey: string;\n  private _registryMap: BreakPointX[];\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n    this._registryMap = this._buildRegistryMap();\n    this._subscribers = this._configureChangeObservers();\n  }\n\n  /**\n   * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n   * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n   * important when several media queries are 'registered' and from which, the browser uses the\n   * first matching media query.\n   */\n  get registryFromLargest(): BreakPointX[] {\n    return [...this._registryMap].reverse();\n  }\n\n  /**\n   * Accessor to the DI'ed directive property\n   * Each directive instance has a reference to the MediaMonitor which is\n   * used HERE to subscribe to mediaQuery change notifications.\n   */\n  get mediaMonitor(): MediaMonitor {\n    return this._mediaMonitor;\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    let key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  public hasKeyValue(key) {\n    let value = this._options.inputKeys[key];\n    return typeof value !== 'undefined';\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach((link: Subscription) => {\n      link.unsubscribe();\n    });\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): SubscriptionList {\n    let subscriptions = [];\n\n    this._registryMap.forEach((bp: BreakPointX) => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        let buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n            map.call(this.mediaMonitor.observe(bp.alias), buildChanges)\n                .subscribe(change => {\n                  this._onMonitorEvents(change);\n                })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this.mediaMonitor.breakpoints\n        .map(bp => {\n          return <BreakPointX> extendObject({}, bp, {\n            baseKey: this._options.baseKey,             // e.g. layout, hide, self-align, flex-wrap\n            key: this._options.baseKey + bp.suffix  // e.g.  layoutGtSm, layoutMd, layoutGtLg\n          });\n        })\n        .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property == this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                     // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey == currentKey) ? null : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey) {\n    let items: BreakPoint[] = this.mediaMonitor.activeOverlaps;\n    let isMissingKey = (key) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      items.some(bp => {\n        let key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Renderer2} from '@angular/core';\nimport {ɵgetDOM as getDom} from '@angular/platform-browser';\nimport {applyCssPrefixes} from './auto-prefixer';\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5}).\n */\nexport type StyleDefinition = string | { [property: string]: string | number };\n\n\n/**\n * Applies styles given via string pair or object map to the directive element.\n */\nexport function applyStyleToElement(renderer: Renderer2,\n                                    element: any,\n                                    style: StyleDefinition,\n                                    value?: string | number) {\n  let styles = {};\n  if (typeof style === 'string') {\n    styles[style] = value;\n    style = styles;\n  }\n\n  styles = applyCssPrefixes(style);\n  applyMultiValueStyleToElement(styles, element, renderer);\n}\n\n\n/**\n * Applies styles given via string pair or object map to the directive's element.\n */\nexport function applyStyleToElements(renderer: Renderer2,\n                              style: StyleDefinition,\n                              elements: HTMLElement[ ]) {\n  let styles = applyCssPrefixes(style);\n\n  elements.forEach(el => {\n    applyMultiValueStyleToElement(styles, el, renderer);\n  });\n}\n\n/**\n * Applies the styles to the element. The styles object map may contain an array of values.\n * Each value will be added as element style.\n */\nexport function applyMultiValueStyleToElement(styles: {}, element: any, renderer: Renderer2) {\n  Object.keys(styles).forEach(key => {\n    const values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n    for (let value of values) {\n      renderer.setStyle(element, key, value);\n    }\n  });\n}\n\n/**\n * Find the DOM element's inline style value (if any)\n */\nexport function lookupInlineStyle(element: HTMLElement, styleName: string): string {\n  return getDom().getStyle(element, styleName);\n}\n\n/**\n * Determine the inline or inherited CSS style\n */\nexport function lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n  let value = '';\n  if (element) {\n    try {\n      let immediateValue = value = lookupInlineStyle(element, styleName);\n      if ( !inlineOnly ) {\n        value = immediateValue || getDom().getComputedStyle(element).getPropertyValue(styleName);\n      }\n    } catch (e) {\n      // TODO: platform-server throws an exception for getComputedStyle\n    }\n  }\n\n  // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n  //       in which case getComputedStyle() should determine a valid value.\n  return value ? value.trim() : 'block';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap] = validateValue(value);\n  return  buildCSS(direction, wrap);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap] = value.split(' ');\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n  return [direction, validateWrapValue(wrap)];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, _] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null) {\n  return {\n    'display': 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('2.0.0-beta.9-5f198a3');\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}"],"names":["NgStyle","tslib_1.__extends","Input","NgClass","Optional","Self","KeyValueDiffers","IterableDiffers","Renderer2","ElementRef","Directive","SkipSelf","_","map","NgZone","BehaviorSubject","Injectable","filter","ɵgetDOM","Inject","DOCUMENT","getDom","InjectionToken","SimpleChange","Version"],"mappings":";;;;;;;;;;;;;AuCAA;;;;;;;;;;;;;;;;AAgBA,IAAI,aAAa,GAAG,MAAM,CAAC,cAAc;KACpC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;IAC5E,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;;AAE/E,AAAO,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;IAC5B,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;IACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;CACxF,AAED,AAAO,AACH,AAIA,AACH,AAED,AAAO,AAQN,AAED,AAAO,AAKN,AAED,AAAO,AAEN,AAED,AAAO,AAEN,AAED,AAAO,AAON,AAED,AAAO,AA0BN,AAED,AAAO,AAEN,AAED,AAAO,AASN,AAED,AAAO,AAeN,AAED,AAAO,AAIN,AAED,AAAO,AAEN,AAED,AAAO,AAUN,AAED,AAAO,AAIN,AAED,AAAO;;ADjJN,IAAD,OAAA,GAAA,IAAAwB,qBAAA,CAAA,mBAAA,CAAA,CAAC;;ADHA,SAAD,cAAC,CAAD,KAAA,EAAA;IAMA,IAAA,EAAA,GAAA,aAAA,CAAA,KAAA,CAAA,EAAA,SAAA,GAAA,EAAA,CAAA,CAAA,CAAA,EAAA,IAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;IACE,OAAF,QAAA,CADkB,SAClB,EAAA,IAAA,CAAA,CAAA;CACA;AACA,SAAA,aAAA,CAAA,KAAA,EAAA;IAOA,KAAA,GAAA,KAAA,GAAA,KAAA,CAAA,WAAA,EAAA,GAAA,EAAA,CAAA;IACE,IAAF,EAAA,GAAA,KAAA,CAAA,KAAA,CAFkB,GAElB,CAAA,EAAA,SAAA,GAAA,EAF2C,CAE3C,CAAA,CAAA,EAAA,IAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;IACE,IAFI,CAAA,aAEN,CAAA,IAAA,CAF0B,UAE1B,CAFiC,EAEjC,EAFuC,OAEvC,CAAA,KAAA,SAAA,CAAA,EAAA,CAAA,EAAA;QACM,SAAN,GAAA,aAF+B,CAAA,CAE/B,CAAA,CAAA;KACA;IACA,OAAA,CAAA,SAAA,EAAA,iBAAA,CAAA,IAAA,CAAA,CAAA,CAAA;CACA;AACA,SAAA,gBAAA,CAAA,KAAA,EAAA;IAOA,IAAA,EAAA,GAAA,aAHC,CAGD,KAAA,CAAA,EAAA,IAAA,GAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;IACE,OAAF,IAHa,CAAA,OAGb,CAAA,KAAA,CAAA,GAHkB,CAAc,CAGhC,CAAA;CACA;AACA,SAAA,iBAAA,CAAA,KAAA,EAAA;IAMA,IAAA,CAAA,CAAA,KAAA,EAAA;QACM,QAAN,KAAA,CAAA,WAAA,EAAA;YACA,KAAA,SAAA,CAAA;YACM,KAJK,cAIX,CAAA;YACM,KAJK,cAAA;gBAKX,KAAA,GAAA,cAAA,CAAA;gBACQ,MAAR;YACA,KAAA,IAAA,CAAc;YAER,KAJK,MAIX,CAAA;YACM,KAJK,QAIX;gBACA,KAAA,GAAA,QAAA,CAAA;gBACQ,MAAR;YACA;gBAGA,KAAA,GAAA,MAAA,CAAA;gBACQ,MAAR;SACA;KACA;IACA,OAAA,KAAA,CAAA;CACA;AACA,SAAA,QAAA,CAAA,SAAA,EAAA,IAAA,EAAA;IAaA,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA,EAJC,IAID,GAAA,IAAA,CAAA,EAAA;IACE,OAJO;QAKL,SAAS,EAJE,MAAA;QAKX,YAAY,EAJE,YAAA;QAKd,gBAAgB,EAJE,SAAA;QAKlB,WAAW,EAJE,CAAA,CAAE,IAAC,GAAM,IAAA,GAAO,IAAA;KAK9B,CAJC;CAKH;;ID1ED,KAAA,IAAA,GAAA,IAAA,MAKC,EALD;QACA,IAAA,KAAA,GAKkB,MAAA,CALlB,GAAA,CAAA,IAAA,EAAA,CAAA;QACI,QAAJ,GAAA;YAEA,KAAA,SAAA;gBACA,IAAA,KAAA,KAAA,MAAA,EAAA;oBACY,MAAZ,CAAA,SAKsB,CALtB,GAAA;wBACA,cAAA;wBACY,MAAZ;qBACA,CAAA;iBACA;qBACA,IAAA,KAAA,KAAA,aAAA,EAAA;oBAKA,MAAA,CAAA,SAAA,CAAA,GAAA;wBAJA,qBAAA;wBACY,aAAZ;qBACA,CAAA;iBACA;qBACA;oBAKA,MAAA,CAAA,SAAA,CAAA,GAAA,KAAA,CAAA;iBAJA;gBACA,MAAA;YACA,KAAA,aAAA,CAAA;YAEM,KAKK,YALX,CAKW;YAJL,KAKK,eALX,CAAA;YACM,KAKK,MALX,CAAA;YACM,KAKK,YALX,CAAA;YACM,KAKK,WALX,CAKW;YAJL,KAKK,WAAA,CAAY;YAJjB,KAKK,aALX,CAAA;YACM,KAKK,WALX,CAAA;YACM,KAKK,iBALX;gBACA,MAAA,CAAA,UAAA,GAAA,GAAA,CAAA,GAAA,KAAA,CAAA;gBACQ,MAAM;YACd,KAAA,gBAAA;gBAEA,KAAA,GAAA,KAAA,IAKW,KALX,CAAA;gBACQ,MAAR,CAAA,wBAAA,CAAA,GAAA,KAAA,CAAA;gBACQ,MAAM,CAKC,gBALf,CAAA,GAAA,KAKwC,CALxC;gBACQ,MAAM;YACd,KAAA,OAAA;gBAEA,MAAA,CAAA,OAAA,CAAA,GAAA,MAAA,CAAA,UAAA,GAAA,GAAA,CAAA,GAAA,KAAA,CAAA,KAAA,CAAA,GAAA,GAAA,GAAA,KAAA,CAAA;gBACQ,MAAM;SACd;KACA;IACA,OAAA,MAAA,CAAA;CACA;AACA,SAAA,mBAAA,CAAA,QAAA,EAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA;;IDpCA,IAAA,OAAA,KAAA,KAAA,QAAA,EAAA;QAAM,MAAA,CAIN,KAJkB,CAIlB,GAAA,KAAA,CAAA;QACM,KAAN,GAAA,MAAA,CAAA;KACA;IACA,MAAA,GAAS,gBAAT,CAAA,KAAA,CAAA,CAAA;IACA,6BAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,CAAA,CAAA;CAEA;AACA,SAAA,oBAAA,CAAA,QAAA,EAJiC,KAIjC,EAAA,QAAA,EAAA;IACA,IAAA,MAAA,GAAA,gBAAA,CAAA,KAAA,CAAA,CAAA;IAQA,QAAA,CAAA,OAAA,CAAA,UAAA,EAAA,EAAA;QAHM,6BAMN,CAAA,MAAA,EAAA,EAAA,EAAA,QAAA,CAAA,CAAA;KAEA,CAAA,CAAA;CACA;AACA,SAAA,6BAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA;IACA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;QASA,IAAA,MAAA,GAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,GATC,CASD,CATC,GASD,MATC,CASD,GAAA,CAAA,GATC,CASD,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA;QACA,KAAA,IAAA,EAAA,GATe,CAAM,EASrB,QAAA,GAAA,MAAA,EAAA,EAAA,GAAA,QAAA,CAAA,MAAA,EAAA,EAAA,EAAA,EAAA;YACA,IAAA,KAAA,GAAA,QAAA,CAAA,EAAA,CAT0B,CAAO;YAUjC,QAAA,CAAA,QAAA,CAAA,OAAA,EAAA,GAAA,EAAA,KAAA,CAAA,CAAA;SACA;KACA,CAAA,CAAA;CACA;AACA,SAAA,iBAAA,CAAA,OAAA,EAAA,SAAA,EAAA;IAOA,OAAAN,gCAAA,EAAA,CAAA,QAAA,CAAA,OAAA,EAAA,SAAA,CAAA,CAAA;CACA;AACA,SAAA,WAAA,CAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA;IAQA,IAAA,UAAA,KAAA,KAdC,CAcD,EAAA,EAAA,UAAA,GAAA,KAdC,CAcD,EAdC;IAeC,IAdI,KAAA,GAAQ,EAAA,CAAG;IAef,IAAI,OAdC,EAAQ;QAeX,IAdI;YAeF,IAdI,cAAA,GAAiB,KAAA,GAAQ,iBAAA,CAAkB,OAAC,EAAQ,SAAA,CAAU,CAAC;YAenE,IAdK,CAAA,UAAY,EAAE;gBAejB,KAAK,GAdG,cAAA,IAAkBG,gCAAA,EAAO,CAAE,gBAAC,CAAgB,OAAC,CAAO,CAAC,gBAAC,CAAgB,SAAC,CAAS,CAAC;aAe1F;SACF;QAdC,OAAA,CAAQ,EAAE;SAgBX;KACF;IAID,OAdO,KAAA,GAAQ,KAAA,CAAM,IAAC,EAAI,GAAI,OAAA,CAAQ;CAevC;;ID7FD,IAAA,OAAA,GAAA,EAAA,CAAA;IACE,KAAF,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAA,CAAA,MAAA,EAAA,EAAA,EAAA,EAAA;QACI,OAAJ,CAAA,EAAA,GAAA,CAAA,CAKU,GALV,SAAA,CAAA,EAAA,CAAA,CAAA;KACG;IAED,IAAF,IAAA,IAAA,IAAA,EAAA;QACI,MAAJ,SAAA,CAAA,4CAAA,CAAA,CAAA;KACA;IACA,KAAA,IAAA,EAAA,GAAA,CAAA,EAAA,SAAA,GAAA,OAAA,EAKkC,EALlC,GAAA,SAAA,CAAA,MAAA,EAAA,EAAA,EAAA,EAAA;QACA,IAAA,MAAA,GAAA,SAAA,CAAA,EAAA,CAAA,CAAA;QACA,IAAA,MAAA,IAAA,IAAA,EAAA;YACA,KAAA,IAAA,GAAA,IAAA,MAAA,EAAA;gBACA,IAAA,MAAA,CAAA,cAAA,CAAA,GAAA,CAAA,EAAA;oBACA,IAAA,CAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,CAAA,CAAA;iBAEA;aACA;;KDFA;IAMA,OAAA,IAAA,CALqB;CAArB;AACA,IAAA,UAAA,IAAA,YAAA;IACA,SAAA,UAAA,CAAA,OAAA,EAAA,YAAA,EAAA,SAAA,EAAA;QAMA,IAAA,CAAA,OAAA,GAAA,OAAA,CAAA;QACA,IAAA,CAAA,YAAA,GAAA,YAAA,CAAA;QAEA,IAAA,CAAA,SAAA,GAAA,SAAA,CAAA;KA+BA;IAhBA,OAAA,UAAsB,CAAtB;CACA,EAAA,CAAA,CAAA;AACA,IAAA,oBAAA,IAAsB,YAAtB;IATA,SAAA,oBAAA,CAAA,QAAA,EAAA,aAAA,EAAA,eAAA,EAAA;QA0BI,IAAI,CAAC,QAAT,GAAA,QAA4B,CAAC;QACzB,IAAI,CAAC,aAAT,GAAA,aAAA,CAAA;QACA,IAAA,CAAA,eAAA,GAAA,eAAA,CAAA;QARG,IAgBH,CAAA,YAAA,GAAA,EAAA,CAAA;QACI,IAAJ,CAAA,YAAA,GAAA,IAAA,CAAA,iBAAA,EAAA,CAAA;QACA,IAAA,CAAA,YAAA,GAAA,IAAA,CAAA,yBAAA,EAAA,CAAA;KAOA;IACA,MAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,SAAA,EAAA,qBAAA,EAAA;QACA,GAAA,EAAA,YAAA;YAUA,OAAA,IAAA,CAAA,YAAA,CAAA,KAAA,EAAA,CAAA,OAAA,EAAA,CAAA;SACA;QACA,UAAA,EAAA,IAAA;QAXG,YAgBH,EAhBG,IAgBH;KACA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,SAAA,EAAA,cAhBoE,EAgBpE;QACA,GAAA,EAAA,YAAA;YAXA,OAAG,IAAH,CAAA,aAAA,CAAA;SAkBA;QACI,UAAJ,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KAKA,CAAA,CAAA;IACA,MAAA,CAAA,cAjBU,CAAY,oBAiBtB,CAAA,SAAA,EAAA,mBAAA,EAAA;QACA,GAAA,EAAA,YAAA;YACA,OAAA,IAAA,CAAA,kBAAA,IAAA,IAAA,CAAA,QAAA,CAAA,OAAA,CAAA;SACA;QACA,UAAA,EAAA,IAAA;QAXA,YAAA,EAAA,IAAA;KAkBA,CAAA,CAAA;IAEA,MAAA,CAAA,cAjBU,CAAY,oBAiBtB,CAAA,SAAA,EAAA,gBAAA,EAAA;QACA,GAAA,EAAA,YAAA;YAGA,IAAQ,GAAR,GAAA,IAAA,CAAA,iBAAA,CAAA;YACA,OAAA,IAAA,CAAA,WAjBmB,CAAO,GAiB1B,CAAA,GAjBgC,IAiBhC,CAAA,eAAA,CAAA,GAAA,CAAA,GAAA,IAAA,CAAA,QAAA,CAAA,YAAA,CAAA;SACA;QACA,UAAA,EAAU,IAAV;QACA,YAAA,EAAA,IAAA;KAEA,CAAA,CAAA;IAEA,oBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAA,GAAA,EAAA;QACA,IAAA,KAAA,GAAkB,IAAI,CAjBC,QAiBvB,CAAA,SAAA,CAAA,GAAA,CAjByC,CAAM;QAkB/C,OAAA,OAAA,KAAA,KAAA,WAAA,CAAA;KAEA,CAAA;IACA,oBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;QAEI,IAAJ,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;YACA,IAAA,CAAA,WAAA,EAAA,CAAA;SAXA,CAAA,CAAA;QAkBI,IAAJ,CAAA,YAAA,GAAA,EAAA,CAAA;KACA,CAAA;IACA,oBAAA,CAAA,SAAA,CAjB6C,yBAiB7C,GAAA,YAAA;QACA,IAAA,KAAA,GAAA,IAAA,CAjBqB;QAkBrB,IAAA,aAjBiB,GAiBjB,EAAA,CAAA;QACA,IAAA,CAAW,YAAX,CAAA,OAAA,CAAA,UAAA,EAAA,EAAA;YACA,IAAA,KAAA,CAAA,SAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA;gBACA,IAjBgB,YAiBhB,GAAA,UAAA,MAAA,EAAA;oBACA,MAAA,GAAA,MAAA,CAAA,KAAA,EAAA,CAAA;oBAXG,MAAH,CAAG,QAAH,GAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA;oBAmBA,OAlBgB,MAkBhB,CAAA;iBACA,CAAY;gBAEF,aAAV,CAAA,IAAA,CAAAR,qBAAA,CAlB4B,IAkB5B,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,EAAA,CAAA,KAAA,CAAA,EAAA,YAAA,CAAA;qBACA,SAAA,CAAA,UAAA,MAAA,EAAA;oBACA,KAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,CAAA;iBAZG,CAAH,CAAA,CAAA;aAoBA;SACA,CAAA,CAAA;QATA,OAAA,aAAG,CAAA;KAqBH,CAAA;IACA,oBAAA,CApBiB,SAoBjB,CAAA,iBAAA,GAAA,YAAA;QAEI,IAAJ,KApBa,GAoBb,IApBa,CAAQ;QAsBjB,OAAJ,IAAA,CAAA,YAAA,CAAA,WAAA;aACA,GAAA,CAAA,UAAA,EAAA,EAAA;YACA,QAAA,YAAA,CAAA,EAAA,EAAA,EAAA,EAAA;gBAZA,OAAA,EAAA,KAAG,CAAH,QAAA,CAAA,OAAA;gBAsBA,GAAA,EAAA,KAAA,CAAA,QAAA,CAAA,OAAA,GAAA,EAAA,CAAA,MAAA;aACA,CAAA,EAAA;SAEA,CAAA;aACA,MAAA,CAAA,UAAA,EAAA,EAAA,EAAA,OAAA,KAAA,CAAA,SAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;KACA,CAAA;IACA,oBAAA,CAAA,SArB0B,CAqB1B,gBAAA,GAAA,UAAA,MAAA,EAAA;QACA,IAAA,MAAA,CAAA,QAAA,IArBqB,IAAI,CAqBzB,QAAA,CAAA,OAAA,EAAA;YACA,MAAA,CAAA,KAAA,GArBiB,IAAA,CAAK,wBAqBtB,CAAA,MAAA,CAAA,CAAA;YACA,IAAA,CAAS,eAAT,CAAA,MAAA,CAAA,CAAA;SACA;KACA,CAAA;IACA,oBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAA,GAAA,EAAA;QACI,OArBO,IAqBX,CAAA,eAAA,CAAA,GAAA,CAAA,KAAA,SAAA,CAAA;KACG,CAAH;IAhBG,oBAAH,CAAA,SAAA,CAAA,wBAAA,GAAA,UAAA,OAAA,EAAA;QAuBI,IAAJ,UAAA,GAAA,IAtByB,CAsBzB,QAtB0B,CAAS,OAsBnC,GAAA,OAAA,CAAA,MAAA,CAAA;QACA,IAAA,MAAA,GAAA,IAAA,CAAA,kBAAA,CAAA;QAEA,MAAA,GAAA,OAAA,CAAA,OAAA,GAAA,UAAA,IAAA,CAAA,MAAA,IAAA,UAAA,IAAA,IAAA,GAAA,MAAA,CAAA,CAAA;;QD3NA,OAAA,IAAA,CAAA,cAAA,CAAA;KA0CA,CAAA;IAPA,oBAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UAAA,QAAA,EAAA;QACwB,IAAxB,KAAA,GAAA,IAAwB,CAAxB;QACwB,IAAxB,KAAA,GAAA,IAAA,CAAwB,YAAxB,CAAA,cAAA,CAAA;QAoLG,IAAH,YAAA,GAAG,UAAH,GAAA,EAAA,EAAA,OAAA,CAAA,KAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,EAAA,CAAA;QAQG,IAAH,YAAA,CAAA,QAAA,CAAA,EAAG;YApLH,KAAA,CAAA,IAAA,CAAA,UAAA,EAAA,EAAA;gBAzCA,IAAA,GAAA,GAAA,KAAA,CAAA,QAAA,CAAA,OAAA,GAAA,EAAA,CAAA,MAAA,CAAA;gBAJW,IAKX,CALc,YAKd,CAAA,GAAA,CAAA,EAAA;oBACA,QAAA,GAAA,GAAA,CAAA;oBAMA,OAAA,IAAA,CAAA;iBACA;gBACA,OAAA,KAAA,CAAA;aAUA,CAAA,CAAA;SACA;QAEI,OAAJ,QAAA,CAAA;KACA,CAAA;IACA,oBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAA,GAAA,EAAA;QACA,OAAA,IAAA,CAAA,QAAA,CAAA,SAAA,CAN4B,GAM5B,CAAA,CAAA;KACA,CAAA;IACA,OAAA,oBAAA,CAAA;CAEA,EAAA,CAAA,CAAA;AACA,IAAA,eAAA,IAAA,YAAA;IAeA,SAAA,eAAA,CAAA,aAAA,EAAA,WAAA,EAAA,SAAA,EAAA;QACI,IAAJ,CAAA,aAAA,GAAA,aAAA,CAAA;QACA,IAAA,CAAA,WAAA,GAAA,WAAA,CAAA;QADG,IAKH,CAAA,SAAA,GAAA,SAAA,CAAA;QACI,IAAJ,CAAA,SAAA,GAAA,EAAA,CAAA;QACA,IAAA,CAAA,eAAA,GAAA,KAAA,CAAA;KAAA;IAOA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,uBAAA,EAAA;QACA,GAAA,EAAA,YAAA;YAKG,OACH,CAAA,CAAA,IAAA,CAAA,aAAA,CAAA;SACA;QACI,UAAJ,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KAKA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,gBAAA,EAAA;QACA,GAAA,EAAA,YAAA;YAIA,OAAA,IAAA,CAAA,aAAA,GAAA,IAAA,CAAA,aAAA,CAAA,cAAA,GAAA,SAAA,CAAA;SACA;QACA,GAAA,EAAA,UAAA,KAAA,EANY;YAOZ,IAAA,GAAA,GAAA,SAAA,EAAA,WAAA,CAAA;YACQ,IAAR,IAAA,CAAA,aAN8B,EAM9B;gBACA,GAAA,GAAA,IAAA,CAAA,aAAA,CAAA,iBAAA,CAAA;gBAIA,WAAA,GAAA,IAAA,CAAG,SAAH,CAAA,GAAA,CAAA,CAAA;gBAKA,IAAA,CAAA,SAAA,CAAA,GAJoB,CAAW,GAAC,KAIhC,CAAA;aACA;YACA,IAJW,MAIX,GAAA,IAJaU,0BAAwB,CAIrC,WAJiD,EAIjD,KAAA,EAAA,KAAA,CAAA,CAAA;YACA,IAAA,CAAA,WAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAAA,GAAA,CAAA,GAAA,MAAA,EAAA,EAAA,EAAA,CAAA;YAGA,IAAA,EAAA,CAAA;SAMA;QACA,UAAA,EAAA,IAAA;QAGA,YAAA,EAAG,IAAH;KAQA,CAAA,CAAA;IAEA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,eAAA,EAAA;QACA,GAAA,EAAA,YAAA;YACM,OAAN,IAAA,CAAA,WAAA,CAAA,aAAA,CAP2B,UAO3B,CAAA;SAEA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IAEA,MAAA,CAAA,cAPkB,CAOlB,eAAA,CAAA,SAAA,EAAA,eAAA,EAAA;QACA,GAAA,EAAA,YAAA;YAFA,OAAA,IAAA,CAAG,WAAH,CAAA,aAAA,CAAA;SAaA;QACI,UAAJ,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KALA,CAAA,CAAA;IAaA,eAAA,CAAA,SAZyB,CAYzB,WAAA,GAAA,UAAA,GAAA,EAAA;QACA,OAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA;KANA,CAAA;IAeA,eAde,CAcf,SAAA,CAd0B,QAAA,GAc1B,YAAA;QACA,IAAM,CAAN,QAde,GAcf,IAAA,CAduB,gBAcvB,EAAA,CAAA;QACA,IAAA,CAAA,eAAA,GAduB,IAAC,CAAI;KAe5B,CAAA;IACA,eAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAA,MAAA,EAAA;QAdA,MAAA,IAAA,KAAA,CAAA,iEAAA,GAAA,MAAA,CAAA,CAAA;KAeA,CAAA;IACA,eAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;QACA,IAAA,IAAA,CAAA,aAAA,EAAA;YAPA,IAAA,CAAA,aAAA,CAAG,OAAH,EAAA,CAAA;SAoBA;QACA,IAAM,CAAN,aAjBU,GAAa,IAAI,CAiB3B;KACA,CAAA;IAKA,eAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAA,GAAA,EAAA,WAAA,EAAA;QACI,IAAJ,GAjBW,GAiBX,IAAA,CAAA,WAjB8B,CAiB9B,GAAA,CAAA,CAAA;QACA,IAAA,aAAA,IAAA,GAAA,KAAA,SAAA,IAAA,GAAA,KAAA,IAAA,CAAA,CAAA;QAZG,OAiBH,CAAA,aAAA,IAAA,GAAA,KAAA,EAAA,IAAA,GAAA,GAAA,WAAA,CAAA;KACA,CAAA;IACA,eAAA,CAjBU,SAiBV,CAAA,gBAAA,GAAA,UAAA,MAAA,EAAA;QAGI,IAAJ,MAjBa,KAiBb,KAAA,CAAA,EAjBsB,EAAO,MAAO,GAiBpC,IAAA,CAAA,aAAA,CAAA,EAAA;QACA,OAAA,WAAA,CAjBkB,MAiBlB,IAAA,IAAA,CAAA,aAAA,EAAA,SAAA,CAAA,CAAA;KACA,CAAA;IACA,eAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UAAA,MAAA,EAAA,YAAA,EAAA;QACA,IAAA,YAAA,KAAA,KAAA,CAAA,EAAA,EAAA,YAAA,GAAA,KAAA,CAAA,EAAA;QAZA,IAAA,KAAA,GAAA,KAAA,CAAA;QAmBI,IAAJ,MAAA,EAlBgB;YAmBhB,KAAA,GAAA,WAAA,CAAA,MAAA,EAAA,gBAAA,CAAA,IAAA,KAAA,CAAA;YAIA,IAAA,cAAA,GAAA,iBAAA,CAAA,MAAA,EAAA,gBAAA,CAAA,CAAA;YACA,IAAA,CAAA,cAAA,IApBiB,YAoBjB,EAAA;gBACA,oBAAA,CAAA,IAAA,CAAA,SAAA,EAAA,cAAA,CAAA,KAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA;aAoBA;;QD/PA,OAAA,KAAA,CAAA,IAAA,EAAA,CACC;KAgCD,CAAA;IAIA,eAAA,CAAA,SAAyB,CAAzB,oBAAA,GAAiD,UAAjD,KAAA,EAAA,KAAA,EAAA,aAAA,EAAA;QARwB,IAAxB,aAAA,KAAA,KAAA,CAAA,EAAA,EAAA,aAAA,GAAA,IAAA,CAAA,aAAA,CAAA,EAAA;QACwB,IAAxB,OAAA,GAAA,aAAA,IAAA,IAAuC,CAAvC,aAAA,CAAA;QACwB,mBAAA,CAAxB,IAAA,CAAA,SAAA,EAAA,OAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA;KACA,CAAA;IAMA,eAAA,CAAA,SAAA,CAAA,qBAAA,GAAA,UAAA,KAAA,EAAA,QAAA,EAAA;QA/BG,oBADH,CAAA,IAAA,CAAA,SAAA,EAAA,KAAA,EAAA,QAAA,IAAA,EAAA,CAAA,CAAA;KACA,CAAA;IACA,eAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAA,GAAA,EAAA,MAAA,EAAA;QAEI,IAAJ,OACa,MADb,KAAA,QAAA,EAAA;YACA,KAAA,IAAA,IAAA,IAAA,MAAA,EAAA;gBAIG,IACH,CAAA,SAAA,CAAA,IAAA,CAAA,GAAA,MAAA,CAAA,IAAA,CAAA,CAAA;aACA;SACA;aAKA;YACA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,GAD8B,MAC9B,CAAA;SACA;KAmBA,CAAA;IACA,eAAA,CAAA,SAAA,CAAA,2BAAA,GAAA,UAAA,GAAA,EAAA,YAAA,EAAA,kBAAA,EAAA;QACA,IAAA,CAAA,IAAA,CAAA,aAAA,EAAA;YAQA,IAAA,UAPG,GAOH,IAAA,UAAA,CAPG,GAOH,EAAA,YAAA,EAAA,IAAA,CAAA,SAAA,CAAA,CAAA;YACQ,IAAR,CAAA,aAAA,GAAA,IAAA,oBAAA,CAAA,UAAA,EAAA,IAAA,CAAA,aAAA,EAAA,UAAA,MAAA,EAAA,EAAA,OAAA,kBAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;SACA;QACA,OAAA,IAAA,CAAA,aAAA,CAAA;KAPA,CAAA;IAQA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,eAAA,EAAA;QACA,GAAA,EAAA,YAAA;YAPA,IAAA,GAAA,GAAA,IAAA,CAAA,aAAA,CAAA,QAAA,CAAA;YAQM,IAAI,MAAV,GAAA,EAAA,CAAA;YACA,KAAA,IAAA,CAAA,GAAA,GAAA,CAAA,MAAA,EAAA,CAAA,EAAA,GAAA;gBAPA,MAAA,CAAA,CAAsB,CAAtB,GAAA,GAAA,CAAA,CAAA,CAAA,CAAiC;aAQjC;YACA,OAAA,MAAA,CAAA;SAPA;QAQA,UAPY,EAOZ,IAAA;QAGA,YAAA,EAAA,IAAA;KACG,CAAH,CAAA;IAQA,eAAA,CAAA,SAAA,CAVG,WAUH,GAAA,UAAA,GAAA,EAAA;QAGI,OAVO,IAAA,CAAK,aAUhB,CAAA,WAAA,CAAA,GAAA,CAAA,CAV6C;KAW1C,CAAH;IAAG,MAAH,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,gBAAA,EAAA;QASI,GAAJ,EARS,YAQT;YACA,OAAA,IAAA,CAAA,eAAA,CAAA;SAHA;QAWI,UAAJ,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KALA,CAAA,CAAA;IAaA,OAAA,eAAA,CAAA;CACA,EAAA,CAAA,CAAA;AACA,IAAA,sBAAA,IAZwB,UAYxB,MAAA,EAAA;IACAtB,SAAA,CAAA,sBAAA,EAAA,MAAA,CAAA,CAAA;IACA,SAAO,sBAAP,CAAA,QAAA,EAAA,aAAA,EAAA,WAAA,EAAA,SAAA,EAAA;QACA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,aAAA,EAAA,WAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAAA;QACI,KAZK,CAYT,QAZU,GAYV,QAAA,CAAA;QACA,KAAA,CAAA,aAAA,GAAA,aAAA,CAAA;QAPA,KAAA,CAAA,WAAG,GAAA,WAAH,CAAA;QAeI,KAdK,CAcT,SAdmB,GAAC,SAcpB,CAd0B;QAe1B,OAAA,KAAA,CAAA;KAMA;IACA,MAAA,CAAA,cAAA,CAdsB,sBActB,CAAA,SAAA,EAdmD,WAcnD,EAAA;QACI,GAAJ,EAAA,YAAA;YACA,IAdW,GAcX,GAAA,IAAA,CAAA,aAd6B,CAc7B;YACA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,CAAA,iBAAA,GAAA,IAAA,CAAA,QAAA,CAAA;YACA,OAAA,CAAA,GAAA,KAAA,OAAA,IAAA,OAAA,GAAA,GAAA,CAAA;;QDvIA,UAAA,EACI,IAAI;;KDDR,CAAA,CAAA;IAIA,MAAA,CAAA,cAA6C,CAA7C,sBAAA,CAAA,SAAA,EAAA,UAAA,EAAA;QAAuB,GAAvB,EAAA,YAAuB;YAEvB,OAAA,IAAA,CAAA,SAAA,CAAA;SAKA;QACI,UAAJ,EAAA,IADoB;QAEpB,YAAA,EAAA,IAAA;KASA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,sBAAA,CAAA,SAAA,EAAA,cADkE,EAAM;QAEpE,GAAJ,EAAA,YAAA;YAEA,OADa,IACb,CAAA,aAAA,CAAA;SACA;QAMA,UAAA,EAAA,IAAA;QACI,YAFY,EAEhB,IAAA;KACG,CAAH,CAAA;IAKA,sBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAA,GAAA,EAAA;QACI,OALO,GAKX,GAAA,IAAA,CAAA,WALgC,CAKhC,GALqC,CAKrC,GAAA,SALyC,CAKzC;KACG,CAAH;IAMA,sBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAA,GAAA,EAAA,MAAA,EAAA,QAAA,EAAA;QACI,IAAJ,QALgB,KAKhB,KAL0B,CAK1B,EAAA,EAAA,QALuC,GAAG,KAK1C,CAAA,EAAA;QACA,IAAA,QAAA,EAAA;YAKA,IAAA,CAAA,cAAA,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;SACA;aACA,IAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,EAAA;YAOA,IALG,CAKH,gBAAA,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;SACA;aACA,IAAA,OAAA,MAAA,KAAA,QAAA,EAAA;;SAJA;aAMA,IAAA,OALmB,MAKnB,KAAA,QAAA,EAAA;YACA,IAAA,CAAA,iBAAA,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;SAHA;aAQA;YACA,MAAA,IAAA,KAAA,CAAA,uBAAA,GAAA,GAAA,GAAA,kDAAA,CAAA,CAAA;;KDjFA,CAAA;IASA,sBAJ+B,CAI/B,SAAA,CAAA,0BAF+B,GAE/B,UAD8B,GAC9B,EAAA,YAAA,EAAA,kBAAA,EAAA;QAJqB,OAArB,IAAA,CAAqB,2BAArB,CAAA,GAAA,EAAA,YAAA,EAAA,kBAAA,CAAA,CAAA;KACA,CAAA;IACA,sBAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAA,GAAA,EAAA,MAAA,EAAA;QACqB,IAArB,CAAA,SAAqB,CAArB,GAAA,CAAA,GAAA,MAAA,CAAA;KAKO,CAAP;IAIA,sBAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAA,GAAA,EAAA,MAAA,EAAA;QACI,IAAJ,GANW,KAMX,KAAA,CAAA,EAAA,EANe,GAMf,GANgC,EAMhC,CAAA,EAAA;QACA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,GAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA;KACA,CAAA;;QDWA,IAAA,GAAA,KAAA,KAAA,CAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,EAAA;QAQA,IAAA,OAAA,GAAA,EAAA,CAAA;QADwB,KAAxB,IAAA,IAAwB,IAAxB,MAAA,EAAA;YAAA,IAAA,CAAA,CAAA,MAAA,CAAkD,IAAlD,CAAA,EAAA;gBAEA,OAAA,CAAA,IAAA,CAAyB,IAAzB,CAAsD,CAAC;aAC9C;SACT;QACA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,GAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA;KAMA,CAAA;IACA,sBAFc,CAAS,SAEvB,CAAA,iBAAA,GAAA,UAAA,GAAA,EAAA,MAAA,EAAA;QACA,IAAM,GAAN,KAAA,KAAA,CAFgB,EAEhB,EAAA,GAAA,GAFsB,EAEtB,CAAA,EAFmC;QAGnC,IAAM,CAAN,SAFa,CAAI,GAEjB,CAAA,GAFkB,MAElB,CAAA;KACA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,sBAAA,CAAA,SAAA,EAAA,mBAAA,EAAA;QACA,GAAA,EAAA,YAAA;YAQG,IAGH,SAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA;YACQ,IAAR,SAAA,GAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA;YAEA,OAAA,CAAA,SAAA,IAAA,CAAA,CAAA,SAH6B,GAAa,CAG1C,GAAA,CAAA,CAHmD,IAGnD,CAAA,CAAA;SACA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KAOA,CAAA,CAAA;IACA,OAAA,sBAJe,CAAe;CAM9B,CAAA,eAJa,CAIb,CAAA,CAAA;AACA,IAAA,WAAA,GAAA,IAAAqB,4BAAA,CAAA,0CAAA,CAAA,CAAA;AAEA,IAAA,kBAAA,IAAA,YAAA;IACA,SAAA,kBAJuB,CAIvB,SAJiC,EAIjC;QACA,IAAA,CAAA,SAAA,GAAA,SAJyB,CAAI;KAK7B;IACA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAJ0C,EAI1C,OAAA,EAAA;QACA,GAAA,EAAA,YAAA;YACA,OAAA,IAJa,CAIb,SAAA,CAAA,KAAA,EAAA,CAAA;SACA;QAEA,UAAA,EAAY,IAJE;QAKd,YAAU,EAAV,IAJgB;KAKhB,CAAA,CAAA;IACA,MAAA,CAAA,cAJe,CAIf,kBAJ8B,CAI9B,SAAA,EAAA,aAAA,EAAA;QACA,GAAA,EAAA,YAAA;YAEA,IAAQ,QAJQ,GAIhB,IAJiB,CAIjB,SAAA,CAAA,MAAA,CAAA,UAAA,EAAA,EAAA,EAAA,OAAA,EAAA,CAAA,WAAA,KAAA,IAAA,CAAA,EAAA,CAAA,CAAA;YACA,IAAA,WAAA,GAAoB,IAJE,CAAG,SAIzB,CAAA,MAAA,CAAA,UAAA,EAAA,EAAA,EAAA,OAAA,EAAA,CAAA,WAAA,KAAA,IAAA,CAAA,EAAA,CAAA,CAAA;YACA,OAAA,QAAA,CAAA,MAAA,CAAA,WAAA,CAAA,CAAA;SACA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KAEA,CAAA,CAAA;IAMA,kBAAA,CAAA,SAAA,CALoB,WAKpB,GAAA,UAAA,KALoD,EAKpD;QAEI,OALO,IAKX,CAAA,SAL6B,CAK7B,IAAA,CAL8B,UAK9B,EAAA,EALgD,EAKhD,OAAA,EAAA,CAAA,KAAA,IAAA,KAAA,CAAA,EAAA,CAAA,CAAA;KACA,CAAA;IACA,kBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAA,KAAA,EAAA;QACA,OAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,UAAA,EAAA,EAAA,EAAA,OAAA,EAAA,CAAA,UAAA,IAAA,KAAA,CAAA,EAAA,CAAA,CAAA;KACA,CAAA;IACA,MAAA,CAAA,cAAA,CAAoB,kBAApB,CAAA,SAAA,EAAA,cAAA,EAAA;QACA,GAAA,EAAO,YAAP;YACA,OAAA,IAAA,CAAA,SAAA,CAAA,MAAA,CAAA,UAAA,EAAA,EAAA,EAAA,OAAA,EAAA,CAAA,WAAA,IAAA,IAAA,CAAA,EAAA,CAAA,CAAA;SACA;;QAJA,YAAA,EAAA,IAAA;KAMA,CALE,CAKF;IACA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QAHA,GAAA,EAAA,YAAC;YAQM,OAAP,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,UAAA,EAAA,EAAA,EAAA,OAAA,EAAA,CAAA,KAAA,CAAA,EAAA,CAAA,CAAA;SACA;QACA,UAAA,EAAA,IAAA;QAGA,YAAA,EAAA,IAAA;KAyBA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,UAAA,EAAA;QAKA,GAAA,EAAA,YAAA;YASA,OAAA,IAAA,CAAA,SAAA,CAAA,GA3BC,CA2BD,UA3BC,EA2BD,EAAA,EAAA,OAAA,EAAA,CAAA,MAAA,CAAA,EAAA,CAAA,CAAA;SACA;QACM,UAAN,EAAA,IAAA;QACI,YAnCY,EAmChB,IAAA;KAEA,CAAA,CAAA;IACA,OAAA,kBAAA,CAAA;CANAD,EAAAA,CAAAA,CAAAA;AASA,kBAAA,CAAA,UAAA,GAAA;IACA,EAAA,IAAA,EAAAL,wBAAA,EAAA;;;;CAJA,CAAA,EAAA,CAAA;AASAK,IAAAA,WAAAA,IAAAA,YAAAA;IACA,SAAO,WAAP,CAAA,OAAA,EAAA,UAAA,EAAA,OAAA,EAAA,MAAA,EAAA;QANAA,IAAEA,OAAA,KAAFA,KAAAA,CAAAA,EAAAA,EA3B2B,OA2B3BA,GA3BqC,KA2BrCA,CA3B2C,EA2B3CA;QAWA,IAAM,UAAN,KAnCoB,KAmCpB,CAAA,EAAA,EAAA,UAAA,GAAA,KAnC0C,CAAQ,EAmClD;QAEA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAA,GAAA,EAAA,CAAA,EAAA;QAnCM,IAAN,MAAgB,KAAhB,KAAA,CAAA,EAAA,EAAA,MAAA,GAAA,EAAA,CAAA,EAAA;QAoCA,IAAM,CAAN,OAnCc,GAmCd,OAAA,CAAA;QACA,IAAA,CAAA,UAAA,GAAA,UAAA,CAAA;QACA,IAAA,CAAA,OAAA,GAAA,OAAA,CAAA;QACA,IAAA,CAAA,MAAA,GAAA,MAAA,CAAA;KAMA;IACE,WAAF,CAAA,SAAA,CAAA,KAAA,GApCgC,YAoChC;QACM,OAAN,IAAA,WAAA,CApC6B,IAoC7B,CAAA,OApCyC,EAoCzC,IAAA,CAAA,UAAA,EAAA,IApC+D,CAoC/D,OAAA,EApCoF,IAoCpF,CAAA,MAAA,CAAA,CAAA;KACA,CAAA;IAMA,OAAA,WAAA,CAAA;CACA,EAAA,CAAE,CAAF;AACA,IAAE,UAAF,IAAA,YAAA;IACA,SAAA,UAAA,CAAA,KAAA,EAAA,SArCoC,EAqCpC;QACA,IAAA,CAAA,KAAA,GAAA,KAAA,CAAA;QACA,IAAA,CAAA,SAAA,GAAA,SAAA,CAAA;;QDxNA,IAAA,CAAA,OAHC,GAGD,IAAAN,oCAAA,CAAA,IAAA,WAAA,CAAA,IAAA,CAAA,CAAA,CAAA;QACA,IAAA,CAAA,YAAA,GAHuB,IAGvB,CAAA,OAAA,CAAA,YAAA,EAAA,CAAA;KACA;IACA,UAAc,CAAd,SAAA,CAAA,QAAA,GAAA,UAAA,UAAA,EAAA;QAFU,IAAI,IAGd,CAAA,SAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;YACA,IAAA,GAAA,GAAA,IAAA,CAAA,SAAA,CAAA,GAAA,CAAA,UAAA,CAAA,CAAA;;SDUA;QAKA,OAAA,KAAA,CAAA;KAHA,CAAA;IAAA,UAAA,CAAA,SAAgE,CAAhE,OAAA,GAAA,UAAA,UAAA,EAAA;QAKI,IAAI,CAAC,aAAT,CAAA,UAAA,CAAA,CAAA;QACA,OAAAE,2BAAA,CAAA,IAAA,CAAA,IAAA,CAAA,YAAA,EAAA,UAAA,MAAA,EAAA;YAKA,OAJG,UAIH,IAAA,MAAA,CAAA,UAAA,KAAA,UAAA,IAAA,IAAA,CAAA;SACA,CAAA,CAAA;KACG,CAAH;IAIA,UAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAA,UAAA,EAAA;QACI,IANI,KAAA,GAAsB,IAAA,CAAK;QAO/B,IAAJ,IAAA,GAAA,cAAA,CAAA,UAAA,CAAA,CAAA;QACA,IAAM,IAAN,CAAA,MANa,GAMb,CAAA,EAAA;YACA,eAAA,CAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA,CAAA;YACA,IAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;gBAIA,IAAA,GAAA,GAAA,KAAA,CAAA,SAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA;gBACA,IARgB,UAQhB,GAAA,UAAA,CAAA,EAAA;oBACA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,YAAA;wBAPc,IAQd,MAAA,GAAA,IAAA,WAAA,CAAA,CAAA,CAAA,OAAA,EAAA,KAAA,CAAA,CAAA;wBACA,KAAA,CARsB,OAQtB,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA;qBACA,CAAA,CAAA;iBACS,CAAT;gBACA,IAAA,CAAA,GAAA,EAAA;oBACA,GAAA,GAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA;oBANgB,GAQhB,CARgB,WAQhB,CARsB,UAQtB,CAAA,CAAA;oBAPW,KAAS,CAQpB,SAAA,CAAA,GAAA,CAAA,KAAA,EAAA,GARuC,CAAQ,CAQ/C;iBACA;gBAMA,IAAA,GAAA,CAAA,OAAA,EAAA;oBACA,UAAA,CAAA,GATmB,CAAY,CAS/B;iBACA;aACA,CAAA,CAAA;SAQA;KACA,CAAA;IACA,UAAA,CAAA,SAVmB,CAUnB,SAAA,GAAA,UAVkD,KAUlD,EAAA;QAGI,IAVI,SAAS,GAUjB,SAAA,EAAA,IAAA,CAAA,CAAA,EAAA,MAAA,GAAA,UAAA,CAAA,KAAA,CAAA,CAAA,WAAA,CAAA;QACI,OAVO,SAUX,GAVuB,EAUvB,MAV4B,GAU5B,UAAA,CAAA,KAVkD,CAUlD,IAAA;YACA,OAAA,EAAA,KAAA,KAAA,KAAA,IAAA,KAAA,KAAA,EAAA;YAJA,KAAA,EAAA,KAAG;YACK,WAUR,EAAA,YAAA;aATS;YAWT,cAAA,EAAA,YAAA;;SATA,CAAA,CAAA;KAWA,CAVE;IAWF,OAAA,UAAA,CAAA;CARA,EAAA,CAAA,CAAA;AAaA,UAAK,CAAL,UAAA,GAAA;IACA,EAAC,IAAI,EAAED,wBAAU,EAAjB;CACC,CAAC;;IDpFF,EAAA,IAAA,EAAAF,oBAAA,GAAC;IAuFD,EAAA,IAAA,EAAA,SAAA,EAnDuB,UAmDvB,EAAA,CAAA,EAAA,IAAA,EAAAK,oBAAA,EAAA,IAAA,EAAA,CAAAC,iCAAA,EAAA,EAAA,EAAA,EAAA;CACA,CAAA,EAAA,CAAA;AACA,SAAA,SAAA,GAAA;IACA,OAAAF,gCAAA,EAAgB,CAAhB,iBAAkC,EAAlC,CAAA;CACA;AA5EA,IAAA,UAAU,GAAV,EAAA,CAAA;;IAKA,IAJO,IAIP,GAAA,YAAA,CAJ4B,MAI5B,CAAA,UAAA,EAAA,EAAA,EAJ8C,OAAgB,CAI9D,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;QAHO,IAQP,KARO,GAAA,IAAqB,CAQ5B,IARiC,CAQjC,IAAA,CAAA,CAAA;;YAKA,IAZO,SAYP,GAZ4BA,gCAY5B,EAAA,CAAA,aAZ8C,CAY9C,OAAA,CAZ+D,CAY/D;;YAKA,IAhBO,CAAA,SAgBP,CAAA,YAAA,CAhBkC,EAgBlC;;gBAfOA,gCAoBP,EAAA,CAAA,WAAA,CAAA,SAAA,EAAAA,gCApByD,EAAK,CAoB9D,cAAA,CAAA,OAAA,CAAA,CAAA,CAAA;;YAKAA,gCAvBI,EAuBJ,CAvBI,WAuBJ,CAAA,SAvB0C,CAuB1C,IAAA,EAAA,SAAA,CAvBwD,CAAI;;SA4B5D;;YAKA,OA/BI,CA+BJ,KAAA,CA/ByB,CA+BzB,CAAA,CAAA;;KAKA;;AAKA,SAAA,cAAA,CAAA,UAAA,EAAA;;QArCI,CA0CJ,OAAA,UA1CyB,KAAK,QA0C9B,IA1C0C,CA0C1C,UAAA,CA1C2C,GA0C3C,MA1C8D,EA0C9D,UAAA,EAAA,CAAA;;AAKA,SAAA,MAAA,CAAA,IAAA,EA9CI;;IAmDJ,OAAA,IAAA,CAAA,MAlDI,CAkDJ,UAAA,IAAA,EAAA;;KAmBA,CAAA,CAAA;CACA;AACA,SAAA,UAAA,CAAA,IAAA,EAAA,MAAA,EAAA;IACA,OAAA,YAAA,CAAA,IAAA,EAAA,MAAA,GAAA;QACA,OAAA,EAAA,MAAA,CAAA,KAAA;QAMA,MAAA,EAAA,MAAA,CAAA,MAAA;KACA,GAAI,EAAJ,CAAA,CAAA;CAEA;AACA,IAAA,YAAU,IAAV,YAAA;IACA,SAAA,YAAA,CAAA,YAAA,EAAA,WAAA,EAAA;QACI,IAAI,CAhDC,YAgDT,GAAA,YAAA,CAAA;QACA,IAAA,CAAA,WAAA,GAAA,WAAA,CAAA;QAvCA,IAAA,CAAA,oBAAA,EAAA,CAAA;KA8CA;IACA,MAAA,CAAA,cAAA,CAAA,YAAA,CAAA,SAAA,EAAA,aAAA,EAAA;QAxBA,GAAA,EAAA,YApBmB;YA8CnB,OAAA,IAAA,CAAA,YAAA,CAAA,KAAA,CAAA,KAAA,EAAA,CAAA;SAGA;QAEI,UAAJ,EAAA,IAAA;QACI,YAAJ,EAAA,IAAA;KACG,CAAH,CAAA;;QAtCA,GAAA,EAAA,YAAA;YACQ,IA6CR,KA7CQ,GA6CR,IAAA,CA7CyB;;;;;SAkDzB;QACA,UAAA,EAAA,IAAA;QA3CA,YAAA,EAAA,IAAA;KAgDA,CAAC,CAAD;IACA,MAAK,CAAL,cAAoB,CAApB,YAAA,CAAA,SAAA,EAAA,QAAA,EAAA;QACA,GAAA,EAAA,YAAA;YACA,IAAA,KAAA,GAAA,IAAA,CAAA;YA9CA,IAAA,KAAA,GAAA,IAAA,EAAO,KAAP,GAAA,IAAA,CAAA,WAAA,CAAA,OAAA,EAAA,CAAA;YAgDQ,KA/CK,CA+Cb,OAAA,CAAA,UA/CgC,EA+ChC,EAAA;gBA9CY,IA+CZ,EAAA,CA/Ce,KA+Cf,KAAA,EAAA,EAAA;oBACA,IAAA,CA/CqB,KAAA,IA+CrB,KA/CkC,CA+ClC,WAAA,CA/CoC,QA+CpC,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA;wBACA,KAAA,GA/C4B,EA+C5B,CAAA;qBACA;iBA9CY;aAgDZ,CAAA,CAAA;YACA,IAAY,KA/CK,GA+CjB,IAAA,CAAA,WA/CoC,CAAA,CA+CpC,CAAA,CAAA;YACA,OA/Cc,KA+Cd,KAAA,IAAA,CA/C8B,WA+C9B,CAAA,QAAA,CAAA,KAAA,CA/CyD,UA+CzD,CAAA,GAAA,KAAA,GAAA,IAAA,CAAA,CAAA;SACA;QACA,UA/Cc,EA+Cd,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,YAAY,CAAZ,SAAA,CA/CuB,QA+CvB,GA/C8B,UA+C9B,KAAA,EAAA;QACA,IAAA,EAAA,GAAA,IAAA,CAAA,YAAA,CAAA,WAAA,CAAA,KAAA,CAAA,IAAA,IAAA,CAAA,YAAA,CAAA,WAAA,CAAA,KAAA,CAAA,CAAA;;KDtKA,CAAA;IAgFA,YACM,CADN,SAAA,CAAA,OAAA,GAAA,UAAA,KAAA,EAAA;QAII,IAAJ,EAAU,GAAV,IAAiB,CAAjB,YAAA,CAAA,WAAA,CAAA,KAAA,CAAA,IAAA,IAAA,CAAA,YAAA,CAAA,WAAA,CAAA,KAAA,CAAA,CAAA;QAjFY,IAAZ,QAAY,GAAU,UAAtB,MAAA,EAAA,EAAA,QAAA,EAAA,GAAA,MAAA,CAAA,OAAA,KAAA,EAAA,GAAA,IAAA,EAAA,EAAA,CAAA;QAmFI,IAAI,MAAR,GAAiB,IAAjB,CAAA,WAAA,CAAA,OAAA,CAAA,EAAA,GAAA,EAAA,CAAA,UAAA,GAAA,KAAA,CAAA,CAAA;QACA,OAAAD,2BAAA,CAAA,IAAA,CAAAJ,qBAAA,CAAyB,IAAzB,CAAA,MAAA,EAAsC,UAAtC,MAAA,EAAwD,EAAxD,OAAA,UAAA,CAA4E,MAAM,EAAlF,EAAsF,CAAC,CAAC,EAAxF,CAAA,EAAA,QAAA,CAAA,CAAA;KACA,CAAA;IACA,YAAA,CAAA,SAAA,CAAA,oBAAA,GAAA,YAAA;QAlFU,IACV,OAAA,GAAA,IADmC,CACnC,YAAA,CAAA,WAD4D,CAAC,GAC7D,CAAA,UAAA,EAAA,EAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,CAAA,CAAA;QAAO,IAKP,CAAA,WAAA,CAAA,aAAA,CALiC,OAKjC,CAAA,CAAA;KAKA,CAAA;;CAKA,EAAA,CAAA,CAAA;;IAKA,EAAA,IAAA,EAAAG,wBAAA,EAAA;;AAKA,YAAA,CAAA,cArB2B,GAqB3B,YAAA,EAAA,OArBuD;;IA0BvD,EAAA,IAAA,EAAA,UAAA,GAxBwB;;AA6BxB,IAAA,eAAA,IAAA,UAAA,MAAA,EA5B8B;;IAiC9B,SAAA,eAAA,CAhCwB,OAgCxB,EAAA,KAAA,EAAA,QAhC0C,EAAY;;QAClD,KAoCJ,CAAA,UAAA,GAAA,IAAAD,oCAAA,CAAA,KAAA,CApC0C,CAoC1C;;QAlCI,OAuCJ,KAAA,CAvCI;;IA4CJ,MAAA,CAAA,cA3CwB,CA2CxB,eA3C8B,CAAW,SA2CzC,EA3C0C,QA2C1C,EAAA;;QA1CI,UAAA,EA+CJ,IAAA;;KAKA,CAAA,CAAA;;IAqBA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,UAAA,EAAA;QACI,GAAJ,EAAA,UAAA,GAAA,EAtDwB,EAsDxB,IAAA,CAAA,WAAA,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACG,CAAH,CAAA;IAMA,AAAA;IACA,MAAA,CAAA,cAtDqB,CAsDrB,eAAA,CAAA,SAAA,EAAA,UAAA,EAAA;QAEI,GAAJ,EAtDS,UAsDT,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAG;IAIH,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,UAAA,EAAA;QACI,GAAJ,EAAS,UAAT,GAAA,EAxDwB,EAwDxB,IAAA,CAAA,WAAA,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACI,UAAJ,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAG;IA/CA,MAAH,CAAA,cAAA,CAAG,eAAH,CAAA,SAAA,EAAA,UAAA,EAAA;QAsDI,GAAJ,EAAS,UAAT,GAAA,EAAA,EArD0B,IAqD1B,CAAA,WAAA,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACI,UAAJ,EAAA,IAAA;QACA,YArDc,EAqDd,IAAA;KACA,CAAA,CAAA;IAEA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,eAAA,CArDmC,SAqDnC,EArDiD,UAqDjD,EArDyD;QAsDzD,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAhDA,UAAA,EAAG,IAAH;QAuDI,YAtDM,EAsDV,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,YAAA,EAAA;QAEI,GAAJ,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,YAAA,EAAA,GAtD6C,CAAgB,CAsD7D,EAAA;QACI,UAAJ,EAAA,IAAA;QACA,YAtDc,EAsDd,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,YAAA,EAAA;QApDA,GAAA,EAAG,UAAH,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QA0DI,UAzDU,EAAA,IAyDd;QAGI,YAAJ,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,YAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAzDY,IAyDZ;QACA,YAAA,EAAc,IAAd;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,YAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAzDY,IAyDZ;QACA,YAAA,EAAc,IAAd;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,eAzDiC,CAyDjC,SAzDiC,EAyDjC,YAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAzDW;QA0DX,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,YAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAGI,UAAJ,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,YAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAzDY,IAyDZ;QACA,YAAA,EAAc,IAAd;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,SAAA,EAAA,YAAA,EAAA;QACA,GAAA,EAAA,UAzDiB,GAyDjB,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAzDY,EAyDZ,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,eAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAA,OAAA,EAAA;QACA,IAAA,OAAW,CAzDC,QAyDZ,CAAA,IAzDa,IAAgB,IAAI,IAyDjC,CAAA,aAAA,EAAA;YACA,IAAQ,CAAR,oBAAA,EAAA,CAAA;SAzBE;KA4BF,CAAA;IACA,eAAA,CAAA,SAzDkB,CAyDlB,QAAA,GAAA,YAAA;QACA,IAAM,KAAN,GAAA,IAAA,CAAA;QACA,MAAA,CAAA,SAAkB,CAAlB,QAAA,CAAA,IAzDqB,CAyDrB,IAAA,CAAA,CAAA;QACA,IAAA,CAAA,2BAAA,CAAA,QAAA,EAAA,KAAA,EAAA,UAAA,OAAA,EAAA;YACA,KAAA,CAAA,oBAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA;SAlDA,CAAA,CAAA;QA2DI,IA1DI,CA0DR,oBAAA,EA1D+B,CA0D/B;KAEA,CAAA;IAEA,eAAA,CAAA,SAAA,CAAA,oBAAA,GAAA,UAAA,KAAA,EAAA;QACA,KAAA,GAAQ,KAAR,IAAA,IAAA,CA1DsB,WA0DtB,CA1DsB,QA0DtB,CAAA,IAAA,KAAA,CAAA;QACA,IAAA,IAAQ,CAAR,aA1DqB,EA0DrB;YACA,KAAA,GAAA,IAAA,CAAA,aAAA,CAAA,cA1DwC,CAAM;SA2D9C;QACA,IAAA,GAAA,GAAA,cAAA,CAAA,KAAA,CAAA,CAAA;QACA,IAAA,CAAA,oBAAA,CAAA,GAAA,CAAA,CAAA;;KAzDA,CAAA;IA2DA,OAAA,eAAA,CA1DmB;;;;;AA+DnB,eAAA,CAAA,cAAA,GAAA,YAAA,EAAA,OAAA;IACA,EAAA,IAAA,EAAA,YAAA,GAAA;IAxDA,EAAA,IAAA,EAAAN,wBAAA,GAAA;IA6DA,EAAC,IAAI,EAAED,uBAAP,GAAmB;CACnB,CAAA,EAAA,CAAA;AACA,eAAA,CAAA,cAAA,GAAA;IACA,QAAO,EAAP,CAAA,EAAA,IAAA,EAAAN,mBAAA,EAAA,IAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA;IACA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA;IA3DA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAgE,CAAhE,aAAA,EAAA,EAAA,EAAA;IA6DA,UA5DS,EAAG,CA4DZ,EAAA,IAAA,EAAAA,mBAAA,EAAA,IA5D+B,EA4D/B,CAAA,aAAA,EAAA,EAAA,EAAA;IACA,UAAA,EA5DW,CA4DX,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EA5DiC,CA4DjC,aAAA,EAAA,EA5DmC,EAAkB;IA6DrD,UAAA,EA5DW,CA4DX,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EA5DiC,CA4DjC,aAAA,EAAA,EA5DmC,EAAkB;IA6DrD,YA5DW,EAAG,CA4Dd,EAAA,IAAA,EAAAA,mBAAA,EAAA,IA5DiC,EA4DjC,CAAA,gBAAA,EAAA,EAAA,EAAA;IACA,YA5DW,EAAG,CA4Dd,EAAA,IAAA,EAAAA,mBAAA,EAAA,IA5DiC,EA4DjC,CAAA,gBAAA,EAAA,EAAA,EAAA;IACA,YA5DW,EAAG,CA4Dd,EAAA,IAAA,EAAAA,mBAAA,EAAA,IA5DiC,EA4DjC,CAAA,gBAAA,EAAA,EAAA,EAAA;IACA,YAAA,EA5Da,CA4Db,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EA5DmC,CA4DnC,gBAAA,EAAA,EA5DqC,EAAqB;IA6D1D,YAAA,EA5Da,CA4Db,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EA5DmC,CA4DnC,gBAAA,EAAA,EA5DqC,EAAqB;IA6D1D,YAAA,EA5Da,CA4Db,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EA5DmC,CA4DnC,gBAAA,EAAA,EA5DqC,EAAqB;IA6D1D,YAAA,EA5Da,CA4Db,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EA5DmC,CA4DnC,gBAAA,EAAA,EA5DqC,EAAqB;IA6D1D,YAAA,EA5Da,CA4Db,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EA5DmC,CA4DnC,gBAAA,EAAA,EA5DqC,EAAqB;CA6D1D,CAAA;AACA,IAAA,oBA5DgB,IA4DhB,UAAA,MAAA,EAAA;IACAD,SAAA,CAAA,oBAAA,EAAA,MAAA,CAAA,CAAA;IACA,SAAA,oBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAA,SAAA,EAAA;;QD5QA,KAAA,CAAA,OAAA,GACC,KADD,CAAA;QAkFA,IAAA,SAAA,EAxDuB;YA6DvB,KAAA,CAAA,cAAA,GAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,KAAA,CAAA,eAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA;SAzDA;QA3BY,OAAZ,KAAY,CAAZ;KAsFA;IACA,MAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,SAAA,EAAA,OAAA,EAA6D;QAC7D,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,OAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QApFS,YACT,EAAA,IAAA;KAKA,CAAA,CAAA;IAKA,MAAA,CAAA,cATsB,CAAK,oBAS3B,CATgD,SAShD,EAAA,SAAA,EAAA;;QARM,UAaN,EAAA,IAAA;;KAKA,CAAA,CAAA;;QAhBM,GAqBN,EArBM,UAqBN,GArB2B,EAqB3B,EAAA,IAAA,CAAA,WAAA,CArBgD,SAqBhD,EAAA,GAAA,CAAA,CAAA,EAAA;;QAnBG,YAwBH,EAAA,IAAA;;IAKA,AAAA;;QA3BG,GAgCH,EAAA,UAhCqB,GAgCrB,EAhC0B,EAgC1B,IAAA,CAAA,WAAA,CAAA,SAhCsD,EAAC,GAgCvD,CAAA,CAAA,EAAA;;QA/BG,YAoCH,EAAA,IAAA;;IAKA,AAAA;;QAtCG,GA2CH,EAAA,UA3CqB,GA2CrB,EA3C0B,EA2C1B,IAAA,CAAA,WAAA,CAAA,SA3CsD,EAAC,GA2CvD,CAAA,CAAA,EAAA;;QA1CG,YA+CH,EAAA,IAAA;;IAKA,AAAA;;QAuBA,GAAA,EAAA,UAvDG,GAuDH,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACI,UAAJ,EAvDgB,IAuDhB;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAG;IAMH,MAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACI,GAAJ,EAvDS,UAuDT,GAAA,EAAA,EAAA,IAAA,CAvD8B,WAuD9B,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACI,UAAJ,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QAIA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACI,UAAJ,EAAA,IAAA;QACI,YAAJ,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAzDc,oBAyDd,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAzDY,EAyDZ,EAAA,IAAA,CAAA,WAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KA/CA,CAAA,CAAA;IAsDA,AAAA;IAEA,MAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EArDc,IAqDd,CAAA,WAAA,CAAA,WAAA,EAAA,GAAA,CArDyE,CAqDzE,EAAA;QACA,UAAA,EAAU,IArDI;QAsDd,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IAGA,MAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,SArD8C,EAAE,WAqDhD,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAgB,EAAhB,IAAA,CAAA,WAAA,CArDkC,WAqDlC,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MArDM,CAAC,cAqDP,CAAA,oBAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAhDA,UAAA,EAAG,IAAH;QAuDI,YAtDM,EAsDV,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACI,GAAJ,EAtDS,UAsDT,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QAjDA,YAAG,EAAH,IAAG;KAwDH,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAvDmB,CAuDnB,oBAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAGI,UAAJ,EAvDgB,IAAA;QAwDhB,YAvDgB,EAAC,IAAK;KAwDtB,CAAA,CAAA;IAEA,AAAA;IACA,oBAvDU,CAuDV,SAAA,CAAA,WAvDwC,GAuDxC,UAAA,OAAA,EAAA;QAIA,IAAM,OAAN,CAvDc,OAuDd,CAAA,IAvDqB,IAuDrB,IAAA,IAvDqC,CAuDrC,aAvDoD,EAAE;YAwDhD,IAAI,CAvDC,gBAuDX,EAAA,CAAA;SAGA;KACA,CAAA;IACA,oBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;QAjDA,IAAA,KAAA,GAAA,IAAA,CAAA;QAyDI,MAAJ,CAxDQ,SAAK,CAwDb,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;QA1BA,IAAE,CAAF,2BAAA,CAAA,OAAA,EAAA,eAAA,EAAA,UAAA,OAAA,EAAA;YA4BM,KAAN,CAAA,gBAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA;SACA,CAAA,CAAA;QACA,IAAM,CAAN,gBAxDuB,EAwDvB,CAAA;KACA,CAAA;IAEA,oBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;QACA,MAAA,CAAA,SAAA,CAxDW,WAwDX,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;QACA,IAAM,IAAN,CAxDW,cAwDX,EAxDW;YAyDX,IAAQ,CAAR,cAAA,CAAA,WAAA,EAAA,CAAA;SACA;KACA,CAAA;IACA,oBAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAA,KAAA,EAAA;QACA,KAAA,GAAA,KAAA,IAAA,IAAA,CAAA,WAAA,CAAA,OAAA,CAAA,IAAA,eAAA,CAAA;QACA,IAAA,IAAQ,CAAR,aAAA,EAAA;YACA,KAAA,GAAA,IAAA,CAAA,aAAA,CAAA,cAAA,CAAA;SACK;QACD,IAAJ,CAAA,oBAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA;QAEI,IAAJ,CAAA,gBAAA,CAAA,KAAA,EAAA,CAAA,IAAA,CAAA,OAAA,GAAA,KAAA,GAAA,IAAA,CAAA,OAAA,CAAA,CAAA;KACG,CAAH;;QAtDA,IAAA,KAAA,GAAA,IAAA,CAAA;QAyDA,IAxDQ,CAwDR,OAAA,GAxDmB,CAwDnB,SAAA,IAAA,EAAA,EAAA,WAAA,EAAA,CAAA;QACA,IAAA,CAAA,aAxDY,CAwDZ,IAAA,CAAA,UAAA,CAAA,EAAA,EAAA,OAAA,CAAA,KAAA,KAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA;;;;;YAKA,KAAA,GAAA,IAAA,CAAA,aAAA,CAAA,cAAA,CAAA;SACA;QACA,IAAA,CAAA,gBAAA,CAAA,KAAA,EAAA,IAAA,CAAA,OAAA,IAAA,KAAA,CAAA,CAAA;KAtDA,CAAA;IA2DA,oBAAmB,CAAnB,SAAA,CAAA,SAAA,GAAA,UAAA,KAAA,EAAA;QACA,IAAO,GAAP,GAAA,EAAA,EAAiB,EAAjB,GAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,EAAA,SAAA,GAAA,EAAA,CAAA,CAAA,CAAA,EAAA,UAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;QACA,QAAA,SAAA;YACO,KAAP,QAAA;gBACA,GAAA,CAAA,iBAAA,CAAA,GAAA,QAAA,CAAA;gBACA,MAAA;YAzDA,KAAA,cAAA;gBA2DA,GAAA,CA1DgB,iBA0DhB,CAAA,GAAA,cAAA,CAAA;gBAzDY,MAAM;YA2DlB,KAAA,eAAA;gBAzDY,GA0DZ,CA1DY,iBA0DZ,CAAA,GAAA,eA1DoD,CA0DpD;gBAzDY,MAAM;YA2DlB,KAAA,cAAA;gBAzDW,GA0DX,CAAA,iBA1DiC,CAAA,GA0DjC,cAAA,CAAA;gBAzDW,MAAG;YA2Dd,KAAA,KA1Dc,CA0Dd;YACA,KAAA,UAAA;gBAzDW,GA0DX,CAAA,iBA1DiC,CAAA,GA0DjC,UAAA,CAAA;gBAzDW,MAAG;YA2Dd,KAAA,OA1DoB,CA0DpB;YACA,KAAA,YA1DoB,CA0DpB;YACA;;gBD3PA,MAAA;SA+EA;QAMI,QAAJ,UAAA;YApFA,KAAA,OAAA,CAAA;YAsFQ,KAAR,YAAA;gBACU,GAAV,CAAA,aAAA,CAA4B,GAA5B,GAAA,CAAA,eAAA,CAAA,GAAA,YAAA,CAAA;gBACA,MAAA;YACA,KAAA,UAAA;gBArFU,GAEV,CAF6B,aAE7B,CAAA,GAF8C,UAE9C,CAFsD;gBAOtD,MAN0B;YAW1B,KAAA,QAAA;;gBAKA,MAd0B;;YAmB1B,KAAA,UAlB+B;;gBAuB/B,MAtB0B;;YA2B1B;;gBAxBI,MA6BJ;;QA5BI,OAiCJ,YAAA,CAjCuB,GAiCvB,EAAA;;YAKA,gBArCuB,EAqCvB,IAAA,CAAA,OAAA,IAAA,KArCyC;;SA0CzC,CAAA,CAAA;;IAKA,oBA5CuB,CA4CvB,SAAA,CAAA,gBA5CyC,GA4CzC,UAAA,KAAA,EAAA,MAAA,EAAA;;QA3CI,IAgDJ,UAAA,IAAA,SAAA,EAAA;;gBA/CI,YAAmB,EAoDvB,YAAA;;gBAhCG,YAuDH,EAAA,gBAAA,CAAA,MAAA,CAAA,GAAA,MAAA,GAAA,IAAA;aACA,CAAA,CAAA;SACA;KACA,CAAA;IACA,OAAA,oBAAA,CAAA;CAMA,CAAA,eAAA,CAAA,CAAA,CAAA;AACA,oBAAA,CAAA,UAAA,GAAA;IAEA,EAAA,IAAA,EAAQS,uBAAR,EAAA,IAAA,EAAA,CAAA,EAAA,QAvDU,EAuDV,2TAAA,EAAA,EAAA,EAAA;CACA,CAAA;AACA,oBAAA,CAAA,cAAA,GAAA,YAAA,EAAA,OAAA;IACA,EAAA,IAAA,EAAQ,YAAR,GAAA;IACA,EAAA,IAAA,EAAAD,wBAAA,GAAA;IAIA,EAAA,IAAA,EAAAD,uBAAA,GAAA;IACA,EAAA,IAAA,EAAA,eAzDwB,EAyDxB,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAJ,sBAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,kBAAA,EAAA,EAAA,EAAA;CACA,CAAA,EAAA,CAAA;AACA,oBAAA,CAAA,cAAA,GAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAAH,mBAAA,EAAA,IAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA;IACA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA;IAhDG,SAAH,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAG,EAAH,IAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA;IAuDA,SAtDS,EAsDT,CAAA,EAAA,IAAA,EAtDmBA,mBAsDnB,EAAA,IAAA,EAtDiC,CAsDjC,kBAAA,EAAA,EAAA,EAtDoD;IAuDpD,SAtDS,EAsDT,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAtDwB,IAsDxB,EAtDiC,CAAA,kBAAmB,EAAE,EAsDtD,EAAA;IACA,SAAA,EAAA,CAAU,EAAV,IAAA,EAtDYA,mBAsDZ,EAAA,IAAA,EAAA,CAAA,kBAAA,EAAA,EAAA,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,qBAAA,EAAA,EAAA,EAAA;IAEA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAtD0B,EAsD1B,IAAA,EAAA,CAAA,qBAAA,EAAA,EAAA,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,qBAAA,EAAA,EAAA,EAAA;IApDG,WAAH,EAAA,CAAA,EAAG,IAAH,EAAGA,mBAAH,EAAA,IAAA,EAAA,CAAA,qBAAA,EAAA,EAAA,EAAA;IA0DA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,qBAAA,EAAA,EAAA,EAAA;IACA,WAAA,EAzDa,CAyDb,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,qBAAA,EAAA,EAAA,EAAA;IACA,WAAA,EAAW,CAAX,EAzDc,IAAA,EAyDdA,mBAAA,EAAA,IAAA,EAzDiC,CAyDjC,qBAAA,EAAA,EAAA,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,qBAAA,EAAA,EAAA,EAAA;CACA,CAAA;AAEA,IAAA,kBAAA,IAAA,UAAA,MAAA,EAAA;IACAD,SAAA,CAAA,kBAAA,EAAA,MAAA,CAAA,CAAA;IApDG,SAAA,kBAAH,CAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAA,SAAA,EAAA,KAAA,EAAA;QA2DI,IAAJ,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,CAAA,IAAA,IAAA,CAAA;QACA,KAAA,CAAA,KAAA,GAAA,KAAA,CAAA;QACA,KAAA,CAAA,OAAA,GAAA,KAAA,CA1DmB;QA2DnB,IAAM,SAAN,EAAA;YACA,KAAA,CAAA,cAAA,GAAA,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,KAAA,CAAA,eAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA;SACA;QAxDG,OA4DH,KAAA,CA5DG;KA6DH;IACA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,KAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA,EAAA;;QA1DA,YAAA,EAAA,IAAA;KA6DA,CA5DE,CA4DF;;;;QAIA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IA1DA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,OAAA,EAAA;QA+DA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,OAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAC,CAAD;IACA,AAAA;IA7DA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,OAAA,EAAA;QA+DA,GAAA,EA9DQ,UA8DR,GA9DiB,EAAO,EA8DxB,IA9D8B,CAAA,WA8D9B,CAAA,OAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SA9DkC,EAAiB,OA8DnD,EAAA;QACA,GAAA,EAAA,UA9De,GA8Df,EAAA,EA9DqB,IA8DrB,CAAA,WAAA,CAAA,OAAA,EAAA,GA9DoC,CA8DpC,CA9DwD,EAAG;QA+D3D,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cA9DqB,CA8DrB,kBAAA,CAAA,SAAA,EAAA,OA9D2D,EAAE;QA+D7D,GAAA,EAAA,UA9De,GA8Df,EAAA,EA9DqB,IA8DrB,CAAA,WAAA,CAAA,OAAA,EAAA,GA9DoC,CA8DpC,CA9DwD,EAAG;QA+D3D,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;;IDjOA,AAAA;IACE,MAAF,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QAKM,GAHN,EAAA,UAAA,GAGwB,EAHxB,EAAA,IAGgC,CAHhC,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACM,UAAN,EAAA,IAAA;QACI,YAAJ,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QACA,GAAA,EAAA,UAGiB,GAHjB,EAAA,EAGiB,IAAW,CAH5B,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KAGA,CAAA,CAAA;IAFA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QAGA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAFI,UAAJ,EAAA,IAAA;QACI,YAAJ,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QAEA,GAGS,EAHT,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QAaA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;;QDLA,GAAA,EAAA,UAAA,GAAA,EAEC,EAFD,IAAA,CAAA,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAiGA,UAAA,EAAA,IAAA;QAMI,YAAJ,EAAA,IAAA;KA/DA,CAAA,CAAA;IACA,AAAA;IApCA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QAoGI,GAAJ,EAAS,UAAT,GAAA,EAAA,EAAA,IAAA,CAA+B,WAA/B,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACI,UAAJ,EAAA,IAAoB;QAChB,YAAJ,EAAA,IAAA;KAEA,CAAA,CAAA;IAGA,AAAA;IAEA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QACA,GAAA,EAAO,UAAP,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KAvGA,CAAA,CAAA;;IAKA,MAAA,CAAA,cAJmC,CAInC,kBAAA,CAJuD,SAIvD,EAAA,SAAA,EAAA;;QAFU,UAOV,EAP8B,IAAA;;KAY9B,CAAA,CAAA;;IAKA,kBAf2B,CAe3B,SAAA,CAAA,WAAA,GAf6C,UAe7C,OAAA,EAAA;;YAKA,IAAA,CAAA,gBAAA,EAAA,CAAA;;KAKA,CAAA;;QAtBO,IA2BP,KAAA,GAAA,IAAA,CAAA;;QAzBI,IA8BJ,CAAA,2BA9B8B,CAAW,KA8BzC,EAAA,GA9B0C,EAAW,UA8BrD,OAAA,EAAA;;SAKA,CAAA,CAAA;;KAKA,CAAA;;QArCI,MA0CJ,CAAA,SA1CwB,CA0CxB,WAAA,CAAA,IA1CyC,CA0CzC,IAAA,CAAA,CAAA;;YAKA,IA7CI,CAAA,cA6CJ,CAAA,WAAA,EAAA,CAAA;;QA5CI,IAiDJ,IAjDI,CAAA,SAiDJ,EAjDuB;;SAsDvB;;IAKA,kBAAA,CAAA,SAAA,CAAA,oBAzDoD,GAAA,YAyDpD;;QAkCA,IAAA,CAAA,KAAA,CAAA,iBAAA,CAAA,YAAA;YACQ,IAAR,OAAA,gBA7DmC,KAAK,WA6DxC,EA7DyC;gBA8D/B,KAAV,CAAA,SA7DwB,GA6DxB,IAAA,gBAAA,CAAA,UAAA,SAAA,EAAA;oBACA,IAAA,gBAAA,GAAA,UAAA,EAAA,EAAA;wBACA,OAAA,CAAA,EAAA,CAAA,UAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,GAAA,CAAA;6BAMA,EAAA,CAAA,YAAA,IAAA,EAAA,CAAA,YAAA,CAAA,MAAA,GAAA,CAAA,CAAA,CAAA;qBACA,CA7DW;oBA+DX,IAAA,SAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,EAAA;wBACA,KA7DY,CAAY,gBA6DxB,EAAA,CAAA;qBACA;iBACA,CAAA,CAAA;gBACA,KAAA,CAAA,SAAA,CAAA,OAAA,CAAA,KAAA,CAAA,aAAA,EAAA,EAAA,SAAA,EAAA,IAAA,EAAA,CAAA,CAAA;aAIA;SACA,CAAA,CAAA;KACA,CAAA;IACA,kBAAA,CAAA,SA/D0B,CA+D1B,eAAA,GAAA,UAAA,SAAA,EAAA;QACA,IAAA,KAAA,GAAA,IAAA,CAAA;QACA,IAAA,CAAA,OAAA,GAAA,CAAA,SAAA,IAAA,EAAA,EAAA,WAAA,EAAA,CAAA;QAxDA,IAAA,CAAA,aAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,EAAA,OAAA,CAAA,KAAA,KAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA;YAgEQ,IAAR,CAAA,OAAA,GAAA,KA/DmB,CA+DnB;SACA;QACA,IAAA,CAAA,gBAAA,EAAA,CAAA;KA7DA,CAAA;IAmEA,kBAAA,CAAA,SAAA,CAlE6B,gBAAM,GAkEnC,UAAA,KAAA,EAAA;QACI,IAAI,KAlEK,GAkEb,IAAA,CAAA;QACA,KAAA,GAAA,KAAe,IAAf,IAlEuB,CAkEvB,WAAA,CAlEwB,KAkExB,CAAA,IAAA,GAAA,CAAA;QACA,IAAA,IAAA,CAAA,aAAA,EAAA;YAhEQ,KAAA,GAAQ,IAkEhB,CAAA,aAlEkC,CAkElC,cAlE+C,CAAG;SAmElD;QACI,IAAI,KAAR,GAAA,IAAA,CAAA,aAlE+B;aAmE/B,MAAA,CAAA,UAAA,EAAA,EAAA,EAAA,OAAA,EAAA,CAAA,QAAA,KAAA,CAAA,IAAA,KAAA,CAAA,gBAAA,CAAA,EAAA,CAAA,IAAA,MAAA,CAAA,EAAA,CAAA,CAAA;QA5DA,IAAA,QAAA,GAAG,KAAH,CAAA,MAAA,CAAA;QAyEM,IArEI,QAqEV,GAAA,CAAA,EArEwB;YACd,IAqEV,QArEsB,GAqEtB,KArE8B,CAqE9B,QAAA,GAAA,CAAA,CAAA,CAAA;YApEU,KAAK,GAqEf,KArEuB,CAqEvB,MAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA,EAAA,OAAA,CAAA,GAAA,QAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;YAEU,IArEG,CAqEb,qBAAA,CArEiC,IAqEjC,CAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,CAAA;YACA,IAAA,CArEe,qBAqEf,CArEqC,IAqErC,CAAA,SAAA,EAAA,EAAA,CAAA,QAAA,CAAA,CAAA,CAAA;SAcA;KACA,CAAA;IACA,kBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAA,KAAA,EAAA;QACA,IAAQ,KAAR,KAAA,KAAA,CAAA,EAAA,EAAA,KAAA,GAAA,IAAA,CAAA,EAAA;QACA,IAAQ,GAAR,EAAA,OAAoB,GAApB;YACA,aAAA,EAAA,IAAA;YACA,cAAA,EAAA,IAAA;YACQ,YAAR,EAAA,IAAA;YACA,eAAA,EAAA,IAAA;SACA,CAAA;QACA,QAAA,IAAA,CAAA,OAAA;YACQ,KArEK,QAAA,CAqEb;YACA,KAAA,gBAAA;gBACU,GAAG,GArEG,eAqEhB,CAAA;gBACU,MAAM;YACR,KArEK,KAqEb,CArEa;YAsEb,KAAA,aAAA,CAAA;YACA;gBACA,GAAA,GAAA,cAAA,CAAA;gBACU,MAAM;SAChB;QACA,OAAA,CAAU,GAAV,CAAA,GAAA,KAAA,CAAA;QACA,OAAA,OAAA,CArEa;KAsEb,CAAA;IACA,OAAA,kBAAA,CAAA;CACA,CAAA,eArEa,CAqEb,CAAA,CAAA;AACA,kBAAA,CAAA,UAAA,GAAA;IACA,EAAA,IAAA,EAAAS,uBAAA,EAAA,IArEqB,EAqErB,CAAA;gBACU,QAAV,EAAA,gSAAA;aACA,EAAA,EAAA;CACA,CAAA;AACA,kBAAA,CAAA,cAAA,GArEwB,YAqExB,EAAA,OAAA;IACA,EAAA,IAAA,EAAA,YAAA,GAAA;IAEA,EAAA,IAAA,EAAAD,wBAAA,GAAA;IACA,EAAA,IAAA,EAAAD,uBAAA,GAAA;IACA,EAAA,IAAA,EAAA,eArEqB,EAqErB,UAAA,EArE6B,CAAO,EAqEpC,IAAA,EArE4CJ,sBAqE5C,EAAA,EAAA,EAAA,IAAA,EAAAC,kBAAA,EAAA,EAAA,EAAA;IACA,EAAA,IAAA,EAAAS,oBAAA,GAAA;CACA,CAAA,EAAA,CAAA;AAGA,kBAAA,CAAA,cArE0B,GAqE1B;IA5BA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAEZ,mBAAA,EAAF,IAAA,EAxCoB,CAwCpB,aAAA,EAAA,EAAA,EAAA;IA8BA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA;IAEA,OAAA,EAAA,CAAA,EAAU,IAAI,EAAdA,mBAAA,EAAA,IAAA,EArEwB,CAqExB,gBAAA,EAAA,EAAA,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAY,EAAZA,mBAAA,EAAA,IArEyB,EAqEzB,CAAA,gBAAA,EAAA,EAAA,EAAA;IACA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA;IAMA,OAAA,EAAA,CAAA,EAAU,IAAV,EArEgBA,mBAqEhB,EAAA,IAAA,EArE6B,CAqE7B,gBAAA,EAAA,EAAA,EAAA;IACA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EArEoB,IAAI,EAqExB,CAAA,mBArE2C,EAqE3C,EArEqD,EAqErD;IACA,SAAA,EAAA,CAAA,EArEY,IAqEZ,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;IACA,SAAA,EAAA,CAAU,EAAV,IAAgB,EAAhBA,mBAAA,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;IACA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;IAEA,SAAA,EArEU,CAqEV,EArEgB,IAqEhB,EAAAA,mBAAA,EAAA,IArEiC,EAqEjC,CAAA,mBAAA,EArE8C,EAqE9C,EAAA;IACA,SAAA,EArEU,CAqEV,EArEgB,IAqEhB,EAAAA,mBAAA,EAAA,IArEiC,EAqEjC,CAAA,mBAAA,EArE8C,EAqE9C,EAAA;IAEA,SAAA,EAAA,CAAA,EAAA,IAAA,EArEsBA,mBAqEtB,EArEwB,IAqExB,EArE+B,CAAK,mBAAmB,EAAE,EAqEzD,EAAA;IACA,SAAA,EAAA,CArEU,EAqEV,IAAA,EAAAA,mBAAA,EArEyB,IAqEzB,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;CAMA,CAAA;AACA,IAAA,mBAAA,IAAA,UArEmC,MAqEnC,EAAA;IACAD,SAAA,CAAA,mBArEuC,EAqEvC,MAAA,CAAA,CAAA;IAEA,SAAA,mBAAA,CArE6B,OAqE7B,EAAA,KArE+B,EAAa,QAqE5C,EAAA,SAAA,EAAA;QACA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,CAAA,IAAA,IAAA,CAAA;;QAnEA,IAAA,SAAA,EAAA;YACQ,KAqER,CAAA,cArE2B,GAqE3B,SAAA,CAAA,OAAA,CAAA,SAAA,CAAA,KAAA,CAAA,eAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA;;;;;QAKA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KAnEA,CAAA,CAAA;IAwEA,MAAK,CAAL,cAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,QAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,QAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAmB;QACnB,YAAA,EAAA,IAAA;KACA,CAAC,CAAD;IACA,MAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,QAAA,EAAA;QAtEA,GAAA,EAAA,UAAA,GAAA,EAAO,EAAP,IAAA,CAAA,WAAA,CAAA,QAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAwEA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAvEiB;KAwEjB,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,QAAA,EAAA;QACA,GAAA,EAAA,UAvEmB,GAuEnB,EAvEmB,EAAO,IAAA,CAuE1B,WAAA,CAAA,QAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAvEqB,CAuErB,mBAAA,CAAA,SAvEkD,EAAG,QAuErD,EAAA;QACA,GAAA,EAAA,UAvEe,GAuEf,EAAA,EAvEqB,IAuErB,CAAA,WAAA,CAAA,QAvEkD,EAAG,GAuErD,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,QAAA,EAAA;;QD3UA,UAAA,EAAA,IACC;QA2ED,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAG;IAzEH,MAAA,CAAA,cAD2B,CAAK,mBAAa,CAC7C,SAAA,EAAA,UAAA,EAAA;;QAAO,UAKP,EAAA,IAAA;;KAKA,CAAA,CAAA;;IAKA,MAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,SAb0D,EAa1D,UAAA,EAAA;;QAZO,UAiBP,EAAA,IAAA;;KAKA,CAAA,CAAA;;IAKA,MAAA,CAAA,cAxBwB,CAwBxB,mBAAA,CAAA,SAxBsD,EAwBtD,UAAA,EAAA;;QAvBI,UAAA,EA4BJ,IAAA;;KAKA,CAAA,CAAA;;IAKA,MAAA,CAAA,cApCwB,CAoCxB,mBAAA,CAAA,SApCsD,EAoCtD,UAAA,EAAA;;QAlCI,UAAA,EAuCJ,IAAA;;KAKA,CAAA,CAAA;;IAKA,MAAA,CAAA,cA/CyB,CA+CzB,mBAAA,CAAA,SA/CuD,EA+CvD,UAAA,EAAA;;QA9CI,UAAA,EAmDJ,IAAA;;KAcA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,UAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QAMA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IAEA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,UAAA,EAAA;QACA,GAlDO,EAkDP,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACI,UAAJ,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KA5CA,CAAA,CAAA;IAkDA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,UAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QAEI,YAAJ,EAAA,IAAA;KACG,CAAH,CAAA;IA/CG,AAAH;IAqDA,mBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAA,OAAA,EAAA;QAGI,IAAJ,OAAA,CAAA,MAAA,CAAA,IAAA,IAAA,IAAA,IAAA,CAAA,aAAA,EAAA;YACM,IAAN,CApDW,gBAoDX,EAAA,CAAA;SACA;KACA,CAAA;IACA,mBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;QACA,IAAA,KAAA,GApDY,IAoDZ,CAAA;QACA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;QACA,IAAM,CAAN,2BAAA,CAAA,MAAA,EAAA,MAAA,EAAA,UAAA,OAAA,EAAA;YACA,KAAA,CAAA,gBAAA,CAAA,OApDkC,CAoDlC,KAAA,CAAA,CAAA;SACA,CAAA,CAAA;QACA,IAAA,CAAA,gBAAA,EAAA,CAAA;KAEA,CAAA;IACA,mBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;;QAnDA,IAAA,IAAA,CAAA,cAAA,EAAA;YACQ,IAoDR,CAAA,cAAA,CAAA,WAAA,EAAA,CAAA;SACA;;;;;QAKA,IAAA,CAAA,aAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,EAAA,OAAA,CAAA,KAAA,KAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA;YACA,IAAA,CApDK,OAoDL,GAAA,KAAA,CAAA;SACA;QAlDA,IAAA,CAAA,gBAAA,EAAA,CAAA;KAuDA,CAAC;IACD,mBAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAA,KAAA,EAAA;QACA,KAAA,GAAA,KAAgB,IAAhB,IAAA,CAAA,WAAA,CAAA,MAAA,CAAA,CAAA;QACA,IAAA,IAAA,CAAA,aAAA,EAAA;YArDA,KAAA,GAAA,IAAA,CAAA,aAAA,CAAA,cAAA,CAAA;SAuDA;QACA,KAAS,GAtDE,iBAsDX,CAAA,KAAA,IAAA,MAAA,CAAA,CAAA;QACA,IAAA,CAAS,oBAAT,CAAA,IAtDiC,CAsDjC,SAAA,CAAA,KAtDmC,CAsDnC,CAtDmD,CAsDnD;KACA,CAAA;IACA,mBAAA,CAtDoB,SAsDpB,CAAA,SAAA,GAAA,UAtDmD,KAsDnD,EAAA;QACA,OAtDW;YAuDX,SAAA,EAAA,MAAA;YACA,WAAA,EAAA,KAAA;YACA,gBAAA,EAAA,IAAA,CAAA,aAAA;SACA,CAAA;KACA,CAAA;IACA,MAAA,CAAA,cAAA,CAtDsB,mBAsDtB,CAAA,SAAA,EAAA,eAAA,EAAA;QACA,GAAA,EAAA,YAAA;YACA,IAAA,KAAA,GAtDgB,IAsDhB,CAAA;YACA,IAAA,oBAAA,GAAA,YAAA,EAAA,OAAA,KAAA,CAAA,iBAAA,CAAA,KAAA,CAAA,aAAA,CAAA,CAAA,EAAA,CAAA;;SDvLA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACE,OAAF,mBAAA,CAAA;CACA,CAAA,eAAA,CADgB,CAChB,CAAA;AACA,mBAAA,CAAA,UAAA,GAAA;IAOA,EAAA,IAAA,EAAAS,uBAAA,EACC,IADD,EAAA,CAAA,EACC,QADD,EAAA,wRAAA,EAAA,EAAA,EAAA;CAMA,CAAA;AAGA,mBAAA,CAAA,cAAA,GAAA,YAAA,EAAA,OAAA;IAPA,EAAA,IAAA,EAAA,YAAA,GAAmD;IAAnD,EAAA,IAAA,EAAAD,wBAAA,GAAA;IAQA,EAAA,IAAA,EAAQD,uBAAR,GAAA;IACA,EAAA,IAAA,EAAA,eAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAJ,sBAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,kBAAA,EAAA,EAAA,EAAA;;AALO,mBAAP,CAAA,cAAA,GAAA;IAOA,MANE,EAAM,CAMR,EAAA,IAAA,EANQH,mBAMR,EAAA,IAN2B,EAM3B,CAAA,cAAA,EAAA,EAAA,EAAA;;;IAGA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA;IACA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA;IAJA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA;IASA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA;IACA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAoBA,mBAApB,EAAA,IAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA;IACA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA;IACA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA;;IDnBA,UAAA,EAAA,CAAA,EAAA,IAAA,EACCA,mBADD,EAAA,IAAA,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA;IA6EA,UAAA,EAvDG,CAuDH,EAAA,IAvDuB,EAwDTA,mBAvDO,EAwDP,IAFd,EAAA,CAAA,oBAAA,EAAA,EAAA,EAAA;IAIA,UAAU,EAAV,CAAA,EAAA,IAAmB,EAAnBA,mBAA0B,EAA1B,IAAA,EAAkC,CAAC,oBAAnC,EAAA,EAAA,EAAA;CAxDA,CAAA;AA+CA,SAAA,aAAA,CAAG,KAAA,EAAH,IAAA,EAAA,MAAA,EAAA;IAYA,IAAI,IAAI,KAAR,KAAA,CAAA,EAAA,EAAA,IAA2B,GAA3B,GAAA,CAAA,EAAA;IACA,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,EAAA,MAAA,GAAA,GAAA,CAAA,EAAA;IAhFA,IADU,KACV,GAAA,CAAA,IAAA,EAAA,MAAA,EAAA,KAAA,CAAA,CADqC;IAMrC,IALO,CAKP,GAAA,KALO,CAKP,OAAA,CAAA,MAAA,CAAA,CAAA;IAKA,IATO,CASP,GAAA,CAAA,EAAA;;QARO,IAaP,OAAA,GAAA,KAAA,CAb4B,MAa5B,CAAA,CAAA,EAAA,CAAA,CAbkC,CAAW,IAa7C,EAAA,CAAA,KAbyD,CAazD,GAb6D,CAAC,CAa9D;;YAKA,KAjBO,CAiBP,CAAA,CAjBO,GAiBP,OAAA,CAAA,CAAA,CAAA,CAAA;;SAKA;;SAKA,IAAA,CAAA,IAxBI,CAAA,EAwBJ;;KAKA;;QA3BI,IAgCJ,OAhCI,GAAA,KAgCJ,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA;;YAKA,IAAA,EApCI,MAoCJ,EApCyB,KAAK;;KAyC9B;;CAKA;;IAKA,OAAA,IAAA,CAAA,OAAA,CAAA,OA/C8B,EA+C9B,EAAA,CAAA,CAAA,OAAA,CAAA,aAAA,EA/CwD,MA+CxD,CAAA,CAAA;;AAKA,IAAA,aAAA,IAAA,UAnD8B,MAmD9B,EAAA;;IAqBA,SAAA,aAAA,CAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAA,UAAA,EAAA,KAAA,EAAA;QACI,IAAI,KAAR,GApDgB,MAoDhB,CAAA,IAAA,CAAA,IAAA,EAAA,OApDqC,EAoDrC,KAAA,EAAA,QAAA,CAAA,IAAA,IAAA,CAAA;QACA,KAAA,CAAA,UAAA,GAAA,UAAA,CAAA;QACA,KAAA,CAAA,KAAA,GAAA,KAAA,CAAA;QACA,KAAA,CAAA,OAAA,GAAA,KAAA,CAAA;QAKA,KAAA,CAAA,WAAA,CAAA,MAAA,EAAA,EAAA,CAAA,CAAA;QACI,KAAK,CApDC,WAAC,CAoDX,QAAA,EAAA,CAAA,CAAA,CAAA;QACI,KAAJ,CAAA,WAAA,CAAA,MAAA,EAAA,CAAA,CAAA,CAAA;QACA,IAAM,UAAN,EAAA;YACA,KAAA,CAAA,cAAA,GAAA,UAAA,CAAA,OAAA,CAAA,SAAA,CAAA,UAAA,SAAA,EAAA;gBACA,KAAA,CAAA,eAAA,CAAA,SAAA,CAAA,CAAA;aAMA,CAAA,CAAA;SACA;QAEI,OAAJ,KAAA,CAAA;KACA;IACA,MApDM,CAAC,cAoDP,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,QAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAjCA,UAAA,EAAA,IAAA;QAiDI,YAAJ,EAAA,IAAA;KAEA,CAAA,CAAA;IAEA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,aAAA,CAAA,SAAA,EAAA,MAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QA1CA,YAAG,EAAH,IAAA;KAkDA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,aAAA,CAAA,SAAA,EAAA,MAAA,EAAA;QA1CA,GAAA,EAAA,UAAA,GAAG,EAAH,EAAA,IAAA,CAAA,WAAA,CAAA,MAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAyBE,UAAF,EAAA,IAAA;QA2BI,YAAJ,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IAEA,MAAA,CAAA,cAAA,CAAA,aAlDmC,CAkDnC,SAlD6C,EAkD7C,QAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,QAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAhDA,UAAA,EAAG,IAAH;QAsDI,YAAJ,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,QAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAGI,UArDI,EAqDR,IAAA;QACI,YAAJ,EAAA,IAAA;KACG,CAAH,CAAA;;IApDA,MAAA,CAAA,cAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,EAAA;QAsDA,GAAA,EAAA,UArDmB,GAqDnB,EAAA,EArDyB,IAqDzB,CAAA,WAAA,CAAA,QAAA,EAAA,GAAA,CAAA,CAAA,EAAA;;;;;IAKA,MAAA,CAAA,cAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,QAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAnDA,UAAA,EAAA,IAAA;QAwDA,YAAA,EAAA,IAAA;KACA,CAAC,CAAD;IACA,AAAA;IACA,MAAK,CAAL,cAAA,CAAA,aAAkC,CAAlC,SAAA,EAAA,QAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,QAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAtDA,UAAA,EAAA,IAAA;QAwDA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAvDqB,CAuDrB,aAvDkC,CAuDlC,SAAA,EAAA,UAAA,EAAA;QACA,GAAA,EAAA,UAvDe,GAuDf,EAAA,EAvDqB,IAuDrB,CAAA,WAAA,CAAA,UAAA,EAAA,GAvD0D,CAuD1D,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAvDiB,CAuDjB,aAAA,CAvDoC,SAuDpC,EAAA,UAvDsC,EAAoB;QAwD1D,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAvD8B,CAuD9B,WAAA,CAAA,UAAA,EAAA,GAAA,CAvD0D,CAuD1D,EAAA;QACA,UAvDc,EAuDd,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;;QD1NA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QA4EA,UAAA,EAAA,IAAA;QACI,YAAJ,EAAA,IAAA;KACG,CAAH,CAAA;IAzEA,AAAA;IAKA,MAAA,CAAA,cAAA,CAAA,aALiC,CAAW,SAAC,EAAU,UAKvD,EAAA;QAJO,GASP,EAAA,UAT2B,GAS3B,EATgC,EAShC,IAAA,CAAA,WAAA,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA,EAAA;;QARO,YAaP,EAAA,IAAA;;IAKA,AAAA;;QAhBO,GAqBP,EAAA,UArB2B,GAqB3B,EArBgC,EAqBhC,IAAA,CAAA,WAAA,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA,EAAA;;QAnBI,YAwBJ,EAAA,IAAA;;IAKA,AAAA;;QA3BI,GAgCJ,EAAA,UAAA,GAAA,EAAA,EAhC6B,IAgC7B,CAAA,WAAA,CAAA,UAAA,EAhC0D,GAAE,CAgC5D,CAAA,EAAA;;QA/BI,YAoCJ,EAAA,IAAA;;IAKA,AAAA;;QAtCI,GA2CJ,EAAA,UAAA,GAAA,EAAA,EA3C6B,IA2C7B,CAAA,WAAA,CAAA,UAAA,EA3C0D,GAAE,CA2C5D,CAAA,EAAA;;QA1CI,YA+CJ,EAAA,IAAA;;IAKA,AAAA;;QAcA,GAAA,EAAA,UAnDG,GAmDH,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,UAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACI,UAAJ,EAnDgB,IAmDhB;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAG;IAMH,aAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAA,OAAA,EAAA;QACI,IAAJ,OAAA,CAAA,MAAA,CAAA,IAAA,IAAA,IAAA,IAAA,CAAA,aAAA,EAAA;YAEQ,IAAR,CAAA,YAAA,EAAA,CAAA;SACA;KACA,CAAA;IAxBA,aAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;QA0BA,IAAA,KAAA,GAAA,IAAA,CAAA;QA7CA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;QAmDI,IAAJ,CAAS,2BAAT,CAlD2B,MAkD3B,EAlDuC,EAkDvC,EAAA,UAAA,OAAA,EAAA;YACQ,KAlDK,CAkDb,YAlDc,CAkDd,OAAA,CAAA,KAAA,CAAA,CAAA;SACA,CAAA,CAAA;QACA,IAAA,CAAA,YAAA,EAAA,CAAA;KAEA,CAAA;IACA,aAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;QA/CA,MAAG,CAAH,SAAA,CAAA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;QAqDI,IAAJ,IApDY,CAoDZ,cAAA,EAAA;YACA,IAAA,CApDW,cAoDX,CAAA,WApDsC,EAoDtC,CAAA;SACA;;IAnDA,aAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAA,SAAA,EAAA;QAqDA,IApDQ,CAoDR,OAAA,GApDmB,SAAQ,IAoD3B,IApD4B,CAoD5B,OAAA,IAAA,KAAA,CAAA;;;;;QAKA,IAAA,IAAA,CAAA,aAAA,EAAA;YACA,SAAA,GAAA,IAAA,CAAA,aAAA,CAAA,cAAA,CAAA;SAlDA;QAuDA,IAAO,KAAP,GAAA,MAAA,CAAsB,SAAtB,CAAA,CAAA,OAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;QACA,IAAO,KAAP,GAAA,aAAA,CAAA,KAAA,EAAA,IAAA,CAAA,WAAA,CAAA,MAAA,CAAA,EAAA,IAAA,CAAA,WAAA,CAAA,QAAA,CAAA,CAAA,CAAA;QACA,IAAO,CAAP,oBAAA,CAAA,IAAA,CAAA,cAAA,CAAA,KAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA,CAAA;KACA,CAAA;IArDA,aAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA;QAuDA,IAAA,MAAA,GAAA,IAAA,CAAA,iBAAA,CAAA,IAAA,CAtDiC,aAsDjC,EAAA,IAAA,CAAA,CAAA;QACA,IAAA,SAAA,GAtDoB,CAsDpB,MAtD2B,CAsD3B,OAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAtDmC,IAAmB,QAsDtD,GAAA,KAAA,CAAA;QACA,IAAA,GAtDW,EAsDX,OAtDoB,CAsDpB;QACA,IAAA,GAtDW,CAAA,IAsDX,IAtDoB,GAsDpB,IAtD2B,CAsD3B,GAtD2B,IAsD3B,CAAA;QACA,MAAA,GAAA,CAtDc,MAAM,IAsDpB,GAtD2B,IAAA,CAsD3B,GAAA,MAAA,CAAA;QACA,IAAA,WAAA,GAAA;YACA,WAAA,EAAA,IAAA;YACA,YAtDgB,EAAM,IAsDtB;YACA,WAAA,EAAA,IAAA;YACA,YAtDgB,EAAM,IAsDtB;SACA,CAAA;QACA,QAAA,KAAA,IAAA,EAAA;YACA,KAtDa,EAsDb;gBACA,GAAA,GAAA,YAAA,CAAA,WAAA,EAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,CAAA,CAAA;gBACA,MAAA;;YD9KA,KAAA,QAAA;gBAEsB,IAEtB,GAAA,CAAA,CAFiC;gBAAjC,GAAA,GAAsB,YAAA,CAAW,WAAjC,EAAA,EAAA,MAAA,EAAA,UAAA,EAAA,CAAA,CAAA;gBAAA,MAAA;YASA,KAAA,MAAA;gBACA,GAPe,GAOf,YAAA,CAAA,WAAA,EAAA,EAAA,MAAA,EAAA,UAAA,EAAA,CAAA,CAAA;gBACU,MAAV;YACA,KAAA,UAAA;gBAPA,MAAA,GAAA,CAAA,CAAA;gBAQU,GAAV,GAAA,YAAA,CAAA,WAAA,EAAA,EAAA,MAAA,EAAA,UAAA,EAAA,CAAA,CAAA;gBACA,MAAA;YACA,KAAA,MAAA;gBAOA,GAZG,GAAA,YAYH,CAZG,WAYH,EAAA,EAAA,MAAA,EAAA,IAAA,GAAA,GAAA,GAAA,MAAA,GAAA,OAAA,EAAA,CAAA,CAAA;gBACA,MAZS;YAaH,KAZK,MAYX;gBACA,IAAA,GAAA,CAAA,CAAA;gBAZA,MAAA,GAAA,CAAA,CAAA;gBAaU,GAAV,GAAA,YAAA,CAAA,WAAA,EAAA,EAAA,MAAA,EAAA,UAAA,EAAA,CAAA,CAAA;gBACA,MAAA;YACA;gBAMA,IAAA,OAAA,GAAA,MAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA;gBACA,IAAA,SAAA,GAf4B,MAe5B,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA;gBACA,OAAA,GAAA,OAAA;oBAbG,MAmBH,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA;oBACA,MAAA,CAAA,KAAA,CAAA,CAnBoB,OAmBpB,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA;oBACA,MAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA;oBAQA,MAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA;gBACA,IAAA,CAAA,OAAA,IAzB4B,CAyB5B,SAAA,IAAA,CAAA,KAAA,EAAA,KAAA,EAAA,EAAA;oBACA,KAAA,GAAA,KAAA,GAAA,GAAA,CAAA;iBAOA;gBACA,IAAA,KAAA,KAAA,KA9B+B,EAAC;oBA+BhC,KAAA,GAAA,IAAA,CAAA;iBAIA;gBAIA,GA3BG,GA2BH,YAAA,CAAA,WA3BuD,EA2BvD;oBAIA,MAAA,EAAA,IAAA,GAAA,GAAA,GA9BuD,MA8BvD,GAAA,GA9BwD,IAAc,CA8BtE,OAAA,IAAA,IAAA,CAAA,KAAA,IAAA,KAAA,GAAA,MAAA,CAAA;iBAIA,CAAA,CAAA;gBAIA,MApCiC;SAwCjC;QAIA,IAAA,GAAA,GAAA,gBAAA,CA1CuC,SA0CvC,CAAA,GAAA,WAAA,GAAA,YA1C8E,CAAC;QA8C/E,IAAA,GAAA,GAAA,gBAAA,CAAA,SAAA,CAAA,GAAA,WAAA,GAAA,YAAA,CAAA;QAIA,IAAA,SAAA,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,MAAA,KAAA,IAAA,MAAA,CAAA,CAAA;QAIA,IAAA,IAnDG,GAmDH,MAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,IAAA,SAAA,CAAA;QAIA,IAAA,OAAA,GAAA,CAAA,IAAA,IAAA,CAtDuC,MAsDvC,CAAA;QAIA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,KAAA,IAAA,IAAA,IAAA,CAAA,GAAA,OAAA,KAAA,IAAA,IAAA,IAAA,CAAA,GAAA,KAAA,GAAA,IAAA,CAAA;QAIA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,KAAA,IAAA,IA5DuC,IA4DvC,CAAA,GAAA,OA5DuC,KA4DvC,CAAA,SAAA,IAAA,MA5D8E,CA4D9E,GAAA,KAAA,GAAA,IAAA,CAAA;QAIA,OAAA,YAAA,CA/DiC,GA+DjC,EAAA,EAAA,YAAA,EA/DuC,YA+DvC,EAAA,CAAA,CAAA;KAIA,CAAA;IAIA,OAAA,aAAA,CAAA;CAIA,CAAA,eAAA,CAAA,CAAA,CAAA;AAEA,aAAA,CAAA,UAAA,GAAA;IAEA,EAAA,IAAA,EAAAQ,uBAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,2NAAA;aAUA,EAjFa,EAiFb;CACC,CAAD;;IDvHA,EAAA,IAAA,EAAA,YAAA,GAAA;IAwJA,EAAA,IAAA,EAAAD,wBAAA,GACc;IAId,EAAA,IAAA,EAAAD,uBAAiB,GAAjB;IA1GA,EAAA,IAAA,EAAA,eAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAJ,sBAAA,EAAA,EAAA,EAAA,IAAA,EAAAO,sBAAA,EAAA,EAAA,EAAA;IAGA,EAAA,IAAA,EAAA,mBAAA,EAAA,UAAA,EAAA,CAAA,EAAwB,IAAxB,EAAAP,sBAAA,EAAA,EAAA,EAAA,IAAA,EAAAO,sBAAA,EAAA,EAAA,EAAA;CAyGA,CAAA,EAAA,CAAA;AACA,aAAS,CAAT,cAAA,GAAA;IACA,QAAQ,EAAR,CAAA,EAAA,IAAA,EAAAT,mBAAA,EAAA,IAAA,EAAA,CAAiC,UAAU,EAA3C,EAAA,EAAiD;IAIjD,MAAA,EAAS,CAAC,EAAV,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAgC,CAAhC,QAAA,EAAA,EAAA,EAAA;IACA,MAAA,EAAM,CAAN,EAAA,IAAA,EAAAA,mBAAoB,EAApB,IAAA,EAAA,CAAA,QAAA,EAAuC,EAAvC,EAAA;IACA,QAAM,EAAN,CAAA,EAAW,IAAX,EAAAA,mBAAA,EAAA,IAAA,EAA8B,CAA9B,WAA0C,EAA1C,EAAA,EAAA;IACA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA;IACA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA;IAhKA,QAAA,EAAA,CAAA,EAAA,IAAA,EACGA,mBADH,EAAA,IAAA,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA;IACA,QAAQ,EAAR,CAAA,EAAA,IAAA,EAAAA,mBACU,EADV,IAAA,EAAA,CAAA,WAAA,EAAA,EAAA,EAC+C;IAA/C,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAC0B,EAD1B,IAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA;IACA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA;IAKA,UAAA,EAAA,CADO,EACP,IAAA,EAD0CA,mBAAK,EAC/C,IAAA,EAAA,CAAA,cAAA,EAAA,EAD0E,EAC1E;IAKA,UAAA,EAAA,CALO,EAKP,IAAA,EAL0CA,mBAAK,EAK/C,IAAA,EAAA,CAAA,cAAA,EAAA,EAL0E,EAK1E;IAKA,UAAA,EAAA,CATO,EASP,IAAA,EAT0CA,mBAAK,EAS/C,IAAA,EAAA,CAAA,cAAA,EAAA,EAT0E,EAS1E;IAKA,UAAA,EAAA,CAbO,EAaP,IAAA,EAb0CA,mBAAK,EAa/C,IAAA,EAAA,CAAA,cAAA,EAAA,EAb0E,EAa1E;IAKA,UAAA,EAAA,CAjBO,EAiBP,IAAA,EAjB0CA,mBAAK,EAiB/C,IAAA,EAAA,CAAA,cAAA,EAAA,EAjB0E,EAiB1E;IAKA,UAAA,EAAA,CAAA,EApBI,IAAA,EAoBJA,mBAAA,EApB4C,IAoB5C,EAAA,CAAA,cAAA,EAAA,EAAA,EApBuE;CAyBvE,CAAA;AAKA,IAAA,kBAAA,IAAA,UAAA,MAAA,EAAA;IAKAD,SAAA,CAAA,kBAAA,EAAA,MAhC4D,CAgC5D,CAAA;IAKA,SAAA,kBAnCuC,CAAK,OAmC5C,EAAA,KAAA,EAnC4D,QAmC5D,EAnC6D;QACzD,OAuCJ,MAAA,CAAA,IAAA,CAvCuC,IAAA,EAuCvC,OAAA,EAAA,KAvC6C,EAuC7C,QAAA,CAvC6D,IAuC7D,IAAA,CAAA;KAKA;IAKA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,OAAA,EAAA;QA3CS,GAiDT,EAAA,UAjD0C,GAiD1C,EAjD+C,EAiD/C,IAAA,CAAA,WAAA,CAAA,OAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAhDS,UAqDT,EAAA,IAAA;QApDS,YAyDT,EAAA,IAAA;KAKA,CAAA,CAAA;IAKA,AAAA;IAKA,MAAA,CAAA,cApEuC,CAoEvC,kBApE0D,CAoE1D,SApE2D,EAoE3D,SAAA,EAAA;QAnEM,GAwEN,EAAA,UAAA,GAAA,EAAA,EAxE4C,IAwE5C,CAAA,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAvEM,UAAA,EA4EN,IAAA;QA3EM,YAgFN,EAAA,IAAA;KAKA,CAAA,CAAA;IAKA,AAAA;IAKA,MAAA,CAAA,cA3FuC,CA2FvC,kBA3F0D,CA2F1D,SA3F2D,EA2F3D,SAAA,EAAA;QA1FM,GA+FN,EAAA,UAAA,GAAA,EAAA,EA/F4C,IA+F5C,CAAA,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAgCA,UAAA,EAAA,IAAA;QACI,YAAJ,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAlGgC,CAkGhC,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAY,IAAZ;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAG;IAKH,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QACI,GAAJ,EAlGS,UAkGT,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAIA,UAAA,EAAA,IAAA;QACI,YAAJ,EAAA,IApGU;KAqGV,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QA1FA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAiGI,UAAJ,EAAA,IAAA;QACI,YAAJ,EAAA,IAhGU;KAiGV,CAAA,CAAA;IACA,AAAA;IAEA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAhGoD,WAAW,EAgG/D;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAhGwC,CAAC,WAgGzC,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACG,CAAH,CAAA;IA1FG,AAAH;IAkGA,MAAA,CAAA,cAjGgB,CAiGhB,kBAAA,CAAA,SAAA,EAAA,WAjG+D,EAiG/D;QACI,GAAJ,EAAA,UAAA,GAAA,EAAA,EAjGc,IAiGd,CAAA,WAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAjGc,IAAA;QAkGd,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAG;IA3FA,MAAH,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QAmGI,GAAJ,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAlG2C,WAkG3C,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAlGc,IAAA;QAmGd,YAAA,EAAA,IAAA;KAGA,CAAA,CAAA;IACA,AAAG;;QA1FH,GAAA,EAAA,UAAA,GAAA,EAA2C,EAA3C,IAAA,CAAA,WAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAkGA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAjGY;;;;;;;;IAyGZ,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QA/FA,UAAA,EAAA,IAAA;QAoGA,YAAA,EAAA,IAAA;KACA,CAAC,CAAD;IACA,AAAA;IACA,MAAK,CAAL,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAyB,IAAzB,CAAA,WAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KAlGA,CAAA,CAAA;IAoGA,AAAA;IACA,kBAAA,CAAA,SAAA,CAnG6B,WAmG7B,GAAA,UAAA,OAAA,EAAA;QACA,IAAA,OAAA,CAnGgB,OAmGhB,CAAA,IAAA,IAAA,IAnGmC,IAmGnC,CAAA,aAnGsD,EAmGtD;YACA,IAAA,CAnGa,gBAAgB,EAmG7B,CAAA;SACA;KACA,CAAA;IACA,kBAnGkB,CAmGlB,SAAA,CAnGwB,QAAa,GAmGrC,YAAA;QACA,IAAA,KAAa,GAnGE,IAmGf,CAAA;QACA,MAAA,CAAA,SAAA,CAAA,QAnGwB,CAmGxB,IAAA,CAnG+B,IAmG/B,CAAA,CAAA;QACA,IAAA,CAAA,2BAAA,CAnGqC,OAmGrC,EAAA,SAnGsD,EAAG,UAmGzD,OAAA,EAAA;YACA,KAAa,CAAb,gBAAA,CAnG+B,OAAM,CAmGrC,KAAA,CAAA,CAAA;SACA,CAAA,CAAA;QACA,IAAA,CAAA,gBAAA,EAAA,CAAA;KACA,CAAA;IACA,kBAnGc,CAmGd,SAAA,CAAA,gBAAA,GAnGgD,UAmGhD,KAAA,EAAA;QACA,KAAS,GAnGE,KAmGX,IAAA,IAnGoB,CAmGpB,WAAA,CAAA,OAAA,CAnG6C,IAAK,SAmGlD,CAAA;QACA,IAAA,IAnGW,CAmGX,aAAA,EAAA;YACA,KAAA,GAAA,IAnGoB,CAmGpB,aAnGiC,CAmGjC,cAAA,CAnGkD;SAoGlD;QACA,IAAA,CAAA,oBAnG6B,CAmG7B,IAAA,CAnGmC,SAmGnC,CAAA,KAAA,CAnGkD,CAmGlD,CAnGqD;KAoGrD,CAAA;IACA,kBAAA,CAAA,SAAA,CAnG6B,SAmG7B,GAAA,UAnGkD,KAmGlD,EAAA;QACA,IAAA,GAAW,GAnGE,EAAG,CAmGhB;QACA,QAAA,KAAA;YACA,KAnGa,OAAG;gBAoGhB,GAAA,CAnGgB,YAmGhB,CAnG6B,GAmG7B,YAAA,CAAA;gBACA,MAAA;YACA,KAAA,KAAA;;gBDjUA,MAAA;YAMA;gBAJqB,GAAA,CAArB,YAAA,CAAA,GAAA,KAAA,CAAA;gBAAA,MAAA;SAMA;QAEI,OAAJ,GAAc,CAAd;KACA,CAAA;IACA,OAAA,kBAAA,CAAA;CACC,CAAD,eAAA,CAAA,CAAA,CAAA;AAEA,kBAFC,CAED,UAAA,GAAA;IAWE,EAAF,IAAA,EAAAS,uBAAA,EAAA,IAAA,EAAA,CAAA;gBACc,QAAd,EAAA,gSAAA;aACA,EAAA,EAAA;CACA,CAAA;AACA,kBAAA,CAAA,cAAA,GAAA,YAAA,EAAA,OAAA;IAKA,EAAA,IAAA,EAAA,YAAA,GAAA;IACE,EAAF,IAAA,EAfMD,wBAAc,GAepB;IACE,EAAF,IAAA,EAfOD,uBAeP,GAAA;CACA,CAAA,EAAA,CAAA;AACA,kBAAA,CAfU,cAeV,GAfgC;IAgBhC,OAAA,EAAA,CAAA,EAAA,IAAA,EAAAN,mBAAA,EAAA,IAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA;IACE,SAAF,EAfS,CAAK,EAed,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA;IACA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA;IAQA,SAAA,EAAA,CAAA,EAAA,IAjBC,EAiBDA,mBAAA,EAAA,IAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA;IACE,SAAF,EAAA,CAAA,EAjBgB,IAiBhB,EAjBiBA,mBAiBjB,EAAA,IAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA;IACA,SAjBQ,EAAI,CAiBZ,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA;IACA,WAjBa,EAiBb,CAAA,EAAA,IAjBc,EAiBdA,mBAAA,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;IACA,WAAA,EAjBiB,CAiBjB,EAAA,IAAA,EAjBgCA,mBAiBhC,EAjBuC,IAiBvC,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;IACA,WAjBQ,EAiBR,CAAA,EAAA,IAAA,EAjBqBA,mBAAQ,EAAA,IAiB7B,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;IAOA,WAAA,EAAA,CAAA,EAAA,IAAA,EAnBCA,mBAmBD,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;IACE,WAAF,EAAA,CAAA,EAAA,IAnBsB,EAmBtBA,mBAAA,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;IACA,WAAA,EAAA,CAAA,EAnBS,IAmBT,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;IACA,WAnBS,EAmBT,CAAA,EAnBU,IAmBV,EAAAA,mBAnBiB,EAmBjB,IAAA,EAAA,CAnB8B,mBAmB9B,EAAA,EAAA,EAAA;CACA,CAAA;AACA,IAAA,aAnBW,GAmBX;IACA,QAAA,EAAA,CAAA;IAEE,OAnBO,EAmBT,MAAA;IACA,QAnBQ,EAmBR,MAAA;IACA,WAnBQ,EAmBR,MAAA;IACA,YAAA,EAAA,MAAA;CACA,CAAA;AACA,IAAA,iBAAA,IAAA,UAAA,MAAA,EAAA;IAOAD,SAAA,CAAA,iBAAA,EArBC,MAqBD,CAAA,CAAA;IACE,SAAF,iBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAA;QACM,IAAN,KAAA,GAAA,MAAA,CArByB,IAqBzB,CArByB,IAqBzB,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,CAAA,IAAA,IAAA,CAAA;QACI,KAAJ,CAAU,KAAV,GArBY,KAqBZ,CArBoB;QAsBpB,KAAA,CAAA,QAAA,GAAA,QAAA,CAAA;QArBA,KAAA,CAAA,oBAAA,CAAA,aAAA,CAAA,CAAA;QAsBI,OArBO,KAAK,CAqBhB;KACA;IACA,OArBO,iBAqBP,CAAA;CACA,CAAA,eAAA,CAAA,CAAA,CAAA;AACA,iBAAA,CAAA,UArB0B,GAqB1B;IACA,EAAA,IAAA,EAAAS,uBAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,EAAA,EAAA;CAMA,CAAA;AACA,iBArBY,CAAI,cAqBhB,GArBiC,YAqBjC,EAAA,OAAA;IACE,EAAF,IAAA,EAAA,YAAA,GAAA;IACA,EAAA,IAAA,EAAAD,wBAAA,GAAA;IAOA,EAAA,IAAA,EAAAD,uBAAA,GAvBCK;CAwBD,CAAA,EAAE,CAAF;AACAA,IAAAA,mBAAAA,IAAAA,UAAAA,MAAAA,EAAAA;IACAZ,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA,CAAA;IACE,SAAF,mBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAA,UAAA,EAAA;QACA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,CAAA,IAAA,IAAA,CAAA;;QD5FA,KAAA,CAAA,OAAA,GAAA,KACC,CADD;QAyJA,KAAA,CAAA,eAAA,EAAA,CAAA;QAMI,OAAJ,KAAA,CAAiB;KA1GjB;IACA,MAAA,CAAA,cAAA,CAAwB,mBAAxB,CAAA,SAAA,EAAA,QAAA,EAAA;QAGwB,GAAxB,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,QAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAyGI,UAAJ,EAAA,IAAA;QACI,YAAJ,EAAA,IAAA;KAIA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAoB,mBAAmB,CAAC,SAAS,EAAE,UAAnD,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAyC,UAAzC,EAAA,GAAA,CAAyD,CAAzD,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KAnKA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,UAAA,EAAA;QACI,GAAJ,EACS,UADT,GAAA,EAAA,EAC0B,IAD1B,CAAA,WAAA,CAAA,UAAA,EACgD,GADhD,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QAIO,YACP,EAAA,IAAA;KAKA,CAAA,CAAA;;IAKA,MAAA,CAAA,cATwC,CASxC,mBAAA,CAToD,SASpD,EAAA,UAT8E,EAAM;;QAC7E,UAAA,EAaP,IAAA;;KAKA,CAAA,CAAA;;IAKA,MAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,UApB+E,EAoB/E;;QAnBI,UAwBJ,EAxBI,IAwBJ;;KAKA,CAAA,CAAA;;IAKA,MAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,UAhC+E,EAgC/E;;QA9BI,UAmCJ,EAnCI,IAmCJ;;KAKA,CAAA,CAAA;;IAKA,MAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,YAAA,EA3C+E;;QAC3E,UA+CJ,EA/CI,IA+CJ;;KAMA,CAAA,CAAA;IAKA,AAAA;;QArDS,GA0DT,EAAA,UA1DwC,GA0DxC,EA1D6C,EA0D7C,IA1DmD,CA0DnD,WAAA,CAAA,YA1DyE,EAAK,GA0D9E,CA1D8E,CAAK,EA0DnF;;QAzDS,YA8DT,EAAA,IAAA;;IAKA,AAAA;;QAhEM,GAqEN,EAAA,UAAA,GAAA,EAAA,EArE4C,IAqE5C,CArE6C,WAAM,CAAU,YAqE7D,EAAA,GAAA,CArE+E,CAqE/E,EAAA;;QApEM,YAyEN,EAAA,IAAA;;IAKA,AAAA;;QA5EM,GAiFN,EAAA,UAAA,GAAA,EAAA,EAjF4C,IAiF5C,CAjF6C,WAAM,CAAU,YAiF7D,EAAA,GAAA,CAjF+E,CAiF/E,EAAA;;QA/EM,YAoFN,EAAA,IAAA;;IAKA,AAAA;;QAvFM,GA4FN,EAAA,UAAA,GAAA,EAAA,EA5F4C,IA4F5C,CA5F6C,WAAM,CAAU,YA4F7D,EAAA,GAAA,CA5F+E,CA4F/E,EAAA;;QA3FM,YAgGN,EAAA,IAAA;;IAmCA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,mBAjGyC,CAiGzC,SAAA,EAAA,YAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KAKA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,YAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACI,UAAJ,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KAIA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,YAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,WAAA,CAAA,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAzFA,UAAA,EAAA,IAAK;QAgGC,YAAN,EAAA,IAAA;KACA,CAAA,CAAA;IAGA,AAAA;IACA,mBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAA,OAAA,EAAA;QACA,IAAA,OAAA,CAAA,QAAA,CAAA,IAAA,IAAA,IAAA,IAAA,CAAA,aAAA,EAAA;YArFA,IAAG,CAAA,gBAAH,EAAA,CAAA;SA6FA;KACA,CAAA;IACA,mBAAA,CA5Fc,SA4Fd,CAAA,WAAA,GAAA,YAAA;QACA,MAAA,CAAA,SAAA,CAAA,WAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;QAGI,IAAI,IAAR,CAAA,cAAA,EAAA;YACA,IAAA,CAAA,cAAA,CAAA,WAAA,EAAA,CAAA;SApFA;KA+FA,CAAA;IACA,mBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;QAxCA,IAAA,KAAA,GAAA,IAAA,CAAA;QAhDA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;QA+FI,IA9FI,CA8FR,2BAAA,CAAA,QAAA,EA9F4C,CAAI,EA8FhD,UA9F4D,OA8F5D,EAAA;YACQ,KAAR,CA9FU,gBA8FV,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA;SACA,CAAA,CAAA;KACA,CAAA;IACA,mBAAA,CAAA,SAAA,CAAA,eAAA,GA9FwC,YA8FxC;QACA,IAAA,KAAA,GAAA,IAAA,CAAA;QACA,IAAM,IAAN,CAAA,UAAA,EAAA;YACA,IAAA,CAAA,cAAA,GAAA,IAAA,CAAA,UAAA,CAAA,OAAA,CAAA,SAAA,CAAA,UAAA,SAAA,EAAA;gBACA,KAAA,CAAA,eAAA,CAAA,SAAA,CAAA,CAAA;aAvFA,CAAA,CAAA;SAiGA;KAEA,CAAA;IACA,mBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAA,SAAA,EAAA;QACI,IAAI,CAAR,OAhGgB,GAgGhB,SAAA,IAAA,IAAA,CAAA,OAAA,IAAA,KAAA,CAAA;QACA,IAAM,CAAN,gBAAA,EAAA,CAhGe;KAiGf,CAAA;IACA,mBAAA,CAAA,SAAA,CAAA,gBAhGiC,GAgGjC,UAAA,KAhGkD,EAgGlD;QACA,KAAA,GAAQ,KAhGK,IAgGb,IAAA,CAAA,WAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA;QACA,IAAA,IAAQ,CAAR,aAAA,EAhG+BW;YAiG/B,KAAA,GAAA,IAAA,CAAA,aAAA,CAAA,cAAA,CAAA;SACK;QACD,IAAJ,CAAA,oBAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA;KACG,CAAH;;QAxFA,IAAA,SAAA,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA,OAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA;QAgGA,IA/FQ,IA+FR,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,CAAA;QACA,IAAA,CAAA,IAAA,IAAA,CAAA,SAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,EAAA;;;;;;;;AAQA,mBAAA,CAAA,UAAA,GAAA;IACA,EAAA,IAAA,EAAAF,uBAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,8SAAA,EAAA,EAAA,EAAA;CACC,CA/FC;AAED,mBAAD,CAAA,cAAA,GAAA,YAAA,EAAA,OAAA;IAkGA,EAAC,IAAI,EAAE,YAAY,GAAG;IACtB,EAAC,IAAI,EAAED,wBAAP,GAAA;IACA,EAAC,IAAI,EAAED,uBAAP,GAAA;IACA,EAAC,IAAI,EAAE,eAAP,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAJ,sBAAA,EAAA,EAAA,EAAA,IAAA,EAAAO,sBAAA,EAAA,EAAA,EAAA;CACA,CAAA,EAAA,CAAA;AACA,mBAAc,CAAd,cAA6B,GAA7B;IACA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAAT,mBAAA,EAAA,IAAA,EAAA,CAAA,cAAA,EAAA,EAAA,EAAA;IAhGA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAgE,IAAhE,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA;IAkGA,UAAA,EAAA,CAjGa,EAiGb,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAjGmC,iBAiGnC,EAAA,EAAA,EAAA;IACA,UAAA,EAAA,CAjGa,EAiGb,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAjGmC,iBAAiB,EAAE,EAiGtD,EAAA;IACA,UAAA,EAAA,CAjGa,EAiGb,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAjGmC,iBAAiB,EAAE,EAiGtD,EAAA;IACA,UAAA,EAAA,CAjGa,EAiGb,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAjGmC,iBAAiB,EAAE,EAiGtD,EAAA;IACA,YAAA,EAjGa,CAiGb,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAjGmC,CAiGnC,oBAAA,EAAA,EAAA,EAAA;IACA,YAAA,EAjGa,CAiGb,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAjGmC,CAiGnC,oBAAA,EAAA,EAAA,EAAA;IACA,YAAA,EAAA,CAjGe,EAiGf,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAjGqC,oBAAoB,EAAE,EAiG3D,EAAA;IACA,YAAA,EAAA,CAjGe,EAiGf,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAjGqC,oBAAoB,EAAE,EAiG3D,EAAA;IACA,YAAA,EAAA,CAjGe,EAiGf,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAjGqC,oBAAoB,EAAE,EAiG3D,EAAA;IACA,YAAA,EAAA,CAjGe,EAiGf,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAjGqC,oBAAoB,EAAE,EAiG3D,EAAA;IACA,YAAA,EAAA,CAjGe,EAiGf,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAjGqC,oBAAoB,EAAE,EAiG3D,EAAA;IACA,YAAA,EAAA,CAjGe,EAiGf,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAjGqC,oBAAoB,EAAE,EAiG3D,EAAA;CACA,CAAA;AACA,IAAA,kBAjGkB,IAAA,UAiGlB,MAjGqC,EAiGrC;IACAD,SAAA,CAjGc,kBAiGd,EAAA,MAjGmC,CAiGnC,CAjG6C;IAkG7C,SAAS,kBAjGkB,CAiG3B,OAAA,EAAA,KAAA,EAjGmC,QAiGnC,EAAA;QACA,OAjGW,MAiGX,CAjGc,IAiGd,CAAA,IAjG2B,EAiG3B,OAAA,EAAA,KAAA,EAAA,QAAA,CAAA,IAAA,IAAA,CAAA;KACA;IACA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAjGkD,EAiGlD,OAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAjGsB,EAiGtB,EAAA,IAAA,CAAA,WAAA,CAAA,OAAA,EAAA,GAjGuD,CAiGvD,CAAA,EAAA;QACA,UAjGa,EAAG,IAAA;QAkGhB,YAjGgB,EAiGhB,IAjGsB;KAkGtB,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAjGsB,kBAiGtB,CAAA,SAAA,EAAA,SAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAjGsB,EAiGtB,EAAA,IAAA,CAAA,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAjGa,EAAG,IAAA;QAkGhB,YAjGgB,EAiGhB,IAjGsB;KAkGtB,CAAA,CAAA;;QD7VA,GADM,EACN,UAAA,GAAA,EAAA,EAAA,IADkC,CAClC,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QASA,UAAA,EAFC,IAAA;QAGD,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IAKA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QAyJA,GAAA,EAAA,UA1GuB,GA0GvB,EAAA,EAAA,IAxGwB,CAwGxB,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAKI,UAAJ,EAAA,IAAA;QA9G0B,YAAA,EAA1B,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IA8GA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QAKA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAA4B,CAA5B,WAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KA7JA,CAAA,CAAA;IAKA,AAAA;IAKA,MAAA,CAAA,cAAA,CATwB,kBASxB,CAAA,SATuD,EAAC,SASxD,EAAA;;QARO,UAAA,EAaP,IAAA;;KAKA,CAAA,CAAA;;IAKA,MAAA,CAAA,cAAA,CArBwB,kBAqBxB,CAAA,SArBuD,EAAC,WAqBxD,EAAA;;QAnBI,UAwBJ,EAxBI,IAAmB;;KA6BvB,CAAA,CAAA;;IAKA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAhCoD,WAgCpD,EAAA;;QA/BI,UAoCJ,EApCI,IAAmB;;KAyCvB,CAAA,CAAA;;IAKA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EA3CmD,WA2CnD,EAAA;;QA1CI,UA+CJ,EA/CI,IAAiB;;KAoDrB,CAAA,CAAA;;IAKA,MAAA,CAAA,cAtD6B,CAsD7B,kBAAA,CAtDiD,SAsDjD,EAtD4D,WAsD5D,EAAA;QArDO,GA0DP,EAAA,UAAA,GA1DwB,EA0DxB,EAAA,IAAA,CAAA,WAAA,CA1DyC,WA0DzC,EA1D6D,GAAC,CAAG,CAAC,EA0DlE;QAzDO,UAAA,EA8DP,IAAA;;KAKA,CAAA,CAAA;;IAKA,MAAA,CAAA,cAAA,CAtEwB,kBAsExB,CAAA,SAAA,EAAA,WAAA,EAAA;;QArEO,UAAA,EA0EP,IAAA;;KAKA,CAAA,CAAA;;IAKA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,WAjFgE,EAAI;;QAChE,UAqFJ,EArFI,IAAmB;;KA0FvB,CAAA,CAAA;;IAKA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,WA5F+D,EAAI;;QAC/D,UAgGJ,EAhGI,IAAiB;;KAqGrB,CAAA,CAAA;;IAKA,MAAA,CAAA,cAAA,CAAA,kBAAA,CAAA,SAAA,EAAA,WAxG+D,EAAI;;QA+BnE,UAAA,EAAG,IAAH;QAuGI,YAtGY,EAsGhB,IAAA;KACG,CAAH,CAAA;IAQA,AAAA;IACA,kBAAA,CAAA,SAAA,CAAA,WAtGwC,GAsGxC,UAAA,OAAA,EAAA;QACA,IAAM,OAAN,CAAA,OAAA,CAAA,IAAA,IAtG8B,IAsG9B,IAAA,CAAA,aAAA,EAAA;YAvCA,IAAA,CAAA,gBAAA,EAAA,CAAA;SAyCA;KAMA,CAAA;IACA,kBAtGW,CAsGX,SAAA,CAAA,QAAA,GAAA,YAAA;QAEI,IAtGI,KAAA,GAAQ,IAAA,CAAK;QAwGjB,MAAJ,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;QACA,IAAM,CAAN,2BAAA,CAtG6B,OAAa,EAsG1C,GAAA,EAAA,UAAA,OAAA,EAAA;YACA,KAAA,CAAA,gBAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA;SAEA,CAAA,CAAA;QACA,IAAA,CAAA,gBAAA,EAAA,CAAA;KAIA,CAAA;IACA,kBAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UAAA,KAAA,EAAA;QACI,KAAJ,GAxGS,KAwGT,IAAA,IAAA,CAAA,WAAA,CAAA,OAAA,CAAA,IAAA,GAAA,CAAA;QACA,IAAM,IAAI,CAxGC,aAwGX,EAxG0B;YAyG1B,KAAA,GAAA,IAAA,CAAA,aAAA,CAAA,cAAA,CAAA;SACA;QAjGA,IAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA;KAwGA,CAAA;IACA,kBAAA,CAAA,SAvG4B,CAuG5B,SAAA,GAAA,UAAA,KAAA,EAAA;QACA,KAAA,GAAA,QAvGc,CAAK,KAuGnB,EAAA,EAAA,CAAA,CAAA;QACA,OAAA,EAAA,KAAA,EAAA,KAAA,CAAA,KAAA,CAAA,GAAA,CAAA,GAAA,KAAA,EAAA,CAAA;KAEA,CAAA;IACA,OAAA,kBAAA,CAAA;CACA,CAAA,eAAA,CAAA,CAAA,CAAA;AAnGA,kBAAG,CAAH,UAAA,GAAA;IA0GA,EAAA,IAAA,EAAAS,uBAAA,EAAA,IAAA,EAAA,CAAA,EAzGuB,QAAY,EAyGnC,gSAAA,EAAA,EAAA,EAAA;CACA,CAAA;AAMA,kBAAA,CA5GG,cA4GH,GAAA,YAAA,EAAA,OAAA;IACA,EAAA,IAAA,EAAA,YAAA,GAAA;IACA,EAAA,IAAA,EAAAD,wBAAA,GAAA;;CA3GA,CAAA,EAAA,CAAA;AA6GA,kBAAA,CAAA,cAAA,GAAA;IACA,OAAA,EAAA,CAAA,EAAE,IAAF,EAAAP,mBAAA,EAAA,IAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA;;;;;;;;;IASA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;IACA,WA5GE,EAAG,CA4GL,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;IA1GA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;IA+GA,WAAA,EAAA,CAAA,EAAA,IAAmB,EAAnBA,mBAAA,EAAA,IAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA;CACA,CAAA;AACA,IAAA,eAAA,IAAA,YAAA;IACA,SAAA,eAAA,CAAA,SAAA,EAAA;QACA,IAAA,CAAA,SAAA,GAAA,SAAA,CAAA;KA7GA;IA+GA,eA9GW,CA8GX,SAAA,CAAA,eA9GwC,GA8GxC,UAAA,EAAA,EAAA,SAAA,EAAA,KAAA,EAAA;QACA,IAAQ,KA9GK,EA8Gb;YACQ,IAAR,CA9Ga,SA8Gb,CAAA,QAAA,CA9GgC,EA8GhC,EAAA,SAAA,CA9G6C,CA8G7C;SACA;aACA;YACQ,IAAR,CA9Ga,SA8Gb,CAAA,WAAA,CAAA,EAAA,EAAA,SA9GgD,CA8GhD,CA9GkD;SA+GlD;KACA,CAAA;IACA,eA9Ge,CA8Gf,SAAA,CA9GqB,eA8GrB,GAAA,UAAA,EAAA,EAAA,SAAA,EAAA,UAAA,EAAA;QACA,IAAA,UAAA,EAAA;YACA,IA9GY,CAAA,SA8GZ,CAAA,QAAA,CA9G4B,EAAM,EA8GlC,SAAA,EAAA,UAAA,CAAA,CAAA;SACA;aACA;YACA,IA9GY,CAAA,SA8GZ,CAAA,WA9GkC,CAAA,EA8GlC,EAAA,SAAA,CA9GoC,CA8GpC;SACA;KACA,CAAA;IACA,eAAA,CAAA,SAAA,CA9G0B,QA8G1B,GAAA,UAAA,EAAA,EAAA,IAAA,EAAA;QACA,IAAQ,CAAR,SAAA,CA9GmB,QA8GnB,CAAA,EA9G0B,EAAM,IA8GhC,CAAA,CAAA;KACA,CAAA;IACA,eAAA,CAAA,SAAA,CA9G0B,WA8G1B,GAAA,UA9GkD,EA8GlD,EAAA,IAAA,EAAA;QACA,IAAA,CAAA,SAAA,CA9Ge,WA8Gf,CAAA,EAAA,EA9GkC,IA8GlC,CAAA,CAAA;KACA,CAAA;IACA,eA9Ge,CA8Gf,SAAA,CA9GqB,QAAa,GA8GlC,UAAA,EA9GoC,EAAc,KA8GlD,EAAA,KAAA,EAAA,KAAA,EAAA;QACA,IAAA,CAAA,SAAA,CA9Ge,QA8Gf,CA9G4B,EA8G5B,EA9G4B,KA8G5B,EAAA,KAAA,EAAA,KA9GkD,CA8GlD,CA9GqD;KA+GrD,CAAA;IACA,eA9Ge,CA8Gf,SAAA,CA9GqB,WA8GrB,GAAA,UAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA;QACA,IAAA,CAAA,SAAA,CA9Ge,WA8Gf,CAAA,EAAA,EA9GkC,KA8GlC,EAAA,KAAA,CAAA,CA9GoC;KA+GpC,CAAA;IACA,eAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA,EAAA,MAAA,eAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA;;IDzTA,eAAA,CAAA,SAAA,CACC,UADD,GAAA,YAAA,EAAA,MAAA,eAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA;IA4EA,eAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA,EAAA,MAAA,eAAA,CAAA,aAAA,CAAA,CAAA,EAAA,CAAA;IACA,eAAA,CAAA,SAAA,CAA0B,aAA1B,GAAA,YAAA,EAAA,MAAA,eAAA,CAAA,eAAA,CAAA,CAAA,EAAA,CAAA;IACA,eAAA,CAAA,SAAA,CAA0B,cAA1B,GAAA,YAAA,EAAA,MAAA,eAAA,CAAA,gBAAA,CAAA,CAAA,EAAA,CAAA;IACA,eAAA,CAAA,SAAA,CAAA,oBAAA,GAAA,YAAA,EAAA,MAAA,eAAA,CAAA,sBAAA,CAAA,CAAA,EAAA,CAAA;IA1EA,eADW,CACX,SAAA,CAAA,UAAA,GADmC,YACnC,EAAA,MAAA,eAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA;IAKA,eAAA,CAAA,SAAA,CAAA,mBAAA,GAJyD,YAIzD,EAAA,MAAA,eAAA,CAAA,qBAAA,CAAA,CAAA,EAAA,CAAA;IAKA,eAAA,CAAA,SAAA,CAAA,YAAA,GAR4C,YAQ5C,EAAA,MAAA,eAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA;IAKA,eAAA,CAAA,SAAA,CAAA,iBAZoD,GAAA,YAYpD,EAAA,MAAA,eAAA,CAAA,mBAAA,CAAA,CAAA,EAAA,CAAA;IAKA,eAAA,CAAA,SAAA,CAAA,mBAAA,GAhByD,YAgBzD,EAAA,MAAA,eAAA,CAAA,qBAAA,CAAA,CAAA,EAAA,CAAA;IAKA,eAAA,CAAA,SAAA,CAAA,kBAAA,GApBwD,YAoBxD,EAAA,MAAA,eAAA,CAAA,oBAAA,CAAA,CAAA,EAAA,CAAA;IAKA,eAvBK,CAuBL,SAAA,CAAA,mBAvByC,GAuBzC,YAAA,EAAA,MAAA,eAAA,CAAA,qBAAA,CAAA,CAAA,EAAA,CAAA;IAKA,eA3BK,CA2BL,SAAA,CAAA,OAAA,GA3BwC,YA2BxC,EA3BmD,MA2BnD,eAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA;IAKA,eA/BK,CA+BL,SAAA,CAAA,MAAA,GA/B6B,YAAsB,EA+BnD,MAAA,eAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA;IAKA,eAnCK,CAmCL,SAAA,CAAA,YAAA,GAAA,YAAA,EAAA,MAAA,eAAA,CAAA,cAAA,CAAA,CAAA,EAAA,CAAA;IAKA,OAAA,eAAA,CAtCuB;CA2CvB,EAAA,CAAA,CAAA;AAKA,SAAA,eAAA,CAAA,UAAA,EAAA;IAKA,OAAA,IAlDK,KAkDL,CAAA,8BAlDmD,GAAA,UAkDnD,GAAA,6BAAA,CAAA,CAAA;CAcA;AACA,IAAA,cAAA,IArDW,UAqDX,MAAA,EAAA;IAEAD,SAAA,CAAA,cArDgC,EAqDhC,MAAA,CAAA,CAAA;IAEA,SAAA,cAAA,CAAA,OAAA,EAAA,KAAA,EArDY,SAqDZ,EAAA,gBAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA;QACA,IAAA,KAAA,GAAY,MAAZ,CAAA,IAAA,CAAA,IArD2B,EAqD3B,OAAA,EAAA,KAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAAA;QACA,KAAO,CArDC,OAqDR,GAAA,OAAA,CAAA;QACA,KAAA,CAAA,gBAAA,GAAA,gBAAA,CAAA;QACI,KArDK,CAqDT,eArDyB,GAqDzB,IAAA,sBAAA,CAAA,SAAA,EAAA,OAAA,EAAA,KAAA,EAAA,SAAA,CAAA,CAAA;QACA,KAAA,CAAA,aAAA,GAAA,IAAA,sBAAA,CAAA,OAAA,EAAA,OAAA,EAAA,KAAA,EAAA,SAAA,CAAA,CAAA;QAKA,KAAA,CAAA,aAAA,CAAA,UAAA,CAAA,OAAA,EAAA,KAAA,CAAA,aAAA,CAAA,YAAA,CAAA,OAAA,CAAA,IAAA,EAAA,CAAA,CAAA;QACI,IAAI,CAAR,KAAA,CAAA,gBAAA,EAAA;YACM,IAAI,OAAV,GAAA,IArDY,eAqDZ,CAAA,SAAA,CAAA,CAAA;YACA,KAAA,CAAA,gBAAA,GAAA,IAAAE,uBAAA,CAAA,gBAAA,EAAA,gBAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA;SACA;QA3CA,OAAA,KAAA,CAAA;KAsDA;IACA,MAAA,CAAA,cAAA,CArDgB,cAqDhB,CArDsB,SAAsB,EAqD5C,aAAA,EAAA;QACA,GAAA,EAAA,UAAA,GArDY,EAqDZ;YACA,IAAA,CAAA,eAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA;YACA,IAAA,CAAA,gBAAA,CAAA,OAAA,GAAA,GAAA,CAAA;SA7CA;QAuDI,UAAJ,EAAA,IAtDU;QAuDV,YAAA,EAAA,IAAA;KAKA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,eAAA,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QAhDG,UAsDH,EAAA,IAAA;QACI,YAAJ,EAtDkB,IAAC;KAuDhB,CAAH,CAAA;;QApDA,GAAA,EAAA,UAAA,GAAO,EAAP,EAAA,IAAA,CAAA,eAAA,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QAuDA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAtDY;;;;QA0DZ,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IApDA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QAyDA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,eAAA,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAmB;QACnB,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IAvDA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QAyDA,GAAA,EAAS,UAAT,GAAA,EAAA,EAAA,IAAA,CAxD2B,eAwD3B,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAxDY,IAwDZ;QACA,YAxDY,EAAM,IAwDlB;KACA,CAAA,CAAA;IACA,MAAA,CAAO,cAAP,CAAA,cAAA,CAAA,SAxD8C,EAwD9C,aAAA,EAAA;QACA,GAAO,EAxDE,UAwDT,GAAA,EAAA,EAAA,IAAA,CAxD+B,eAAe,CAwD9C,UAAA,CAAA,aAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QACA,UAxDc,EAwDd,IAxDoB;QAyDpB,YAAA,EAxDc,IAwDd;KACA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,aAAA,EAAA;QACA,GAAA,EAAS,UAAT,GAAA,EAAA,EAAA,IAAA,CAxD2B,eAwD3B,CAxD8C,UAwD9C,CAAA,aAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QACA,UAxDc,EAwDd,IAxDoB;QAyDpB,YAAA,EAxDc,IAwDd;KACA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,aAAA,EAAA;;QDrMA,UAAA,EAAA,IAAa;QAEP,YAAN,EAAA,IAAA;KACA,CAAA,CAAA;IAEA,MAAA,CAAA,cADa,CACb,cAAA,CAAA,SAAA,EAAA,aAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,eAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QACI,UAAJ,EAAA,IAAA;QACI,YADY,EAChB,IAAA;KACG,CAAH,CAAA;IACE,MAAF,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,aAAA,EAAA;QACI,GAAJ,EAAS,UAAT,GAAA,EAAA,EAAA,IAAA,CAAA,eAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QACI,UAAJ,EAAA,IAAA;QACI,YADY,EAChB,IAAA;KACG,CAAH,CAAA;IACE,MAAF,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,aAAA,EAAA;QACI,GAAJ,EAAS,UAAT,GAAA,EAAA,EAAA,IAAA,CAAA,eAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QACI,UAAJ,EAAA,IAAA;QACI,YADY,EAChB,IAAA;KACG,CAAH,CAAA;IACE,MAAF,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,aAAA,EAAA;QACI,GAAJ,EAAS,UAAT,GAAA,EAAA,EAAA,IAAA,CAAA,eAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QACI,UAAU,EADE,IAChB;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,aAAA,EAAA;QACI,GAAJ,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,eAAA,CAAA,UAAA,CAAA,aAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QACI,UAAU,EADE,IAChB;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QACI,GAAJ,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,aAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACI,UAAU,EADE,IAChB;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QACI,GAAJ,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,aAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,MAAA,CAAA,cADiB,CACjB,cAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QACI,GAAJ,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,aAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,MAAA,CAAA,cADiB,CACjB,cAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QACI,GAAJ,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,aAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,SAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,aAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACI,YAAJ,EADW,IACX;KACA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CADgB,SAChB,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,aAAA,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACI,YAAJ,EADW,IACX;KACA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CADgB,SAChB,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,aAAA,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACI,YAAJ,EAAA,IAAA;KACA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,aAAA,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;;QD/DA,YAAA,EADM,IACN;KACA,CADM,CACN;IAEA,MAAA,CAAA,cAD0B,CAC1B,cAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,aAAA,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QAEA,UADM,EACN,IAAA;QACA,YAAA,EAD0B,IAC1B;KAEA,CADa,CACb;IACE,MAAF,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,aAAA,CAAA,UAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QAEA,YAAA,EAAoB,IAApB;KACA,CAAA,CAAA;IACE,MAAF,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QAEA,GAAA,EAAA,UAAqB,GAArB,EADwB,EACxB,IAAA,CAAA,aAD6C,CAC7C,UAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IADwB;QAExB,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IAIA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAU,UAAV,GAAkC,EAAlC,EAAA,IAAA,CAAA,aAAA,CAAA,UAAmE,CAAnE,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KAEA,CAAG,CAAH;IACE,MAAF,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAU,UAAV,GAAA,EAAA,EAAA,IAAkC,CAAlC,aAAgD,CAAhD,UAA2D,CAAC,WAA5D,EAAA,GAAA,CAA4E,CAA5E,EAAA;QAEA,UAAA,EAAiB,IAAjB;QACA,YAAA,EAAA,IAAA;KACA,CAAG,CAAH;IACA,cAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAA,OAAA,EAAA;;YDvBA,IAAA,IAAA,CAAA,aAAA,CAAA,SAAA,IAAA,OAAA,EAAA;gBAMA,IAAA,CAAA,YAAA,EAAA,CAAA;aAKA;YAQA,IAAA,IACqB,CADrB,eAAA,CAAA,SAAA,IAAA,OAAA,EAAA;gBAGA,IAAA,CAAA,cAAA,EAAA,CAAA;aA0CA;SASA;KAfA,CAAA;IACA,cAAA,CAAA,SAAsB,CAAtB,SAAA,GAAoC,YAApC;QAHG,IAAH,CAAA,IAAA,CAAA,aAAA,CAAA,qBAAA,EAAA;YAmBQ,IAAR,CAAA,oBAAA,EAAA,CAAA;SACA;QACA,IAAA,IAAA,CAAA,gBAAA,EAAA;YAVG,IAgBH,CAAA,gBAAA,CAAA,SAAA,EAAA,CAAA;SACA;KACA,CAAA;IACA,cAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;QAQA,IAAA,CAnBG,aAmBH,CAEY,WAFZ,EAAA,CAAA;QAGI,IAAJ,CAAA,eAAA,CAAA,WAAA,EAnBsC,CAmBtC;QACA,IAAA,CAAA,gBAAA,GAAA,IAAA,CAAA;KAMA,CAAA;IACA,cAAA,CAnBW,SAmBX,CAAA,oBAAA,GAAA,YAAA;QACA,IAAA,KAAA,GAAA,IAAA,CAAA;QARA,IAAA,KAAA,GAAA,IAAG,CAAH,aAAA,CAAA,UAAA,CAAA,OAAA,CAAA,CAAA;QAgBI,IAfI,CAeR,aAfkB,CAAK,0BAevB,CAfgD,OAAS,EAAA,KAezD,EAAA,UAAA,OAAA,EAAA;YACQ,KAAR,CAAA,YAAA,CAAA,OAAA,CAfuB,KAevB,CAAA,CAAA;SACA,CAAA,CAAA;QANA,IAAA,CAAA,eAAA,CAAA,0BAAA,CAAA,SAAA,EAAA,KAAA,EAAA,UAAA,OAAA,EAAA;YAgBA,KAAA,CAfU,cAeV,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA;YACA,KAAA,CAAA,gBAAA,CAAA,SAAA,EAAA,CAAA;SACA,CAAA,CAAA;KACA,CAAA;IACA,cAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAA,KAAA,EAAA;QACA,IAAM,KAAN,GAAA,KAAA,IAfa,IAeb,CAAA,aAAA,CAAA,UAAA,CAAA,OAAA,CAAA,CAAA;QACA,IAAA,IAAA,CAAA,aAAA,CAAA,YAAA,EAAA;YACA,KAAA,GAAA,IAAA,CAAA,aAAA,CAfqC,YAerC,CAAA,cAAA,CAAA;SACA;QACA,IAAM,CAAN,gBAfmB,CAenB,KAAA,GAf6B,KAe7B,CAAA;KACA,CAAA;IAOA,cAAA,CAAA,SAAA,CAAA,cAbmB,GAanB,UAAA,KAAA,EAAA;QAQA,IAAA,IAAA,CAAA,eAAA,CAAA,YAAA,EAAA;YAVA,KAAG,GAAH,IAAA,CAAA,eAAA,CAAA,YAAA,CAAA,cAAA,CAAA;SAiBA;QACA,IAAA,CAAA,gBAAA,CAAA,OAAA,GAAA,KAAA,IAAA,EAAA,CAAA;KAXA,CAAA;IAkBA,OAAA,cAAA,CAAA;CACA,CAAA,eAAA,CAAA,CAAA,CAAA;AAZA,cAAA,CAAA,UAAA,GAAA;IAmBA,EAAA,IAAA,EAlBQO,uBAAiB,EAkBzB,IAAA,EAAA,CAAA;gBACA,QAAA,EAAA,kbAAA;aACA,EAAA,EAAA;;AAfO,cAAP,CAAA,cAAA,GAAA,YAAA,EAAA,OAAA;IAkBA,EAjBE,IAAA,EAAM,YAAW,GAiBnB;IACA,EAAA,IAAA,EAAAD,wBAAA,GAAA;IAfA,EAAA,IAAA,EAAAD,uBAAA,GAAA;IAoBA,EAAC,IAAI,EAAED,6BAAP,GAAyB;IACzB,EAAC,IAAI,EAAED,6BAAP,GAAA;IACA,EAAA,IAAA,EAAAH,uBAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,sBAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,kBAAA,EAAA,EAAA,EAAA;;ADzMA,cAAA,CAAA,cAAA,GAAA;IAKA,aAAA,EAAA,CAAA,EAAA,IAAA,EALCH,mBAKD,EAAA,IAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA;IACE,WAAF,EAAA,CAAA,EALc,IAKd,EAAAA,mBAL4B,EAK5B,IAAA,EALqC,CAKrC,YAAA,EALoD,EAKpD,EAAA;IACE,WAAF,EALM,CAKN,EALkB,IAKlB,EALwBA,mBAKxB,EAAA,IAAA,EAAA,CALsC,YAAY,EAKlD,EALsD,EAAA;IAMpD,WAAF,EALe,CAKf,EAAA,IAAA,EAAAA,mBAAA,EAL+B,IAK/B,EAAA,CAAA,YAAA,EAAA,EAAA,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,YAAA,EAAA,EAAA,EAAA;IAMA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,YAAA,EAAA,EAAA,EAAA;IACE,aAAF,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA;IACA,aALe,EAKf,CAAA,EAAA,IAAA,EAAAA,mBALgB,EAAiB,IAAI,EAKrC,CAAA,eAAA,EAAA,EAAA,EAAA;IACA,aAAA,EALiB,CAKjB,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA;IACA,aAAA,EAAA,CAAA,EAAA,IAAA,EAL0BA,mBAK1B,EAAA,IAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA;IACA,aALe,EAKf,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA;IACA,aAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA;IAOA,aAAA,EAAA,CAAA,EAAA,IANC,EAMDA,mBAAA,EAAA,IAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA;IACE,aANa,EAMf,CANoB,EAMpB,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,eAAA,EAAA,EAAA,EAAA;IACA,SANS,EAAC,CAAE,EAMZ,IANa,EAMbA,mBANyB,EAMzB,IAN0B,EAM1B,CAAA,UAAA,EAAA,EAAA,EAAA;IACA,SAAA,EANS,CAMT,EAAA,IAAA,EANkBA,mBAMlB,EAAA,IAAA,EAN+B,CAM/B,UAAA,EAAA,EAAA,EAAA;IACA,SAAA,EANS,CAMT,EAAA,IAAA,EAAAA,mBANuB,EAAA,IAMvB,EAAA,CAAA,UAAA,EAAA,EANyC,EAMzC;IACA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA;IACA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA;IACE,WANO,EAMT,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA;IACA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA;IASA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA;IACE,WAAF,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAR2B,EAAI,IAQ/B,EAAA,CARsC,aAAa,EAAC,EAAG,EAAA;IASrD,WAAF,EAAA,CAAA,EAAA,IARsB,EAQtBA,mBAAA,EAAA,IAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA;IACA,WARW,EAQX,CAAA,EAAA,IAAA,EARqBA,mBAQrB,EAAA,IAAA,EAAA,CARqC,aAQrC,EAAA,EAAA,EARwD;IASxD,WAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA;IAGE,WAAF,EAAA,CARU,EAAQ,IAQlB,EAAAA,mBAAA,EAAA,IAAA,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA;CACA,CAAA;AACA,IAAA,eAAA,IAAA,YAAA;IACA,SAAA,eAAA,CAAA,GAAA,EAAA,KAAA,EAAA,QAAA,EAAA;QACA,IAAA,QAAA,KAAA,KAAA,CAAA,EAAA,EAAA,QAAA,GAAA,IAAA,CAAA,EAAA;QARA,IAAA,CAAW,GAAX,GAAA,GAAA,CAAA;QASA,IAAM,CAAN,KAAY,GAAZ,KARmB,CAAE;QASrB,IAAA,CAAA,GAAA,GAAA,QAAA,GAAA,GAAA,CAAA,OAAA,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,EAAA,GAAA,GAAA,CAAA,IAAA,EAAA,CAAA;QACA,IAAA,CAAA,KAAA,GAAA,QAAA,GAAA,KAAA,CAAA,OAAA,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,EAAA,GAAA,KAAA,CAAA,IAAA,EAAA,CAAA;QAEA,IAAA,CAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;KACA;;CD/BA,EAAA,CAAA,CAAA;AAEA,IAAE,YAAF,GAAA;IACA,OAAA,EAAA,OAAA;IACA,YAAA,EAAA,YAAA;IACA,gBAHgB,EAAK,gBAGrB;IAEE,eAAF,EAAA,eAAA;CAEA,CAAA;AACA,SAAA,OAAA,CAAA,MAAA,EAAA;IAEA,IAAI,IAAJ,GAHW,OAAA,MAGX,CAAA;IACA,IAAA,IAAA,KAAA,QAAA,EAAA;QACA,OAAA,CAAA,MAAA,CAAA,WAAA,KAAA,KAAA,IAAA,OAAA;YAKA,CAAA,MAAA,CAAA,WAAA,KAAA,GAAA,IAAA,KAAA,GAAA,QAAA,CAAA;KACA;IACA,OAAA,IAAA,CAAA;CAUA;AACA,SAAA,YAAA,CAAA,MAAA,EAAA,SAAA,EAAA;IACE,IAAF,SAAA,KAAA,KAAA,CAAA,EAAA,EAAA,SAAA,GAAA,GAAA,CAAA,EAAA;IACA,OAAA,MAAA,CAAA,MAAA,CAAA;SAOA,IAAA,EAAA;SAEA,KAAA,CAAA,SAAA,CAAA;SACA,GAAA,CAAA,UAAA,GAAA,EANa,EAMb,OAAA,GAAA,CAAA,IAAA,EAAA,CAAA,EAAA,CAAA;SACA,MAAA,CAAA,UAAA,GAAA,EAAA,EAAA,OAAA,GANuC,KAMvC,EANwC,CAMxC,EAAA,CAAA,CAAA;CACA;AACA,SAAA,gBAAA,CAAA,MAAA,EAAA,QAAA,EAAA;;QDlEA,IAAA,QAAA,EAAA;YAGA,EAAA,CAAA,KAAA,GAAA,QAAA,CAJ8B,EAI9B,CAAA,KAAA,CAAA,CAAA;SACA;QAIA,OAAA,EAAA,CAAA;KACA,CAAA;IACE,OAAF,MAAA;SACM,GAAN,CAAU,gBAAgB,CAA1B;SACA,MAAA,CAAA,UAAA,KAAA,EAAA,EAAA,OAAA,CAAA,CAAA,KAAA,CAAA,EAAA,CAAA;SACA,GAAA,CAAA,aAAsB,CAAtB;SACA,MAAA,CAAA,cAAA,EAAA,EAAA,CAAA,CAAA;CACA;AACA,SAAA,eAAA,CAAA,MAAA,EAAA,QAAA,EAAA;;IDpBA,IAAA,OAAA,CAAA,MAAA,CAAA,IAAA,KAAA,EAAA;QAGA,MAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAJwD,CAIxD,KAAA,CAAA,CAAA,EAJwD,CAAW,CAAC;KAKpE;SAIA;QACA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;YACA,IAAA,CAAA,IAAA,CAAA,GAAA,GAAA,GAAA,GAAA,MAAA,CAAA,GAAA,CAAA,CAAA,CAAA;SACM,CAAN,CAAA;KACA;IACA,OAAA,gBAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAA;CACA;AACA,SAAA,gBAAA,CAAA,EAAA,EAAA;IACA,IAAA,EAAA,GAAA,EAAA,CAAA,KAAA,CAAA,GAAA,CAAA,EAAA,GAAA,GAAA,EAAA,CAAA,CAAA,CAAA,EAAA,GAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA;;CDhBA;;IAGA,IAAA,CAAA,CAAA,KAAA,CAAA,GAAA,EAAA;QADA,MAAA,CAAA,KAEQ,CAFR,GAAA,CAAA,GAEwB,KAFxB,CAAA,KAAA,CAAA;KACA;IACA,OAAA,MAAA,CAAA;CACA;AACA,IAAA,cAAA,IAAA,UAAA,MAAA,EAAA;IACAD,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA,CAAA;IACA,SAAA,cAAA,CAAA,OAAA,EAAA,UAAA,EAAA,KAAA,EAAA,SAAA,EAAA,QAAA,EAAA,gBAAA,EAAA;QACA,IAAA,KAAG,GAAH,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAAA;QACA,KAAC,CAAD,OAAA,GAAA,OAAA,CAAA;QACA,KAAA,CAAA,UAAA,GAAA,UAAA,CAAA;QAIA,KAAA,CAAA,gBAAA,GAAC,gBAAD,CAAA;;QDOA,KAAA,CAAA,KAAA,CACC,UADD,CAAA,OAAA,EAAA,KAAA,CAAA,aAAA,CAAA,YAAA,CAAA,OAAA,CAAA,EAAA,IAAA,CAAA,CAAA;QACA,IAAA,CAAA,KAAA,CAAM,gBAAN,EAAA;YACA,IAAA,OAAmB,GAAnB,IAAA,eAAA,CAAA,SAAA,CAAA,CAAA;YACA,KAAA,CAAA,gBAAA,GAAA,IAAAD,uBAAA,CAAA,QAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA;SACA;QACA,OAAA,KAAA,CAAA;KACA;IACE,MAAF,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA;YACA,IAAA,CAAA,KAAoB,CAApB,UAAA,CAAA,OAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA;YACA,IAAA,CAAA,gBAAA,CAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,OAAA,CAAA,CAAA;SACA;QACA,UAAgB,EAAhB,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IAIA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QAWA,GAAG,EAAH,UAAA,GAAA,EAAA,EAAG,IAAH,CAAA,KAAA,CAAG,UAAH,CAAA,SAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QAEI,UAAJ,EAAA,IAAA;QACA,YAAc,EAAE,IAAhB;KACA,CAAA,CAAA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAA4C,WAAC,EAAY;QACzD,GAAA,EAAO,UAAP,GAAA,EAAA,EAAA,IAAA,CAAA,KAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;;IACA,AAAA;IACA,MAAE,CAAF,cAAA,CAAkB,cAAlB,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAS,GAAE,EAAX,EAAA,IAAA,CAAA,KAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IACA,AAAA;IACA,MAAA,CAAA,cAAA,CAAA,cAAA,CAAA,SAAA,EAAA,WAAA,EAAA;QACA,GAAA,EAAA,UAAA,GAAA,EAAA,EAAA,IAAA,CAAA,KAAA,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,EAAA;QACA,UAAA,EAAA,IAAA;QACA,YAAA,EAAA,IAAA;KACA,CAAA,CAAA;IAEA,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}