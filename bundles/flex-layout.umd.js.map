{"version":3,"file":"flex-layout.umd.js","sources":["../../src/lib/module.ts","../../src/lib/flexbox/api/style.ts","../../src/lib/utils/style-transforms.ts","../../src/lib/flexbox/api/class.ts","../../src/lib/flexbox/api/base-adapter.ts","../../src/lib/flexbox/api/layout-gap.ts","../../src/lib/flexbox/api/layout-align.ts","../../src/lib/flexbox/api/flex-order.ts","../../src/lib/flexbox/api/flex-offset.ts","../../src/lib/flexbox/api/flex-fill.ts","../../src/lib/flexbox/api/flex-align.ts","../../src/lib/flexbox/api/show-hide.ts","../../src/lib/flexbox/api/flex.ts","../../src/lib/utils/basis-validator.ts","../../src/lib/flexbox/api/layout-wrap.ts","../../src/lib/flexbox/api/layout.ts","../../src/lib/flexbox/api/base.ts","../../src/lib/flexbox/responsive/responsive-activation.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/media-query/media-monitor-provider.ts","../../src/lib/media-query/_module.ts","../../src/lib/media-query/breakpoints/break-points-provider.ts","../../src/lib/utils/breakpoint-tools.ts","../../src/lib/media-query/breakpoints/data/orientation-break-points.ts","../../src/lib/media-query/breakpoints/data/break-points.ts","../../src/lib/media-query/observable-media-provider.ts","../../src/lib/media-query/observable-media.ts","../../src/lib/media-query/media-monitor.ts","../../src/lib/utils/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/media-query/breakpoints/break-point-registry.ts","../../src/lib/media-query/breakpoints/break-points-token.ts","../../src/lib/media-query/match-media.ts","../../src/lib/media-query/media-change.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {MediaQueriesModule} from './media-query/_module';\n\nimport {BreakPoint} from './media-query/breakpoints/break-point';\nimport {\n  BreakPointProviderOptions,\n  DEFAULT_BREAKPOINTS_PROVIDER,\n  CUSTOM_BREAKPOINTS_PROVIDER_FACTORY\n} from './media-query/breakpoints/break-points-provider';\nimport {MEDIA_MONITOR_PROVIDER} from './media-query/media-monitor-provider';\nimport {OBSERVABLE_MEDIA_PROVIDER} from './media-query/observable-media-provider';\n\nimport {FlexDirective} from './flexbox/api/flex';\nimport {LayoutDirective} from './flexbox/api/layout';\nimport {ShowHideDirective} from './flexbox/api/show-hide';\nimport {FlexAlignDirective} from './flexbox/api/flex-align';\nimport {FlexFillDirective} from './flexbox/api/flex-fill';\nimport {FlexOffsetDirective} from './flexbox/api/flex-offset';\nimport {FlexOrderDirective} from './flexbox/api/flex-order';\nimport {LayoutAlignDirective} from './flexbox/api/layout-align';\nimport {LayoutWrapDirective} from './flexbox/api/layout-wrap';\nimport {LayoutGapDirective} from './flexbox/api/layout-gap';\nimport {ClassDirective} from './flexbox/api/class';\nimport {StyleDirective} from './flexbox/api/style';\n\n/**\n * Since the equivalent results are easily achieved with a css class attached to each\n * layout child, these have been deprecated and removed from the API.\n *\n *  import {LayoutPaddingDirective} from './flexbox/api/layout-padding';\n *  import {LayoutMarginDirective} from './flexbox/api/layout-margin';\n */\n\nconst ALL_DIRECTIVES = [\n  LayoutDirective,\n  LayoutWrapDirective,\n  LayoutGapDirective,\n  LayoutAlignDirective,\n  FlexDirective,\n  FlexOrderDirective,\n  FlexOffsetDirective,\n  FlexFillDirective,\n  FlexAlignDirective,\n  ShowHideDirective,\n  ClassDirective,\n  StyleDirective\n];\n\n/**\n *\n */\n@NgModule({\n  imports: [MediaQueriesModule],\n  exports: [MediaQueriesModule, ...ALL_DIRECTIVES],\n  declarations: [...ALL_DIRECTIVES],\n  providers: [\n    MEDIA_MONITOR_PROVIDER,\n    DEFAULT_BREAKPOINTS_PROVIDER,   // Extend defaults with internal custom breakpoints\n    OBSERVABLE_MEDIA_PROVIDER\n  ]\n})\nexport class FlexLayoutModule {\n  /**\n   * External uses can easily add custom breakpoints AND include internal orientations\n   * breakpoints; which are not available by default.\n   *\n   * !! Selector aliases are not auto-configured. Developers must subclass\n   * the API directives to support extra selectors for the orientations breakpoints !!\n   */\n  static provideBreakPoints(breakpoints: BreakPoint[],\n                            options ?: BreakPointProviderOptions): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: [\n        CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(breakpoints, options || {orientations: false})\n      ]\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  DoCheck,\n  Renderer,\n  KeyValueDiffers,\n  SimpleChanges, OnChanges,\n  SecurityContext\n} from '@angular/core';\nimport {NgStyle} from '@angular/common';\n\nimport {BaseFxDirectiveAdapter} from './base-adapter';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  ngStyleUtils as _\n} from '../../utils/style-transforms';\n\n/**\n * Explicitly export the NgStyle super class type for ngc/AOT compiles\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nexport const _StyleDirectiveBaseClass = NgStyle;\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({\n  selector: `\n    [style.xs], [style.sm], [style.md], [style.lg], [style.xl],\n    [style.lt-sm], [style.lt-md], [style.lt-lg], [style.lt-xl],\n    [style.gt-xs], [style.gt-sm], [style.gt-md], [style.gt-lg],\n    [ngStyle],\n    [ngStyle.xs], [ngStyle.sm], [ngStyle.lg], [ngStyle.xl],\n    [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n    [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n  `\n})\nexport class StyleDirective extends _StyleDirectiveBaseClass\n    implements DoCheck, OnChanges, OnDestroy {\n\n  /**\n   * Intercept ngStyle assignments so we cache the default styles\n   * which are merged with activated styles or used as fallbacks.\n   */\n  @Input('ngStyle')\n  set styleBase(val: NgStyleType) {\n    this._base.cacheInput('style', val, true);\n    this.ngStyle = this._base.inputMap['style'];\n  }\n\n  /* tslint:disable */\n  @Input('ngStyle.xs')    set ngStyleXs(val: NgStyleType) { this._base.cacheInput('styleXs', val, true); }\n  @Input('ngStyle.sm')    set ngStyleSm(val: NgStyleType) {  this._base.cacheInput('styleSm', val, true); };\n  @Input('ngStyle.md')    set ngStyleMd(val: NgStyleType) { this._base.cacheInput('styleMd', val, true); };\n  @Input('ngStyle.lg')    set ngStyleLg(val: NgStyleType) { this._base.cacheInput('styleLg', val, true);};\n  @Input('ngStyle.xl')    set ngStyleXl(val: NgStyleType) { this._base.cacheInput('styleXl', val, true); };\n\n  @Input('ngStyle.lt-sm') set ngStyleLtSm(val: NgStyleType) { this._base.cacheInput('styleLtSm', val, true); };\n  @Input('ngStyle.lt-md') set ngStyleLtMd(val: NgStyleType) { this._base.cacheInput('styleLtMd', val, true); };\n  @Input('ngStyle.lt-lg') set ngStyleLtLg(val: NgStyleType) { this._base.cacheInput('styleLtLg', val, true); };\n  @Input('ngStyle.lt-xl') set ngStyleLtXl(val: NgStyleType) { this._base.cacheInput('styleLtXl', val, true); };\n\n  @Input('ngStyle.gt-xs') set ngStyleGtXs(val: NgStyleType) { this._base.cacheInput('styleGtXs', val, true); };\n  @Input('ngStyle.gt-sm') set ngStyleGtSm(val: NgStyleType) { this._base.cacheInput('styleGtSm', val, true);} ;\n  @Input('ngStyle.gt-md') set ngStyleGtMd(val: NgStyleType) { this._base.cacheInput('styleGtMd', val, true);};\n  @Input('ngStyle.gt-lg') set ngStyleGtLg(val: NgStyleType) { this._base.cacheInput('styleGtLg', val, true); };\n\n  /** Deprecated selectors */\n  @Input('style.xs')      set styleXs(val: NgStyleType) { this._base.cacheInput('styleXs', val, true); }\n  @Input('style.sm')      set styleSm(val: NgStyleType) { this._base.cacheInput('styleSm', val, true); };\n  @Input('style.md')      set styleMd(val: NgStyleType) { this._base.cacheInput('styleMd', val, true);};\n  @Input('style.lg')      set styleLg(val: NgStyleType) { this._base.cacheInput('styleLg', val, true); };\n  @Input('style.xl')      set styleXl(val: NgStyleType) { this._base.cacheInput('styleXl', val, true); };\n\n  @Input('style.lt-sm')   set styleLtSm(val: NgStyleType) { this._base.cacheInput('styleLtSm', val, true); };\n  @Input('style.lt-md')   set styleLtMd(val: NgStyleType) { this._base.cacheInput('styleLtMd', val, true); };\n  @Input('style.lt-lg')   set styleLtLg(val: NgStyleType) { this._base.cacheInput('styleLtLg', val, true);};\n  @Input('style.lt-xl')   set styleLtXl(val: NgStyleType) { this._base.cacheInput('styleLtXl', val, true); };\n\n  @Input('style.gt-xs')   set styleGtXs(val: NgStyleType) { this._base.cacheInput('styleGtXs', val, true); };\n  @Input('style.gt-sm')   set styleGtSm(val: NgStyleType) { this._base.cacheInput('styleGtSm', val, true); };\n  @Input('style.gt-md')   set styleGtMd(val: NgStyleType) { this._base.cacheInput('styleGtMd', val, true);};\n  @Input('style.gt-lg')   set styleGtLg(val: NgStyleType) { this._base.cacheInput('styleGtLg', val, true); };\n\n  /* tslint:enable */\n  /**\n   *  Constructor for the ngStyle subclass; which adds selectors and\n   *  a MediaQuery Activation Adapter\n   */\n  constructor(private monitor: MediaMonitor,\n              protected _sanitizer: DomSanitizer,\n              _differs: KeyValueDiffers,\n              _ngEl: ElementRef,\n              _renderer: Renderer) {\n\n    // TODO: this should use Renderer when the NgStyle signature is switched over to it.\n    super(_differs, _ngEl, _renderer);\n\n    // Build adapter, `cacheInput()` interceptor, and get current inline style if any\n    this._buildAdapter(this.monitor, _ngEl, _renderer);\n    this._base.cacheInput('style', _ngEl.nativeElement.getAttribute('style'), true);\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._updateStyle();\n    }\n  }\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    if (!this._base.hasMediaQueryListener) {\n      this._configureMQListener();\n    }\n    super.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n     * Build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    protected _configureMQListener() {\n      this._base.listenForMediaQueryChanges('style', '', (changes: MediaChange) => {\n        this._updateStyle(changes.value);\n\n        // trigger NgClass::_applyIterableChanges()\n        super.ngDoCheck();\n      });\n    }\n\n  // ************************************************************************\n  // Private Internal Methods\n  // ************************************************************************\n\n  /**\n   * Use the currently activated input property and assign to\n   * `ngStyle` which does the style injections...\n   */\n  protected _updateStyle(value?: NgStyleType) {\n    let style = value || this._base.queryInput('style') || '';\n    if (this._base.mqActivation) {\n      style = this._base.mqActivation.activatedInput;\n    }\n\n    // Delegate subsequent activity to the NgStyle logic\n    this.ngStyle = style;\n  }\n\n\n  /**\n   * Build MediaQuery Activation Adapter\n   * This adapter manages listening to mediaQuery change events and identifying\n   * which property value should be used for the style update\n   */\n  protected _buildAdapter(monitor: MediaMonitor, _ngEl: ElementRef, _renderer: Renderer) {\n    this._base = new BaseFxDirectiveAdapter('style', monitor, _ngEl, _renderer);\n    this._buildCacheInterceptor();\n  }\n\n  /**\n   * Build intercept to convert raw strings to ngStyleMap\n   */\n  protected _buildCacheInterceptor() {\n    let cacheInput = this._base.cacheInput.bind(this._base);\n    this._base.cacheInput = (key?: string, source?: any, cacheRaw = false, merge = true) => {\n      let styles = this._buildStyleMap(source);\n      if (merge) {\n        styles = extendObject({}, this._base.inputMap['style'], styles);\n      }\n      cacheInput(key, styles, cacheRaw);\n    };\n  }\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected _buildStyleMap(styles: NgStyleType) {\n    let sanitizer: NgStyleSanitizer = (val: any) => {\n      // Always safe-guard (aka sanitize) style property values\n      return this._sanitizer.sanitize(SecurityContext.STYLE, val);\n    };\n    if (styles) {\n      switch ( _.getType(styles) ) {\n        case 'string':  return _.buildMapFromList(_.buildRawList(styles), sanitizer);\n        case 'array' :  return _.buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return _.buildMapFromSet(styles, sanitizer);\n        default      :  return _.buildMapFromSet(styles, sanitizer);\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the StyleDirective\n   */\n  protected _base: BaseFxDirectiveAdapter;\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/**\n * NgStyle allowed inputs\n */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\n/**\n * Transform Operators for @angular/flex-layout NgStyle Directive\n */\nexport const ngStyleUtils = {\n  getType,\n  buildRawList,\n  buildMapFromList,\n  buildMapFromSet\n};\n\nfunction getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set ) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/**\n * Convert array of key:value strings to a iterable map object\n */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {});\n}\n\n/**\n * Convert Set<string> or raw Object to an iterable NgStyleMap\n */\nfunction buildMapFromSet(source: any, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list = new Array<string>();\n  if (getType(source) == 'set') {\n    source.forEach(entry => list.push(entry));\n  } else {                                // simple hashmap\n    Object.keys(source).forEach(key => {\n      list.push(`${key}:${source[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/**\n * Convert 'key:value' -> [key, value]\n */\nfunction stringToKeyValue(it: string): NgStyleKeyValue {\n  let [key, val] = it.split(':');\n  return val ? new NgStyleKeyValue(key, val) : null;\n}\n\n/**\n * Convert [ [key,value] ] -> { key : value }\n */\nfunction keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  DoCheck,\n  OnDestroy,\n  Renderer,\n  IterableDiffers,\n  KeyValueDiffers, SimpleChanges, OnChanges\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\n\nimport {BaseFxDirectiveAdapter} from './base-adapter';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/** NgClass allowed inputs **/\nexport type NgClassType = string | string[] | Set<string> | {[klass: string]: any};\n\n/**\n * Explicitly export the NgStyle super class type for ngc/AOT compiles\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nexport const _ClassDirectiveBaseClass = NgClass;\n\n/**\n * Directive to add responsive support for ngClass.\n */\n@Directive({\n  selector: `\n    [class], [class.xs], [class.sm], [class.md], [class.lg], [class.xl],\n    [class.lt-sm], [class.lt-md], [class.lt-lg], [class.lt-xl],\n    [class.gt-xs], [class.gt-sm], [class.gt-md], [class.gt-lg],\n\n    [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n    [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n    [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n  `\n})\nexport class ClassDirective extends _ClassDirectiveBaseClass\n    implements DoCheck, OnChanges, OnDestroy {\n\n  /**\n   * Intercept ngClass assignments so we cache the default classes\n   * which are merged with activated styles or used as fallbacks.\n   * Note: Base ngClass values are applied during ngDoCheck()\n   */\n  @Input('ngClass')\n  set ngClassBase(val: NgClassType) {\n    this._ngClassAdapter.cacheInput('ngClass', val, true);\n    this.ngClass = val;\n  }\n\n  /* tslint:disable */\n  @Input('ngClass.xs')    set ngClassXs(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassXs',   val, true); }\n  @Input('ngClass.sm')    set ngClassSm(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassSm',   val, true); }\n  @Input('ngClass.md')    set ngClassMd(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassMd',   val, true); }\n  @Input('ngClass.lg')    set ngClassLg(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassLg',   val, true); }\n  @Input('ngClass.xl')    set ngClassXl(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassXl',   val, true); }\n\n  @Input('ngClass.lt-sm') set ngClassLtSm(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtSm', val, true); }\n  @Input('ngClass.lt-md') set ngClassLtMd(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtMd', val, true); }\n  @Input('ngClass.lt-lg') set ngClassLtLg(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtLg', val, true); }\n  @Input('ngClass.lt-xl') set ngClassLtXl(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtXl', val, true); }\n\n  @Input('ngClass.gt-xs') set ngClassGtXs(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtXs', val, true); }\n  @Input('ngClass.gt-sm') set ngClassGtSm(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtSm', val, true); }\n  @Input('ngClass.gt-md') set ngClassGtMd(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtMd', val, true); }\n  @Input('ngClass.gt-lg') set ngClassGtLg(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtLg', val, true); }\n\n  /** Deprecated selectors */\n\n  /**\n   * Base class selector values get applied immediately and are considered destructive overwrites to\n   * all previous class assignments\n   *\n   * Delegate to NgClass:klass setter and cache value for base fallback from responsive APIs.\n   */\n  @Input('class')\n  set classBase(val: string) {\n    this._classAdapter.cacheInput('_rawClass', val, true);\n    this.klass = val;\n  }\n\n  @Input('class.xs')      set classXs(val:   NgClassType) { this._classAdapter.cacheInput('classXs',   val, true); }\n  @Input('class.sm')      set classSm(val:   NgClassType) { this._classAdapter.cacheInput('classSm',   val, true); }\n  @Input('class.md')      set classMd(val:   NgClassType) { this._classAdapter.cacheInput('classMd',   val, true); }\n  @Input('class.lg')      set classLg(val:   NgClassType) { this._classAdapter.cacheInput('classLg',   val, true); }\n  @Input('class.xl')      set classXl(val:   NgClassType) { this._classAdapter.cacheInput('classXl',   val, true); }\n\n  @Input('class.lt-sm')   set classLtSm(val: NgClassType) { this._classAdapter.cacheInput('classLtSm', val, true); }\n  @Input('class.lt-md')   set classLtMd(val: NgClassType) { this._classAdapter.cacheInput('classLtMd', val, true); }\n  @Input('class.lt-lg')   set classLtLg(val: NgClassType) { this._classAdapter.cacheInput('classLtLg', val, true); }\n  @Input('class.lt-xl')   set classLtXl(val: NgClassType) { this._classAdapter.cacheInput('classLtXl', val, true); }\n\n  @Input('class.gt-xs')   set classGtXs(val: NgClassType) { this._classAdapter.cacheInput('classGtXs', val, true); }\n  @Input('class.gt-sm')   set classGtSm(val: NgClassType) { this._classAdapter.cacheInput('classGtSm', val, true); }\n  @Input('class.gt-md')   set classGtMd(val: NgClassType) { this._classAdapter.cacheInput('classGtMd', val, true); }\n  @Input('class.gt-lg')   set classGtLg(val: NgClassType) { this._classAdapter.cacheInput('classGtLg', val, true); }\n\n  /**\n   * Initial value of the `class` attribute; used as\n   * fallback and will be merged with nay `ngClass` values\n   */\n  get initialClasses() : string {\n    return  this._classAdapter.queryInput('_rawClass') || \"\";\n  }\n\n  /* tslint:enable */\n  constructor(protected monitor: MediaMonitor,\n              _iterableDiffers: IterableDiffers, _keyValueDiffers: KeyValueDiffers,\n              _ngEl: ElementRef, _renderer: Renderer) {\n\n    super(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer);\n\n    this._classAdapter = new BaseFxDirectiveAdapter('class', monitor, _ngEl, _renderer);\n    this._ngClassAdapter = new BaseFxDirectiveAdapter('ngClass', monitor, _ngEl, _renderer);\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._classAdapter.activeKey in changes) {\n      this._updateKlass();\n    }\n    if (this._ngClassAdapter.activeKey in changes) {\n      this._updateNgClass();\n    }\n  }\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    if (!this._classAdapter.hasMediaQueryListener) {\n      this._configureMQListener();\n    }\n    super.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._classAdapter.ngOnDestroy();\n    this._ngClassAdapter.ngOnDestroy();\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n   * Build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  protected _configureMQListener() {\n    this._classAdapter.listenForMediaQueryChanges('class', '', (changes: MediaChange) => {\n      this._updateKlass(changes.value);\n    });\n\n    this._ngClassAdapter.listenForMediaQueryChanges('ngClass', '', (changes: MediaChange) => {\n      this._updateNgClass(changes.value);\n      super.ngDoCheck();    // trigger NgClass::_applyIterableChanges()\n    });\n  }\n\n  /**\n   *  Apply updates directly to the NgClass:klass property\n   *  ::ngDoCheck() is not needed\n   */\n  protected _updateKlass(value?: NgClassType) {\n    let klass = value || this._classAdapter.queryInput('class') || '';\n    if (this._classAdapter.mqActivation) {\n      klass = this._classAdapter.mqActivation.activatedInput;\n    }\n    this.klass = klass || this.initialClasses;\n  }\n\n  /**\n   *  Identify the activated input value and update the ngClass iterables...\n   *  needs ngDoCheck() to actually apply the values to the element\n   */\n  protected _updateNgClass(value?: NgClassType) {\n    if (this._ngClassAdapter.mqActivation) {\n      value = this._ngClassAdapter.mqActivation.activatedInput;\n    }\n    this.ngClass = value || '';     // Delegate subsequent activity to the NgClass logic\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the ClassDirective\n   */\n  protected _classAdapter: BaseFxDirectiveAdapter;   // used for `class.xxx` selectores\n  protected _ngClassAdapter: BaseFxDirectiveAdapter;   // used for `ngClass.xxx` selectors\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, Renderer} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {ResponsiveActivation} from './../responsive/responsive-activation';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n\n/**\n * Adapter to the BaseFxDirective abstract class so it can be used via composition.\n * @see BaseFxDirective\n */\nexport class BaseFxDirectiveAdapter extends BaseFxDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseFxDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation;\n  }\n\n  /**\n   * BaseFxDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _renderer: Renderer) {\n    super(_mediaMonitor, _elementRef, _renderer);\n  }\n\n\n  /**\n   * @see BaseFxDirective._queryInput\n   */\n  queryInput(key) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error('Invalid class value provided. Did you want to cache the raw value?');\n    }\n  }\n\n  /**\n   * @see BaseFxDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    this._inputMap[key] = source;\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source.join(' ');\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes = [];\n    for (let prop in source) {\n      if (!!source[prop]) {\n        classes.push(prop);\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer,\n  SimpleChanges,\n  Self,\n  AfterContentInit,\n  Optional,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {LayoutDirective} from './layout';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n@Directive({\n  selector: `\n  [fxLayoutGap],\n  [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md], [fxLayoutGap.lg], [fxLayoutGap.xl],\n  [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md], [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl],\n  [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm], [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`\n})\nexport class LayoutGapDirective extends BaseFxDirective implements AfterContentInit, OnChanges,\n    OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n  protected _observer: MutationObserver;\n\n  /* tslint:disable */\n @Input('fxLayoutGap')       set gap(val) { this._cacheInput('gap', val); }\n @Input('fxLayoutGap.xs')    set gapXs(val) { this._cacheInput('gapXs', val); }\n @Input('fxLayoutGap.sm')    set gapSm(val) { this._cacheInput('gapSm', val); };\n @Input('fxLayoutGap.md')    set gapMd(val) { this._cacheInput('gapMd', val); };\n @Input('fxLayoutGap.lg')    set gapLg(val) { this._cacheInput('gapLg', val); };\n @Input('fxLayoutGap.xl')    set gapXl(val) { this._cacheInput('gapXl', val); };\n\n @Input('fxLayoutGap.gt-xs') set gapGtXs(val) { this._cacheInput('gapGtXs', val); };\n @Input('fxLayoutGap.gt-sm') set gapGtSm(val) { this._cacheInput('gapGtSm', val); };\n @Input('fxLayoutGap.gt-md') set gapGtMd(val) { this._cacheInput('gapGtMd', val); };\n @Input('fxLayoutGap.gt-lg') set gapGtLg(val) { this._cacheInput('gapGtLg', val); };\n\n @Input('fxLayoutGap.lt-sm') set gapLtSm(val) { this._cacheInput('gapLtSm', val); };\n @Input('fxLayoutGap.lt-md') set gapLtMd(val) { this._cacheInput('gapLtMd', val); };\n @Input('fxLayoutGap.lt-lg') set gapLtLg(val) { this._cacheInput('gapLtLg', val); };\n @Input('fxLayoutGap.lt-xl') set gapLtXl(val) { this._cacheInput('gapLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer,\n              @Optional() @Self() container: LayoutDirective,\n              private _zone: NgZone) {\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['gap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngAfterContentInit() {\n    this._watchContentChanges();\n    this._listenForMediaQueryChanges('gap', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Watch for child nodes to be added... and apply the layout gap styles to each.\n   * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n   */\n  protected _watchContentChanges() {\n    this._zone.runOutsideAngular(() => {\n\n      if (typeof MutationObserver !== 'undefined') {\n        this._observer = new MutationObserver((mutations: MutationRecord[]) => {\n          let validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n                (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this._updateWithValue();\n          }\n        });\n        this._observer.observe(this._elementRef.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n    this._updateWithValue();\n  }\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('gap') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Gather all non-hidden Element nodes\n    let items = this.childrenNodes\n        .filter(el => el.nodeType === 1 && this._getDisplayStyle(el) != 'none');\n    let numItems = items.length;\n\n    if (numItems > 1) {\n      let lastItem = items[numItems - 1];\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      items = items.filter((_, j) => j < numItems - 1);\n      this._applyStyleToElements(this._buildCSS(value), items);\n\n      // Clear all gaps for all visible elements\n      this._applyStyleToElements(this._buildCSS(), [lastItem]);\n    }\n  }\n\n  /**\n   * Prepare margin CSS, remove any previous explicitly\n   * assigned margin assignments\n   */\n  private _buildCSS(value: any = null) {\n    let key, margins = {\n      'margin-left': null,\n      'margin-right': null,\n      'margin-top': null,\n      'margin-bottom': null\n    };\n\n    switch (this._layout) {\n      case 'column':\n      case 'column-reverse':\n        key = 'margin-bottom';\n        break;\n      case 'row' :\n      case 'row-reverse':\n      default :\n        key = 'margin-right';\n        break;\n    }\n    margins[key] = value;\n\n    return margins;\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer,\n  SimpleChanges, Self,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {extendObject} from '../../utils/object-extend';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {LayoutDirective} from './layout';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n@Directive({selector: `\n  [fxLayoutAlign],\n  [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md], [fxLayoutAlign.lg],[fxLayoutAlign.xl],\n  [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md], [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl],\n  [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm], [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`})\nexport class LayoutAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxLayoutAlign')       set align(val)     { this._cacheInput('align', val); }\n  @Input('fxLayoutAlign.xs')    set alignXs(val)   { this._cacheInput('alignXs', val); }\n  @Input('fxLayoutAlign.sm')    set alignSm(val)   { this._cacheInput('alignSm', val); };\n  @Input('fxLayoutAlign.md')    set alignMd(val)   { this._cacheInput('alignMd', val); };\n  @Input('fxLayoutAlign.lg')    set alignLg(val)   { this._cacheInput('alignLg', val); };\n  @Input('fxLayoutAlign.xl')    set alignXl(val)   { this._cacheInput('alignXl', val); };\n\n  @Input('fxLayoutAlign.gt-xs') set alignGtXs(val) { this._cacheInput('alignGtXs', val); };\n  @Input('fxLayoutAlign.gt-sm') set alignGtSm(val) { this._cacheInput('alignGtSm', val); };\n  @Input('fxLayoutAlign.gt-md') set alignGtMd(val) { this._cacheInput('alignGtMd', val); };\n  @Input('fxLayoutAlign.gt-lg') set alignGtLg(val) { this._cacheInput('alignGtLg', val); };\n\n  @Input('fxLayoutAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxLayoutAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxLayoutAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxLayoutAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  /* tslint:enable */\n  constructor(\n      monitor: MediaMonitor,\n      elRef: ElementRef, renderer: Renderer,\n      @Optional() @Self() container: LayoutDirective) {\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('align', 'start stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if ( this._layoutWatcher ) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n    this._allowStretching(value, !this._layout ? 'row' : this._layout);\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n\n    let value = this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n    this._allowStretching(value, this._layout || 'row');\n  }\n\n  protected _buildCSS(align) {\n    let css = {}, [main_axis, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    // Main axis\n    switch (main_axis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (cross_axis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'baseline':\n        css['align-items'] = 'baseline';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : this._layout || 'row',\n      'box-sizing' : 'border-box'\n    });\n  }\n\n\n  /**\n   * Update container element to 'stretch' as needed...\n   * NOTE: this is only done if the crossAxis is explicitly set to 'stretch'\n   */\n  protected _allowStretching(align, layout) {\n    let [, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    if (cross_axis == 'stretch') {\n      // Use `null` values to remove style\n      this._applyStyleToElement({\n        'box-sizing': 'border-box',\n        'max-width': !isFlowHorizontal(layout) ? '100%' : null,\n        'max-height': isFlowHorizontal(layout) ? '100%' : null\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer,\n  SimpleChanges,\n} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n@Directive({selector: `\n  [fxFlexOrder],\n  [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md], [fxFlexOrder.lg], [fxFlexOrder.xl],\n  [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md], [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl],\n  [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm], [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`})\nexport class FlexOrderDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOrder')       set order(val)     { this._cacheInput('order', val); }\n  @Input('fxFlexOrder.xs')    set orderXs(val)   { this._cacheInput('orderXs', val); }\n  @Input('fxFlexOrder.sm')    set orderSm(val)   { this._cacheInput('orderSm', val); };\n  @Input('fxFlexOrder.md')    set orderMd(val)   { this._cacheInput('orderMd', val); };\n  @Input('fxFlexOrder.lg')    set orderLg(val)   { this._cacheInput('orderLg', val); };\n  @Input('fxFlexOrder.xl')    set orderXl(val)   { this._cacheInput('orderXl', val); };\n\n  @Input('fxFlexOrder.gt-xs') set orderGtXs(val) { this._cacheInput('orderGtXs', val); };\n  @Input('fxFlexOrder.gt-sm') set orderGtSm(val) { this._cacheInput('orderGtSm', val); };\n  @Input('fxFlexOrder.gt-md') set orderGtMd(val) { this._cacheInput('orderGtMd', val); };\n  @Input('fxFlexOrder.gt-lg') set orderGtLg(val) { this._cacheInput('orderGtLg', val); };\n\n  @Input('fxFlexOrder.lt-sm') set orderLtSm(val) { this._cacheInput('orderLtSm', val); };\n  @Input('fxFlexOrder.lt-md') set orderLtMd(val) { this._cacheInput('orderLtMd', val); };\n  @Input('fxFlexOrder.lt-lg') set orderLtLg(val) { this._cacheInput('orderLtLg', val); };\n  @Input('fxFlexOrder.lt-xl') set orderLtXl(val) { this._cacheInput('orderLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor, elRef: ElementRef, renderer: Renderer) {\n    super(monitor, elRef, renderer);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['order'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('order', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('order') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n\n  protected _buildCSS(value) {\n    value = parseInt(value, 10);\n    return {order: isNaN(value) ? 0 : value};\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Renderer,\n  SimpleChanges,\n  SkipSelf\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LayoutDirective} from './layout';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive({selector: `\n  [fxFlexOffset],\n  [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md], [fxFlexOffset.lg], [fxFlexOffset.xl],\n  [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md], [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl],\n  [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm], [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`})\nexport class FlexOffsetDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOffset')       set offset(val)     { this._cacheInput('offset', val); }\n  @Input('fxFlexOffset.xs')    set offsetXs(val)   { this._cacheInput('offsetXs', val); }\n  @Input('fxFlexOffset.sm')    set offsetSm(val)   { this._cacheInput('offsetSm', val); };\n  @Input('fxFlexOffset.md')    set offsetMd(val)   { this._cacheInput('offsetMd', val); };\n  @Input('fxFlexOffset.lg')    set offsetLg(val)   { this._cacheInput('offsetLg', val); };\n  @Input('fxFlexOffset.xl')    set offsetXl(val)   { this._cacheInput('offsetXl', val); };\n\n  @Input('fxFlexOffset.lt-sm') set offsetLtSm(val) { this._cacheInput('offsetLtSm', val); };\n  @Input('fxFlexOffset.lt-md') set offsetLtMd(val) { this._cacheInput('offsetLtMd', val); };\n  @Input('fxFlexOffset.lt-lg') set offsetLtLg(val) { this._cacheInput('offsetLtLg', val); };\n  @Input('fxFlexOffset.lt-xl') set offsetLtXl(val) { this._cacheInput('offsetLtXl', val); };\n\n  @Input('fxFlexOffset.gt-xs') set offsetGtXs(val) { this._cacheInput('offsetGtXs', val); };\n  @Input('fxFlexOffset.gt-sm') set offsetGtSm(val) { this._cacheInput('offsetGtSm', val); };\n  @Input('fxFlexOffset.gt-md') set offsetGtMd(val) { this._cacheInput('offsetGtMd', val); };\n  @Input('fxFlexOffset.gt-lg') set offsetGtLg(val) { this._cacheInput('offsetGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer,\n              @Optional() @SkipSelf() protected _container: LayoutDirective ) {\n    super(monitor, elRef, renderer);\n\n\n    this.watchParentFlow();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['offset'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * Cleanup\n   */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('offset', 0 , (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** The flex-direction of this element's host container. Defaults to 'row'. */\n  protected _layout = 'row';\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /**\n   * If parent flow-direction changes, then update the margin property\n   * used to offset\n   */\n  protected watchParentFlow() {\n    if (this._container) {\n      // Subscribe to layout immediate parent direction changes (if any)\n      this._layoutWatcher = this._container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateWithValue();\n  }\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('offset') || 0;\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(offset) {\n    let isPercent = String(offset).indexOf('%') > -1;\n    let isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(offset)) {\n      offset = offset + '%';\n    }\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    let layout = this._getFlowDirection(this.parentElement, true);\n    return isFlowHorizontal(layout) ? {'margin-left': `${offset}`} : {'margin-top': `${offset}`};\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Renderer} from '@angular/core';\n\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {BaseFxDirective} from './base';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `\n  [fxFill],\n  [fxFlexFill]\n`})\nexport class FlexFillDirective extends BaseFxDirective {\n  constructor(monitor: MediaMonitor, public elRef: ElementRef, public renderer: Renderer) {\n    super(monitor, elRef, renderer);\n    this._applyStyleToElement(FLEX_FILL_CSS);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer,\n  SimpleChanges,\n} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n@Directive({\n  selector: `\n  [fxFlexAlign],\n  [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md], [fxFlexAlign.lg], [fxFlexAlign.xl],\n  [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md], [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl],\n  [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm], [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`\n})\nexport class FlexAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexAlign')       set align(val)  { this._cacheInput('align', val);  };\n  @Input('fxFlexAlign.xs')    set alignXs(val)  { this._cacheInput('alignXs', val);  };\n  @Input('fxFlexAlign.sm')    set alignSm(val)  { this._cacheInput('alignSm', val); };\n  @Input('fxFlexAlign.md')    set alignMd(val)  { this._cacheInput('alignMd', val); };\n  @Input('fxFlexAlign.lg')    set alignLg(val)  { this._cacheInput('alignLg', val); };\n  @Input('fxFlexAlign.xl')    set alignXl(val)  { this._cacheInput('alignXl', val); };\n\n  @Input('fxFlexAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxFlexAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxFlexAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxFlexAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  @Input('fxFlexAlign.gt-xs') set alignGtXs(val)  { this._cacheInput('alignGtXs', val); };\n  @Input('fxFlexAlign.gt-sm') set alignGtSm(val)  { this._cacheInput('alignGtSm', val); };\n  @Input('fxFlexAlign.gt-md') set alignGtMd(val)  { this._cacheInput('alignGtMd', val); };\n  @Input('fxFlexAlign.gt-lg') set alignGtLg(val)  { this._cacheInput('alignGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor, elRef: ElementRef, renderer: Renderer) {\n    super(monitor, elRef, renderer);\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('align', 'stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('align') || 'stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(align) {\n    let css = {};\n\n    // Cross-axis\n    switch (align) {\n      case 'start':\n        css['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        css['align-self'] = 'flex-end';\n        break;\n      default:\n        css['align-self'] = align;\n        break;\n    }\n\n    return css;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer,\n  SimpleChanges,\n  Self,\n  Optional\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LayoutDirective} from './layout';\n\nconst FALSY = ['false', false, 0];\n\n/**\n * For fxHide selectors, we invert the 'value'\n * and assign to the equivalent fxShow selector cache\n *  - When 'hide' === '' === true, do NOT show the element\n *  - When 'hide' === false or 0... we WILL show the element\n */\nexport function negativeOf(hide: any) {\n  return (hide === '') ? false :\n         ((hide === 'false') || (hide === 0)) ? true : !hide;\n}\n\n/**\n * 'show' Layout API directive\n *\n */\n@Directive({\n  selector: `\n  [fxShow],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`\n})\nexport class ShowHideDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShow')       set show(val) {  this._cacheInput('show', val);  }\n  @Input('fxShow.xs')    set showXs(val) {this._cacheInput('showXs', val);}\n  @Input('fxShow.sm')    set showSm(val) {this._cacheInput('showSm', val); };\n  @Input('fxShow.md')    set showMd(val) {this._cacheInput('showMd', val); };\n  @Input('fxShow.lg')    set showLg(val) {this._cacheInput('showLg', val); };\n  @Input('fxShow.xl')    set showXl(val) {this._cacheInput('showXl', val); };\n\n  @Input('fxShow.lt-sm') set showLtSm(val) { this._cacheInput('showLtSm', val); };\n  @Input('fxShow.lt-md') set showLtMd(val) { this._cacheInput('showLtMd', val); };\n  @Input('fxShow.lt-lg') set showLtLg(val) { this._cacheInput('showLtLg', val); };\n  @Input('fxShow.lt-xl') set showLtXl(val) { this._cacheInput('showLtXl', val); };\n\n  @Input('fxShow.gt-xs') set showGtXs(val) {this._cacheInput('showGtXs', val); };\n  @Input('fxShow.gt-sm') set showGtSm(val) {this._cacheInput('showGtSm', val); };\n  @Input('fxShow.gt-md') set showGtMd(val) {this._cacheInput('showGtMd', val); };\n  @Input('fxShow.gt-lg') set showGtLg(val) {this._cacheInput('showGtLg', val); };\n\n  @Input('fxHide')       set hide(val) {this._cacheInput('show', negativeOf(val));}\n  @Input('fxHide.xs')    set hideXs(val) {this._cacheInput('showXs', negativeOf(val));}\n  @Input('fxHide.sm')    set hideSm(val) {this._cacheInput('showSm', negativeOf(val)); };\n  @Input('fxHide.md')    set hideMd(val) {this._cacheInput('showMd', negativeOf(val)); };\n  @Input('fxHide.lg')    set hideLg(val) {this._cacheInput('showLg', negativeOf(val)); };\n  @Input('fxHide.xl')    set hideXl(val) {this._cacheInput('showXl', negativeOf(val)); };\n\n  @Input('fxHide.lt-sm') set hideLtSm(val) { this._cacheInput('showLtSm', negativeOf(val)); };\n  @Input('fxHide.lt-md') set hideLtMd(val) { this._cacheInput('showLtMd', negativeOf(val)); };\n  @Input('fxHide.lt-lg') set hideLtLg(val) { this._cacheInput('showLtLg', negativeOf(val)); };\n  @Input('fxHide.lt-xl') set hideLtXl(val) { this._cacheInput('showLtXl', negativeOf(val)); };\n\n  @Input('fxHide.gt-xs') set hideGtXs(val) {this._cacheInput('showGtXs', negativeOf(val)); };\n  @Input('fxHide.gt-sm') set hideGtSm(val) {this._cacheInput('showGtSm', negativeOf(val)); };\n  @Input('fxHide.gt-md') set hideGtMd(val) {this._cacheInput('showGtMd', negativeOf(val)); };\n  @Input('fxHide.gt-lg') set hideGtLg(val) {this._cacheInput('showGtLg', negativeOf(val)); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n              @Optional() @Self() protected _layout: LayoutDirective,\n              protected elRef: ElementRef,\n              protected renderer: Renderer) {\n\n    super(monitor, elRef, renderer);\n\n    this._display = this._getDisplayStyle();  // re-invoke override to use `this._layout`\n    if (_layout) {\n      /**\n       * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.\n       * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS\n       */\n      this._layoutWatcher = _layout.layout$.subscribe(() => this._updateWithValue());\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly defined.\n   */\n  protected _getDisplayStyle(): string {\n    return this._layout ? 'flex' : super._getDisplayStyle();\n  }\n\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['show'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    let value = this._getDefaultVal('show', true);\n\n    // Build _mqActivation controller\n    this._listenForMediaQueryChanges('show', value, (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected _updateWithValue(value?: string|number|boolean) {\n    value = value || this._getDefaultVal('show', true);\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    let shouldShow = this._validateTruthy(value);\n    this._applyStyleToElement(this._buildCSS(shouldShow));\n  }\n\n\n  /** Build the CSS that should be assigned to the element instance */\n  protected _buildCSS(show) {\n    return {'display': show ? this._display : 'none'};\n  }\n\n  /**  Validate the to be not FALSY */\n  _validateTruthy(show) {\n    return (FALSY.indexOf(show) == -1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {extendObject} from '../../utils/object-extend';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {LayoutDirective} from './layout';\nimport {LayoutWrapDirective} from './layout-wrap';\nimport {validateBasis} from '../../utils/basis-validator';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\n\n/** Built-in aliases for different flex-basis values. */\nexport type FlexBasisAlias = 'grow' | 'initial' | 'auto' | 'none' | 'nogrow' | 'noshrink';\n\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive({selector: `\n  [fxFlex],\n  [fxFlex.xs], [fxFlex.sm], [fxFlex.md], [fxFlex.lg], [fxFlex.xl],\n  [fxFlex.lt-sm], [fxFlex.lt-md], [fxFlex.lt-lg], [fxFlex.lt-xl],\n  [fxFlex.gt-xs], [fxFlex.gt-sm], [fxFlex.gt-md], [fxFlex.gt-lg],\n`\n})\nexport class FlexDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /** The flex-direction of this element's flex container. Defaults to 'row'. */\n  protected _layout = 'row';\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShrink')     set shrink(val)    { this._cacheInput('shrink', val); };\n  @Input('fxGrow')       set grow(val)      { this._cacheInput('grow', val); };\n\n  @Input('fxFlex')       set flex(val)      { this._cacheInput('flex', val); };\n  @Input('fxFlex.xs')    set flexXs(val)    { this._cacheInput('flexXs', val); };\n  @Input('fxFlex.sm')    set flexSm(val)    { this._cacheInput('flexSm', val); };\n  @Input('fxFlex.md')    set flexMd(val)    { this._cacheInput('flexMd', val); };\n  @Input('fxFlex.lg')    set flexLg(val)    { this._cacheInput('flexLg', val); };\n  @Input('fxFlex.xl')    set flexXl(val)    { this._cacheInput('flexXl', val); };\n\n  @Input('fxFlex.gt-xs') set flexGtXs(val)  { this._cacheInput('flexGtXs', val); };\n  @Input('fxFlex.gt-sm') set flexGtSm(val)  { this._cacheInput('flexGtSm', val); };\n  @Input('fxFlex.gt-md') set flexGtMd(val)  { this._cacheInput('flexGtMd', val); };\n  @Input('fxFlex.gt-lg') set flexGtLg(val)  { this._cacheInput('flexGtLg', val); };\n\n  @Input('fxFlex.lt-sm') set flexLtSm(val) { this._cacheInput('flexLtSm', val); };\n  @Input('fxFlex.lt-md') set flexLtMd(val) { this._cacheInput('flexLtMd', val); };\n  @Input('fxFlex.lt-lg') set flexLtLg(val) { this._cacheInput('flexLtLg', val); };\n  @Input('fxFlex.lt-xl') set flexLtXl(val) { this._cacheInput('flexLtXl', val); };\n  /* tslint:enable */\n\n  // Note: Explicitly @SkipSelf on LayoutDirective and LayoutWrapDirective because we are looking\n  //       for the parent flex container for this flex item.\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              @Optional() @SkipSelf() protected _wrap: LayoutWrapDirective) {\n\n    super(monitor, elRef, renderer);\n\n    this._cacheInput('flex', '');\n    this._cacheInput('shrink', 1);\n    this._cacheInput('grow', 1);\n\n    if (_container) {\n      // If this flex item is inside of a flex container marked with\n      // Subscribe to layout immediate parent direction changes\n      this._layoutWatcher = _container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['flex'] != null || this._mqActivation) {\n      this._updateStyle();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('flex', '', (changes: MediaChange) => {\n      this._updateStyle(changes.value);\n    });\n    this._updateStyle();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateStyle();\n  }\n\n  protected _updateStyle(value?: string|number) {\n    let flexBasis = value || this._queryInput('flex') || '';\n    if (this._mqActivation) {\n      flexBasis = this._mqActivation.activatedInput;\n    }\n\n    let basis = String(flexBasis).replace(';', '');\n    let parts = validateBasis(basis, this._queryInput('grow'), this._queryInput('shrink'));\n    this._applyStyleToElement(this._validateValue.apply(this, parts));\n  }\n\n  /**\n   * Validate the value to be one of the acceptable value options\n   * Use default fallback of 'row'\n   */\n  protected _validateValue(grow: number|string,\n                           shrink: number|string,\n                           basis: string|number|FlexBasisAlias) {\n      // The flex-direction of this element's flex container. Defaults to 'row'.\n      let layout = this._getFlowDirection(this.parentElement, true);\n      let direction = (layout.indexOf('column') > -1) ? 'column' : 'row';\n      let css, isValue;\n\n      grow = (grow == '0') ? 0 : grow;\n      shrink = (shrink == '0') ? 0 : shrink;\n\n      // flex-basis allows you to specify the initial/starting main-axis size of the element,\n      // before anything else is computed. It can either be a percentage or an absolute value.\n      // It is, however, not the breaking point for flex-grow/shrink properties\n      //\n      // flex-grow can be seen as this:\n      //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n      //   1: (Default value). Stretch; will be the same size to all other flex items on\n      //       the same row since they have a default value of 1.\n      //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n      //      with 'flex-grow: 1' on the same row.\n\n      // Use `null` to clear existing styles.\n      let clearStyles = {\n        'max-width': null,\n        'max-height': null,\n        'min-width': null,\n        'min-height': null\n      };\n      switch (basis || '') {\n        case '':\n          css = extendObject(clearStyles, {'flex': '1 1 0.000000001px'});\n          break;\n        case 'initial':   // default\n        case 'nogrow':\n          grow = 0;\n          css = extendObject(clearStyles, {'flex': '0 1 auto'});\n          break;\n        case 'grow':\n          css = extendObject(clearStyles, {'flex': '1 1 100%'});\n          break;\n        case 'noshrink':\n          shrink = 0;\n          css = extendObject(clearStyles, {'flex': '1 0 auto'});\n          break;\n        case 'auto':\n          css = extendObject(clearStyles, {'flex': `${grow} ${shrink} auto`});\n          break;\n        case 'none':\n          grow = 0;\n          shrink = 0;\n          css = extendObject(clearStyles, {'flex': '0 0 auto'});\n          break;\n        default:\n          let hasCalc = String(basis).indexOf('calc') > -1;\n          let isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n\n          isValue = hasCalc ||\n              String(basis).indexOf('px') > -1 ||\n              String(basis).indexOf('em') > -1 ||\n              String(basis).indexOf('vw') > -1 ||\n              String(basis).indexOf('vh') > -1;\n\n          // Defaults to percentage sizing unless `px` is explicitly set\n          if (!isValue && !isPercent && !isNaN(basis as any)) {\n            basis = basis + '%';\n          }\n\n          if (basis === '0px') {\n            basis = '0%';\n          }\n\n          // Set max-width = basis if using layout-wrap\n          // tslint:disable-next-line:max-line-length\n          // @see https://github.com/philipwalton/flexbugs#11-min-and-max-size-declarations-are-ignored-when-wrappifl-flex-items\n\n          css = extendObject(clearStyles, { // fix issue #5345\n            'flex': `${grow} ${shrink} ${(isValue || this._wrap) ? basis : '100%'}`,\n          });\n          break;\n      }\n\n      let max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n      let min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n      let usingCalc = (String(basis).indexOf('calc') > -1) || (basis == 'auto');\n      let isPx = String(basis).indexOf('px') > -1 || usingCalc;\n\n\n      // make box inflexible when shrink and grow are both zero\n      // should not set a min when the grow is zero\n      // should not set a max when the shrink is zero\n      let isFixed = !grow && !shrink;\n      css[min] = (basis == '0%') ? 0 : isFixed || (isPx && grow) ? basis : null;\n      css[max] = (basis == '0%') ? 0 : isFixed || (!usingCalc && shrink) ? basis : null;\n\n    return extendObject(css, {'box-sizing': 'border-box'});\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer,\n  SimpleChanges, Self, Optional,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {LayoutDirective} from './layout';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {validateWrapValue, LAYOUT_VALUES} from '../../utils/layout-validator';\n/**\n * @deprecated\n * This functionality is now part of the `fxLayout` API\n *\n * 'layout-wrap' flexbox styling directive\n * Defines wrapping of child elements in layout container\n * Optional values: reverse, wrap-reverse, none, nowrap, wrap (default)]\n *\n *\n * @see https://css-tricks.com/almanac/properties/f/flex-wrap/\n */\n@Directive({selector: `\n  [fxLayoutWrap], [fxLayoutWrap.xs], [fxLayoutWrap.sm], [fxLayoutWrap.lg], [fxLayoutWrap.xl],\n  [fxLayoutWrap.gt-xs], [fxLayoutWrap.gt-sm], [fxLayoutWrap.gt-md], [fxLayoutWrap.gt-lg],\n  [fxLayoutWrap.lt-xs], [fxLayoutWrap.lt-sm], [fxLayoutWrap.lt-md], [fxLayoutWrap.lt-lg]\n`})\nexport class LayoutWrapDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxLayoutWrap')       set wrap(val)     { this._cacheInput('wrap', val); }\n  @Input('fxLayoutWrap.xs')    set wrapXs(val)   { this._cacheInput('wrapXs', val); }\n  @Input('fxLayoutWrap.sm')    set wrapSm(val)   { this._cacheInput('wrapSm', val); };\n  @Input('fxLayoutWrap.md')    set wrapMd(val)   { this._cacheInput('wrapMd', val); };\n  @Input('fxLayoutWrap.lg')    set wrapLg(val)   { this._cacheInput('wrapLg', val); };\n  @Input('fxLayoutWrap.xl')    set wrapXl(val)   { this._cacheInput('wrapXl', val); };\n\n  @Input('fxLayoutWrap.gt-xs') set wrapGtXs(val) { this._cacheInput('wrapGtXs', val); };\n  @Input('fxLayoutWrap.gt-sm') set wrapGtSm(val) { this._cacheInput('wrapGtSm', val); };\n  @Input('fxLayoutWrap.gt-md') set wrapGtMd(val) { this._cacheInput('wrapGtMd', val); };\n  @Input('fxLayoutWrap.gt-lg') set wrapGtLg(val) { this._cacheInput('wrapGtLg', val); };\n\n  @Input('fxLayoutWrap.lt-sm') set wrapLtSm(val) { this._cacheInput('wrapLtSm', val); };\n  @Input('fxLayoutWrap.lt-md') set wrapLtMd(val) { this._cacheInput('wrapLtMd', val); };\n  @Input('fxLayoutWrap.lt-lg') set wrapLtLg(val) { this._cacheInput('wrapLtLg', val); };\n  @Input('fxLayoutWrap.lt-xl') set wrapLtXl(val) { this._cacheInput('wrapLtXl', val); };\n\n  /* tslint:enable */\n  constructor(\n    monitor: MediaMonitor,\n    elRef: ElementRef,\n    renderer: Renderer,\n    @Optional() @Self() container: LayoutDirective) {\n\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['wrap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('wrap', 'wrap', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n      super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase().replace('-reverse', '');\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n\n    this._updateWithValue();\n  }\n\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('wrap');\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n    value = validateWrapValue(value || 'wrap');\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  /**\n   * Build the CSS that should be assigned to the element instance\n   */\n  protected _buildCSS(value) {\n    return {\n      'display': 'flex',\n      'flex-wrap': value,\n      'flex-direction': this.flowDirection\n    };\n  }\n\n  protected get flowDirection(): string {\n    let computeFlowDirection = () => this._getFlowDirection(this._elementRef.nativeElement);\n    return this._layoutWatcher ? this._layout : computeFlowDirection();\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer,\n  SimpleChanges,\n} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive({selector: `\n  [fxLayout],\n  [fxLayout.xs], [fxLayout.sm], [fxLayout.md], [fxLayout.lg], [fxLayout.xl],\n  [fxLayout.lt-sm], [fxLayout.lt-md], [fxLayout.lt-lg], [fxLayout.lt-xl],\n  [fxLayout.gt-xs], [fxLayout.gt-sm], [fxLayout.gt-md], [fxLayout.gt-lg]\n`})\nexport class LayoutDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Create Observable for nested/child 'flex' directives. This allows\n   * child flex directives to subscribe/listen for flexbox direction changes.\n   */\n  protected _announcer: BehaviorSubject<string>;\n\n  /**\n   * Publish observer to enabled nested, dependent directives to listen\n   * to parent 'layout' direction changes\n   */\n  public layout$: Observable<string>;\n\n  /* tslint:disable */\n  @Input('fxLayout')       set layout(val)     { this._cacheInput('layout', val); };\n  @Input('fxLayout.xs')    set layoutXs(val)   { this._cacheInput('layoutXs', val); };\n  @Input('fxLayout.sm')    set layoutSm(val)   { this._cacheInput('layoutSm', val); };\n  @Input('fxLayout.md')    set layoutMd(val)   { this._cacheInput('layoutMd', val); };\n  @Input('fxLayout.lg')    set layoutLg(val)   { this._cacheInput('layoutLg', val); };\n  @Input('fxLayout.xl')    set layoutXl(val)   { this._cacheInput('layoutXl', val); };\n\n  @Input('fxLayout.gt-xs') set layoutGtXs(val) { this._cacheInput('layoutGtXs', val); };\n  @Input('fxLayout.gt-sm') set layoutGtSm(val) { this._cacheInput('layoutGtSm', val); };\n  @Input('fxLayout.gt-md') set layoutGtMd(val) { this._cacheInput('layoutGtMd', val); };\n  @Input('fxLayout.gt-lg') set layoutGtLg(val) { this._cacheInput('layoutGtLg', val); };\n\n  @Input('fxLayout.lt-sm') set layoutLtSm(val) { this._cacheInput('layoutLtSm', val); };\n  @Input('fxLayout.lt-md') set layoutLtMd(val) { this._cacheInput('layoutLtMd', val); };\n  @Input('fxLayout.lt-lg') set layoutLtLg(val) { this._cacheInput('layoutLtLg', val); };\n  @Input('fxLayout.lt-xl') set layoutLtXl(val) { this._cacheInput('layoutLtXl', val); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor, elRef: ElementRef, renderer: Renderer) {\n    super(monitor, elRef, renderer);\n    this._announcer = new BehaviorSubject<string>('row');\n    this.layout$ = this._announcer.asObservable();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxLayout')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['layout'] != null || this._mqActivation) {\n      this._updateWithDirection();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('layout', 'row', (changes: MediaChange) => {\n      this._updateWithDirection(changes.value);\n    });\n    this._updateWithDirection();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Validate the direction value and then update the host's inline flexbox styles\n   */\n  protected _updateWithDirection(value?: string) {\n    value = value || this._queryInput('layout') || 'row';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Update styles and announce to subscribers the *new* direction\n    let css = buildLayoutCSS(value);\n\n    this._applyStyleToElement(css);\n    this._announcer.next(css['flex-direction']);\n  }\n\n\n\n\n\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef, OnDestroy, SimpleChanges, OnChanges,\n  SimpleChange, Renderer\n} from '@angular/core';\nimport {ɵgetDOM as getDom} from '@angular/platform-browser';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nimport {ResponsiveActivation, KeyOptions} from '../responsive/responsive-activation';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5}).\n */\nexport type StyleDefinition = string | { [property: string]: string | number };\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective implements OnDestroy, OnChanges {\n\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _renderer: Renderer) {\n    this._display = this._getDisplayStyle();\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access to host element's parent DOM node\n   */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseFxDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    this._mediaMonitor = null;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows use to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source?: HTMLElement): string {\n    let element: HTMLElement = source || this._elementRef.nativeElement;\n    let value = this._lookupStyle(element, 'display');\n\n    return value ? value.trim() :\n        ((element.nodeType === 1) ? 'block' : 'inline-block');\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlowDirection(target: any, addIfMissing = false): string {\n    let value = 'row';\n\n    if (target) {\n      value = this._lookupStyle(target, 'flex-direction') || 'row';\n\n      let hasInlineValue = getDom().getStyle(target, 'flex-direction');\n      if (!hasInlineValue && addIfMissing) {\n        this._applyStyleToElements(buildLayoutCSS(value), [target]);\n      }\n    }\n\n    return value.trim();\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   */\n  protected _lookupStyle(element: HTMLElement, styleName: string): any {\n    let value = '';\n    try {\n      if (element) {\n        let immediateValue = getDom().getStyle(element, styleName);\n        value = immediateValue || getDom().getComputedStyle(element).getPropertyValue(styleName);\n      }\n    } catch (e) {\n      // TODO: platform-server throws an exception for getComputedStyle\n    }\n    return value;\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values. Each\n   * value will be added as element style.\n   */\n  protected _applyMultiValueStyleToElement(styles: {}, element: any) {\n    Object.keys(styles).forEach(key => {\n      const values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n      for (let value of values) {\n        this._renderer.setElementStyle(element, key, value);\n      }\n    });\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 nativeElement?: any) {\n    let styles = {};\n    let element = nativeElement || this._elementRef.nativeElement;\n\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n\n    styles = applyCssPrefixes(style);\n\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[ ]) {\n    let styles = applyCssPrefixes(style);\n\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(\n          keyOptions,\n          this._mediaMonitor,\n          (change) => onMediaQueryChange(change)\n      );\n    }\n    return this._mqActivation;\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    const obj = this._elementRef.nativeElement.children;\n    const buffer = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  /** Original dom Elements CSS display style */\n  protected _display;\n\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs/Subscription';\nimport {map} from 'rxjs/operator/map';\n\nimport {MediaChange, MediaQuerySubscriber} from '../../media-query/media-change';\nimport {BreakPoint} from '../../media-query/breakpoints/break-point';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {extendObject} from '../../utils/object-extend';\n\nexport declare type SubscriptionList = Subscription[ ];\n\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nexport class ResponsiveActivation {\n  private _subscribers: SubscriptionList = [];\n  private _activatedInputKey: string;\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n    this._subscribers = this._configureChangeObservers();\n  }\n\n  /**\n   * Accessor to the DI'ed directive property\n   * Each directive instance has a reference to the MediaMonitor which is\n   * used HERE to subscribe to mediaQuery change notifications.\n   */\n  get mediaMonitor(): MediaMonitor {\n    return this._mediaMonitor;\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    let key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  public hasKeyValue(key) {\n    let value = this._options.inputKeys[key];\n    return typeof value !== 'undefined';\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach((link: Subscription) => {\n      link.unsubscribe();\n    });\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): SubscriptionList {\n    let subscriptions = [];\n\n    this._buildRegistryMap().forEach((bp: BreakPointX) => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        let buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n            map.call(this.mediaMonitor.observe(bp.alias), buildChanges)\n                .subscribe(change => {\n                  this._onMonitorEvents(change);\n                })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this.mediaMonitor.breakpoints\n        .map(bp => {\n          return <BreakPointX> extendObject({}, bp, {\n            baseKey: this._options.baseKey,             // e.g. layout, hide, self-align, flex-wrap\n            key: this._options.baseKey + bp.suffix  // e.g.  layoutGtSm, layoutMd, layoutGtLg\n          });\n        })\n        .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property == this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                     // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey == currentKey) ? null : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey) {\n    let items: BreakPoint[] = this.mediaMonitor.activeOverlaps;\n    let isMissingKey = (key) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      items.some(bp => {\n        let key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap] = validateValue(value);\n  return  buildCSS(direction, wrap);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap] = value.split(' ');\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n  return [direction, validateWrapValue(wrap)];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, _] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null) {\n  return {\n    'display': 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor';\nimport {MatchMedia} from './match-media';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\n/**\n * Ensure a single global service provider\n */\nexport function MEDIA_MONITOR_PROVIDER_FACTORY(parentMonitor: MediaMonitor,\n                                               breakpoints: BreakPointRegistry,\n                                               matchMedia: MatchMedia) {\n  return parentMonitor || new MediaMonitor(breakpoints, matchMedia);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const MEDIA_MONITOR_PROVIDER = {\n  provide : MediaMonitor,\n  deps : [\n    [ new Optional(), new SkipSelf(), MediaMonitor ],\n    BreakPointRegistry,\n    MatchMedia,\n  ],\n  useFactory : MEDIA_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {MatchMedia} from './match-media';\nimport {MediaMonitor} from './media-monitor';\nimport {OBSERVABLE_MEDIA_PROVIDER} from './observable-media-provider';\nimport {DEFAULT_BREAKPOINTS_PROVIDER} from './breakpoints/break-points-provider';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [\n    DEFAULT_BREAKPOINTS_PROVIDER,  // Supports developer overrides of list of known breakpoints\n    BreakPointRegistry,      // Registry of known/used BreakPoint(s)\n    MatchMedia,              // Low-level service to publish observables w/ window.matchMedia()\n    MediaMonitor,            // MediaQuery monitor service observes all known breakpoints\n    OBSERVABLE_MEDIA_PROVIDER  // easy subscription injectable `media$` matchMedia observable\n  ]\n})\nexport class MediaQueriesModule {\n}\n\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  InjectionToken,    // tslint:disable-line:no-unused-variable\n} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {DEFAULT_BREAKPOINTS} from './data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from './data/orientation-break-points';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {mergeByAlias, validateSuffixes} from '../../utils/breakpoint-tools';\n\n\n/**\n * Options to identify which breakpoint types to include as part of\n * a BreakPoint provider\n */\nexport interface BreakPointProviderOptions {\n  /**\n   * include pre-configured, internal default breakpoints.\n   * @default 'true'\n   */\n  defaults ?: boolean;\n  /**\n   * include pre-configured, internal orientations breakpoints.\n   * @default 'false'\n   */\n  orientations ?: boolean;\n}\n\n/**\n * Add new custom items to the default list or override existing default with custom overrides\n */\nexport function buildMergedBreakPoints(_custom?: BreakPoint[],\n                                       options?: BreakPointProviderOptions) {\n  options = extendObject({ }, {\n        defaults: true,       // exclude pre-configured, internal default breakpoints\n        orientation: false      // exclude pre-configured, internal orientations breakpoints\n  }, options || { });\n\n  return () => {\n    // Order so the defaults are loaded last; so ObservableMedia will report these last!\n    let defaults = options.orientations ? ORIENTATION_BREAKPOINTS.concat(DEFAULT_BREAKPOINTS) :\n        DEFAULT_BREAKPOINTS;\n\n    return options.defaults ? mergeByAlias(defaults, _custom || []) : mergeByAlias(_custom);\n  };\n}\n\n/**\n *  Ensure that only a single global BreakPoint list is instantiated...\n */\nexport function DEFAULT_BREAKPOINTS_PROVIDER_FACTORY() {\n  return validateSuffixes(DEFAULT_BREAKPOINTS);\n}\n/**\n * Default Provider that does not support external customization nor provide\n * the extra extended breakpoints:   \"handset\", \"tablet\", and \"web\"\n *\n *  NOTE: !! breakpoints are considered to have unique 'alias' properties,\n *        custom breakpoints matching existing breakpoints will override the properties\n *        of the existing (and not be added as an extra breakpoint entry).\n *        [xs, gt-xs, sm, gt-sm, md, gt-md, lg, gt-lg, xl]\n */\nexport const DEFAULT_BREAKPOINTS_PROVIDER = { // tslint:disable-line:variable-name\n  provide: BREAKPOINTS,\n  useFactory: DEFAULT_BREAKPOINTS_PROVIDER_FACTORY\n};\n/**\n * Use with FlexLayoutModule.CUSTOM_BREAKPOINTS_PROVIDER_FACTORY!\n */\nexport function CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(_custom?: BreakPoint[],\n                                                    options?: BreakPointProviderOptions) {\n  return {\n    provide: BREAKPOINTS,\n    useFactory: buildMergedBreakPoints(_custom, options)\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n import {BreakPoint} from '../media-query/breakpoints/break-point';\nimport {extendObject} from './object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix || bp.suffix === '') {\n      bp.suffix = camelCase(bp.alias);          // create Suffix value based on alias\n      bp.overlapping = bp.overlapping || false; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const merged = defaults.map((bp) => extendObject({}, bp));\n  const findByAlias = (alias) => merged.reduce((result, bp) => {\n    return result || (( bp.alias === alias) ? bp : null);\n  }, null);\n\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    let target = findByAlias(bp.alias);\n    if (target) {\n      extendObject(target, bp);\n    } else {\n      merged.push(bp);\n    }\n  });\n\n  return validateSuffixes(merged);\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientations: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientations: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientations: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientations: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientations: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientations: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)'\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)'\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)'\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)'\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)'\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)'\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)'\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)'\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)'\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1920px)'\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)'\n  }\n];\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Optional,\n  SkipSelf\n} from '@angular/core';\n\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {MatchMedia} from './match-media';\nimport {ObservableMedia, MediaService} from './observable-media';\n\n/**\n * Ensure a single global ObservableMedia service provider\n */\nexport function OBSERVABLE_MEDIA_PROVIDER_FACTORY(parentService: ObservableMedia,\n                                                  matchMedia: MatchMedia,\n                                                  breakpoints: BreakPointRegistry) {\n  return parentService || new MediaService(breakpoints, matchMedia);\n}\n/**\n *  Provider to return global service for observable service for all MediaQuery activations\n */\nexport const OBSERVABLE_MEDIA_PROVIDER = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  deps: [\n    [ new Optional(), new SkipSelf(), ObservableMedia ],\n    MatchMedia,\n    BreakPointRegistry\n  ],\n  useFactory: OBSERVABLE_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\nimport {Observable, Subscribable} from 'rxjs/Observable';\n\nimport {map} from 'rxjs/operator/map';\nimport {filter} from 'rxjs/operator/filter';\n\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {MediaChange} from './media-change';\nimport {MatchMedia} from './match-media';\nimport {mergeAlias} from './../utils/add-alias';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import 'rxjs/add/operator/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .filter((change:MediaChange) => true)   // silly noop filter\n *        .subscribe(onChange);\n *    }\n *  }\n */\n@Injectable()\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  public filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias): boolean {\n    let query = this._toMediaQuery(alias);\n    return this.mediaWatcher.isActive(query);\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(next?: (value: MediaChange) => void,\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    return this.observable$.subscribe(next, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    let queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const self = this;\n    const activationsOnly = (change: MediaChange) => {\n      return change.matches === true;\n    };\n    const addAliasInformation = (change: MediaChange) => {\n      return mergeAlias(change, this._findByQuery(change.mediaQuery));\n    };\n    const excludeOverlaps = (change: MediaChange) => {\n      let bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(self.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return filter.call(\n        map.call(\n            filter.call(\n                this.mediaWatcher.observe(),\n                activationsOnly\n            ),\n            addAliasInformation),\n        excludeOverlaps);\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query) {\n    let bp: BreakPoint = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private observable$: Observable<MediaChange>;\n}\n\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {BreakPoint} from './breakpoints/break-point';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\nimport {MatchMedia} from './match-media';\nimport {MediaChange} from './media-change';\n\nimport {mergeAlias} from '../utils/add-alias';\n\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operator/filter';\nimport {map} from 'rxjs/operator/map';\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n */\n@Injectable()\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    let items: BreakPoint[] = this._breakpoints.overlappings.reverse();\n    return items.filter((bp: BreakPoint) => {\n      return this._matchMedia.isActive(bp.mediaQuery);\n    });\n  }\n\n  get active(): BreakPoint {\n    let found = null, items = this.breakpoints.reverse();\n    items.forEach(bp => {\n      if (bp.alias !== '') {\n        if (!found && this._matchMedia.isActive(bp.mediaQuery)) {\n          found = bp;\n        }\n      }\n    });\n\n    let first = this.breakpoints[0];\n    return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias?: string): Observable<MediaChange> {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    let hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    let media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return filter.call(map.call(media$, change => mergeAlias(change, bp)), hasAlias);\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    let queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from '../media-query/media-change';\nimport {BreakPoint} from '../media-query/breakpoints/break-point';\nimport {extendObject} from './object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint) {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overriden from custom, application-specific ranges\n *\n */\n@Injectable()\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[ ]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[ ] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint {\n    return this._registry.find(bp => bp.alias == alias);\n  }\n\n  findByQuery(query: string): BreakPoint {\n    return this._registry.find(bp => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => it.suffix);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// @TODO - remove after updating to TS v2.4\n// tslint:disable:no-unused-variable\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n    new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {ɵgetDOM as getDom, DOCUMENT} from '@angular/platform-browser';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operator/filter';\n\nimport {MediaChange} from './media-change';\n\n/**\n * EventHandler callback with the mediaQuery [range] activates or deactivates\n */\nexport interface MediaQueryListListener {\n  // Function with Window's MediaQueryList argument\n  (mql: MediaQueryList): void;\n}\n\n/**\n * EventDispatcher for a specific mediaQuery [range]\n */\nexport interface MediaQueryList {\n  readonly matches: boolean;\n  readonly media: string;\n\n  addListener(listener: MediaQueryListListener): void;\n\n  removeListener(listener: MediaQueryListListener): void;\n}\n\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable()\nexport class MatchMedia {\n  protected _registry: Map<string, MediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone, @Inject(DOCUMENT) protected _document: any) {\n    this._registry = new Map<string, MediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    if (this._registry.has(mediaQuery)) {\n      let mql = this._registry.get(mediaQuery);\n      return mql.matches;\n    }\n    return false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    this.registerQuery(mediaQuery);\n\n    return filter.call(this._observable$, (change: MediaChange) => {\n      return mediaQuery ? (change.mediaQuery === mediaQuery) : true;\n    });\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    let list = normalizeQuery(mediaQuery);\n\n    if (list.length > 0) {\n      prepareQueryCSS(list, this._document);\n\n      list.forEach(query => {\n        let mql = this._registry.get(query);\n        let onMQLEvent = (e: MediaQueryList) => {\n          this._zone.run(() => {\n            let change = new MediaChange(e.matches, query);\n            this._source.next(change);\n          });\n        };\n\n        if (!mql) {\n          mql = this._buildMQL(query);\n          mql.addListener(onMQLEvent);\n          this._registry.set(query, mql);\n        }\n\n        if (mql.matches) {\n          onMQLEvent(mql);  // Announce activate range for initial subscribers\n        }\n      });\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    let canListen = isBrowser() && !!(<any>window).matchMedia('all').addListener;\n\n    return canListen ? (<any>window).matchMedia(query) : <MediaQueryList>{\n      matches: query === 'all' || query === '',\n      media: query,\n      addListener: () => {\n      },\n      removeListener: () => {\n      }\n    };\n  }\n}\n\n/**\n * Determine if SSR or Browser rendering.\n */\nexport function isBrowser() {\n  return getDom().supportsDOMEvents();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param query string The mediaQuery used to create a faux CSS selector\n *\n */\nfunction prepareQueryCSS(mediaQueries: string[], _document: any) {\n  let list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    let query = list.join(', ');\n\n    try {\n      let styleEl = getDom().createElement('style');\n\n      getDom().setAttribute(styleEl, 'type', 'text/css');\n      if (!styleEl['styleSheet']) {\n        let cssText = `/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}`;\n        getDom().appendChild(styleEl, getDom().createTextNode(cssText));\n      }\n\n      getDom().appendChild(_document.head, styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n/**\n * Always convert to unique list of queries; for iteration in ::registerQuery()\n */\nfunction normalizeQuery(mediaQuery: string | string[]): string[] {\n  return (typeof mediaQuery === 'undefined') ? [] :\n      (typeof mediaQuery === 'string') ? [mediaQuery] : unique(mediaQuery as string[]);\n}\n\n/**\n * Filter duplicate mediaQueries in the list\n */\nfunction unique(list: string[]): string[] {\n  let seen = {};\n  return list.filter(item => {\n    return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n  });\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string;\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}"],"names":["tslib_1.__extends","Input","Optional","Self","Renderer","ElementRef","Directive","map","SkipSelf","BehaviorSubject","ɵgetDOM","SimpleChange","NgModule","Injectable","filter","Inject","getDom","DOCUMENT","NgZone"],"mappings":"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"}