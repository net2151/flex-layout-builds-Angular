{"version":3,"sources":["../../../../../src/lib/flexbox/api/base.ts"],"names":[],"mappings":"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","file":"base.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef, OnDestroy, SimpleChanges, OnChanges,\n  SimpleChange, Renderer\n} from '@angular/core';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n\nimport {ResponsiveActivation, KeyOptions} from '../responsive/responsive-activation';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\n\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5}).\n */\nexport type StyleDefinition = string | { [property: string]: string | number };\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective implements OnDestroy, OnChanges {\n\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _renderer: Renderer) {\n    this._display = this._getDisplayStyle();\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error('BaseFxDirective::ngOnChanges should be overridden in subclass');\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    this._mediaMonitor = null;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows use to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source?: HTMLElement): string {\n    let element: HTMLElement = source || this._elementRef.nativeElement;\n    let value = (element.style as any)['display'] || getComputedStyle(element)['display'];\n    return value.trim();\n  }\n\n  protected _getFlowDirection(target: any, addIfMissing = false): string {\n    let value = '';\n    if (target) {\n      let directionKeys = Object.keys(applyCssPrefixes({'flex-direction': ''}));\n      let findDirection = (styles) => directionKeys.reduce((direction, key) => {\n        return direction || styles[key];\n      }, null);\n\n      let immediateValue = findDirection(target.style);\n      value = immediateValue || findDirection(getComputedStyle(target as Element));\n      if (!immediateValue && addIfMissing) {\n        value = value || 'row';\n        this._applyStyleToElements(buildLayoutCSS(value), [target]);\n      }\n    }\n\n    return value ? value.trim() : 'row';\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values. Each\n   * value will be added as element style.\n   */\n  protected _applyMultiValueStyleToElement(styles: {}, element: any) {\n    Object.keys(styles).forEach(key => {\n      const values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n      for (let value of values) {\n        this._renderer.setElementStyle(element, key, value);\n      }\n    });\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 nativeElement?: any) {\n    let styles = {};\n    let element = nativeElement || this._elementRef.nativeElement;\n\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n\n    styles = applyCssPrefixes(style);\n\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[ ]) {\n    let styles = applyCssPrefixes(style);\n\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(\n          keyOptions,\n          this._mediaMonitor,\n          (change) => onMediaQueryChange(change)\n      );\n    }\n    return this._mqActivation;\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    var obj = this._elementRef.nativeElement.childNodes;\n    var buffer = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for ( var i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  /** Original dom Elements CSS display style */\n  protected _display;\n\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n}\n"]}