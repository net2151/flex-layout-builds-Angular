{"version":3,"file":"flex-offset.js","sourceRoot":"","sources":["flex-offset.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer,\n  SimpleChanges,\n} from '@angular/core';\n\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive({selector: `\n  [fxFlexOffset],\n  [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md], [fxFlexOffset.lg], [fxFlexOffset.xl],\n  [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md], [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl],\n  [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm], [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`})\nexport class FlexOffsetDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOffset')       set offset(val)     { this._cacheInput('offset', val); }\n  @Input('fxFlexOffset.xs')    set offsetXs(val)   { this._cacheInput('offsetXs', val); }\n  @Input('fxFlexOffset.sm')    set offsetSm(val)   { this._cacheInput('offsetSm', val); };\n  @Input('fxFlexOffset.md')    set offsetMd(val)   { this._cacheInput('offsetMd', val); };\n  @Input('fxFlexOffset.lg')    set offsetLg(val)   { this._cacheInput('offsetLg', val); };\n  @Input('fxFlexOffset.xl')    set offsetXl(val)   { this._cacheInput('offsetXl', val); };\n\n  @Input('fxFlexOffset.lt-sm') set offsetLtSm(val) { this._cacheInput('offsetLtSm', val); };\n  @Input('fxFlexOffset.lt-md') set offsetLtMd(val) { this._cacheInput('offsetLtMd', val); };\n  @Input('fxFlexOffset.lt-lg') set offsetLtLg(val) { this._cacheInput('offsetLtLg', val); };\n  @Input('fxFlexOffset.lt-xl') set offsetLtXl(val) { this._cacheInput('offsetLtXl', val); };\n\n  @Input('fxFlexOffset.gt-xs') set offsetGtXs(val) { this._cacheInput('offsetGtXs', val); };\n  @Input('fxFlexOffset.gt-sm') set offsetGtSm(val) { this._cacheInput('offsetGtSm', val); };\n  @Input('fxFlexOffset.gt-md') set offsetGtMd(val) { this._cacheInput('offsetGtMd', val); };\n  @Input('fxFlexOffset.gt-lg') set offsetGtLg(val) { this._cacheInput('offsetGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,  elRef: ElementRef, renderer: Renderer) {\n    super(monitor, elRef, renderer);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['offset'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('offset', 0 , (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput(\"offset\") || 0;\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(offset) {\n    let isPercent = String(offset).indexOf('%') > -1;\n    let isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(offset)) {\n      offset = offset + '%';\n    }\n\n    return {'margin-left': `${offset}`};\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}