{"version":3,"file":"base-adapter.js","sourceRoot":"","sources":["base-adapter.ts"],"names":[],"mappings":";;;;;OAKO,EAAC,eAAe,EAAC,MAAM,QAAQ;AAItC;IAA4C,0CAAe;IAA3D;QAA4C,8BAAe;IAyE3D,CAAC;IAxEC,sBAAI,4CAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IAED;;OAEG;IACH,2CAAU,GAAV,UAAW,GAAY,EAAE,MAAY;QACnC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAClD,CAAC;IACH,CAAC;IAED,+CAAc,GAAd,UAAe,GAAY,EAAE,MAAY;QACvC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,iDAAgB,GAAhB,UAAiB,GAAY,EAAE,MAAkB;QAC/C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;IAED;;OAEG;IACH,kDAAiB,GAAjB,UAAkB,GAAY,EAAE,MAAiC;QAC/D,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACnB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACrB,CAAC;QACH,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1C,CAAC;IAED;;OAEG;IACH,kDAAiB,GAAjB,UAAkB,GAAY,EAAE,MAAe;QAC7C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,2DAA0B,GAA1B,UAA2B,GAAW,EACX,YAAiB,EACjB,kBAAwC;QACjE,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,GAAG,EAAE,YAAY,EAAE,kBAAkB,CAAC,CAAC;IACjF,CAAC;IAED;;OAEG;IACH,2CAAU,GAAV,UAAW,GAAG;QACZ,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IAKD,sBAAI,gDAAY;QAHhB;;WAEG;aACH;YACE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;;;OAAA;IACH,6BAAC;AAAD,CAAC,AAzED,CAA4C,eAAe,GAyE1D","sourcesContent":["/**\n * Adapted BaseFxDirective abtract class version so it can be used via composition.\n *\n * @see BaseFxDirective\n */\nimport {BaseFxDirective} from './base';\nimport {ResponsiveActivation} from './../responsive/responsive-activation';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\n\nexport class BaseFxDirectiveAdapter extends BaseFxDirective {\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any) {\n    if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error('Invalid class value provided');\n    }\n  }\n\n  _cacheInputRaw(key?: string, source?: any) {\n    this._inputMap[key] = source;\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  _cacheInputArray(key?: string, source?: boolean[]) {\n    this._inputMap[key] = source.join(' ');\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  _cacheInputObject(key?: string, source?: {[key: string]: boolean}) {\n    let classes = [];\n    for (let prop in source) {\n      if (!!source[prop]) {\n        classes.push(prop);\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  _cacheInputString(key?: string, source?: string) {\n    this._inputMap[key] = source;\n  }\n\n  /**\n   * @see BaseFxDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  /**\n   * @see BaseFxDirective._queryInput\n   */\n  queryInput(key) {\n    return this._queryInput(key);\n  }\n\n  /**\n   * @see BaseFxDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}