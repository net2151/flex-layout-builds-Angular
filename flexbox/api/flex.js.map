{"version":3,"file":"flex.js","sourceRoot":"","sources":["flex.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {extendObject} from '../../utils/object-extend';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {LayoutDirective} from './layout';\nimport {LayoutWrapDirective} from './layout-wrap';\nimport {validateBasis} from '../../utils/basis-validator';\n\n\n/** Built-in aliases for different flex-basis values. */\nexport type FlexBasisAlias = 'grow' | 'initial' | 'auto' | 'none' | 'nogrow' | 'noshrink';\n\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive({selector: `\n  [fxFlex], \n  [fxFlex.xs], [fxFlex.sm], [fxFlex.md], [fxFlex.lg], [fxFlex.xl],\n  [fxFlex.gt-xs], [fxFlex.gt-sm], [fxFlex.gt-md], [fxFlex.gt-lg]\n`\n})\nexport class FlexDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /** The flex-direction of this element's flex container. Defaults to 'row'. */\n  protected _layout = 'row';\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShrink')     set shrink(val)    { this._cacheInput(\"shrink\", val); };\n  @Input('fxGrow')       set grow(val)      { this._cacheInput(\"grow\", val); };\n\n  @Input('fxFlex')       set flex(val)      { this._cacheInput(\"flex\", val); };\n  @Input('fxFlex.xs')    set flexXs(val)    { this._cacheInput('flexXs', val); };\n  @Input('fxFlex.sm')    set flexSm(val)    { this._cacheInput('flexSm', val); };\n  @Input('fxFlex.md')    set flexMd(val)    { this._cacheInput('flexMd', val); };\n  @Input('fxFlex.lg')    set flexLg(val)    { this._cacheInput('flexLg', val); };\n  @Input('fxFlex.xl')    set flexXl(val)    { this._cacheInput('flexXl', val); };\n\n  @Input('fxFlex.gt-xs') set flexGtXs(val)  { this._cacheInput('flexGtXs', val); };\n  @Input('fxFlex.gt-sm') set flexGtSm(val)  { this._cacheInput('flexGtSm', val); };\n  @Input('fxFlex.gt-md') set flexGtMd(val)  { this._cacheInput('flexGtMd', val); };\n  @Input('fxFlex.gt-lg') set flexGtLg(val)  { this._cacheInput('flexGtLg', val); };\n\n  /* tslint:enable */\n  // Explicitly @SkipSelf on LayoutDirective and LayoutWrapDirective because we want the\n  // parent flex container for this flex item.\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              @Optional() @SkipSelf() protected _wrap: LayoutWrapDirective) {\n\n    super(monitor, elRef, renderer);\n\n    this._cacheInput(\"flex\", \"\");\n    this._cacheInput(\"shrink\", 1);\n    this._cacheInput(\"grow\", 1);\n\n    if (_container) {\n      // If this flex item is inside of a flex container marked with\n      // Subscribe to layout immediate parent direction changes\n      this._layoutWatcher = _container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['flex'] != null || this._mqActivation) {\n      this._onLayoutChange();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('flex', '', (changes: MediaChange) => {\n      this._updateStyle(changes.value);\n    });\n    this._onLayoutChange();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || \"row\";\n    this._updateStyle();\n  }\n\n  protected _updateStyle(value?: string|number) {\n    let flexBasis = value || this._queryInput(\"flex\") || '';\n    if (this._mqActivation) {\n      flexBasis = this._mqActivation.activatedInput;\n    }\n\n    let basis = String(flexBasis).replace(\";\", \"\");\n    let parts = validateBasis(basis, this._queryInput(\"grow\"), this._queryInput(\"shrink\"));\n    this._applyStyleToElement(this._validateValue.apply(this, parts));\n  }\n\n  /**\n   * Validate the value to be one of the acceptable value options\n   * Use default fallback of \"row\"\n   */\n  protected _validateValue(grow: number|string,\n                         shrink: number|string,\n                         basis: string|number|FlexBasisAlias) {\n    let css, isValue;\n    let direction = (this._layout === 'column') || (this._layout == 'column-reverse') ?\n        'column' :\n        'row';\n\n    if ( grow == \"0\" ) {\n      grow = 0;\n    }\n\n    if ( shrink == \"0\" ) {\n      shrink = 0;\n    }\n\n    // flex-basis allows you to specify the initial/starting main-axis size of the element,\n    // before anything else is computed. It can either be a percentage or an absolute value.\n    // It is, however, not the breaking point for flex-grow/shrink properties\n    //\n    // flex-grow can be seen as this:\n    //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n    //   1: (Default value). Stretch; will be the same size to all other flex items on\n    //       the same row since they have a default value of 1.\n    //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n    //      with 'flex-grow: 1' on the same row.\n\n    let hasCalc = String(basis).indexOf('calc') > -1;\n    let clearStyles = {     // Use `null` to clear existing styles.\n      'max-width': null,\n      'max-height': null,\n      'min-width': null,\n      'min-height': null\n    };\n\n    switch (basis || '') {\n      case '':\n        css = extendObject(clearStyles, {'flex': '1 1 0.000000001px'});\n        break;\n      case 'initial':   // default\n      case 'nogrow':\n        grow = 0;\n        css = extendObject(clearStyles, {'flex': '0 1 auto'});\n        break;\n      case 'grow':\n        css = extendObject(clearStyles, {'flex': '1 1 100%'});\n        break;\n      case 'noshrink':\n        shrink = 0;\n        css = extendObject(clearStyles, {'flex': '1 0 auto'});\n        break;\n      case 'auto':\n        css = extendObject(clearStyles, {'flex': `${grow} ${shrink} auto`});\n        break;\n      case 'none':\n        grow = 0;\n        shrink = 0;\n        css = extendObject(clearStyles, {'flex': '0 0 auto'});\n        break;\n      default:\n        let isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n\n        isValue = hasCalc ||\n            String(basis).indexOf('px') > -1 ||\n            String(basis).indexOf('em') > -1 ||\n            String(basis).indexOf('vw') > -1 ||\n            String(basis).indexOf('vh') > -1;\n\n        // Defaults to percentage sizing unless `px` is explicitly set\n        if (!isValue && !isPercent && !isNaN(basis as any)) {\n          basis = basis + '%';\n        }\n\n        if (basis === '0px') {\n          basis = '0%';\n        }\n\n        // Set max-width = basis if using layout-wrap\n        // tslint:disable-next-line:max-line-length\n        // @see http://bit.ly/2m5pZVI\n\n        css = extendObject(clearStyles, { // fix issue #5345\n          'flex': `${grow} ${shrink} ${(isValue || this._wrap) ? basis : '100%'}`,\n        });\n        break;\n    }\n\n    if (basis !== 'auto') {\n      let max = (direction === 'row') ? 'max-width' : 'max-height';\n      let min = (direction === 'row') ? 'min-width' : 'min-height';\n      let isPx = String(basis).indexOf('px') > -1 || hasCalc;\n\n      // make box inflexible when shrink and grow are both zero\n      //   * do not set a min when the grow is zero\n      //   * do not set a max when the shrink is zero\n      let isFixed = !grow && !shrink;\n      css[min] = (basis == '0%') ? 0 : isFixed || (isPx && grow) ? basis : null;\n      css[max] = (basis == '0%') ? 0 : isFixed || (!hasCalc && shrink) ? basis : null;\n    }\n\n    return extendObject(css, {'box-sizing': 'border-box'});\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}