{"version":3,"file":"layout.js","sourceRoot":"","sources":["layout.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer,\n  SimpleChanges,\n} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive({selector: `\n  [fxLayout],\n  [fxLayout.xs],\n  [fxLayout.gt-xs],\n  [fxLayout.sm],\n  [fxLayout.gt-sm],\n  [fxLayout.md],\n  [fxLayout.gt-md],\n  [fxLayout.lg],\n  [fxLayout.gt-lg],\n  [fxLayout.xl]\n`})\nexport class LayoutDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Create Observable for nested/child 'flex' directives. This allows\n   * child flex directives to subscribe/listen for flexbox direction changes.\n   */\n  protected _announcer: BehaviorSubject<string>;\n\n  /**\n   * Publish observer to enabled nested, dependent directives to listen\n   * to parent \"layout\" direction changes\n   */\n  public layout$: Observable<string>;\n\n  @Input('fxLayout')       set layout(val)     { this._cacheInput(\"layout\", val); };\n  @Input('fxLayout.xs')    set layoutXs(val)   { this._cacheInput('layoutXs', val); };\n  @Input('fxLayout.gt-xs') set layoutGtXs(val) { this._cacheInput('layoutGtXs', val); };\n  @Input('fxLayout.sm')    set layoutSm(val)   { this._cacheInput('layoutSm', val); };\n  @Input('fxLayout.gt-sm') set layoutGtSm(val) { this._cacheInput('layoutGtSm', val); };\n  @Input('fxLayout.md')    set layoutMd(val)   { this._cacheInput('layoutMd', val); };\n  @Input('fxLayout.gt-md') set layoutGtMd(val) { this._cacheInput('layoutGtMd', val); };\n  @Input('fxLayout.lg')    set layoutLg(val)   { this._cacheInput('layoutLg', val); };\n  @Input('fxLayout.gt-lg') set layoutGtLg(val) { this._cacheInput('layoutGtLg', val); };\n  @Input('fxLayout.xl')    set layoutXl(val)   { this._cacheInput('layoutXl', val); };\n\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor, elRef: ElementRef, renderer: Renderer) {\n    super(monitor, elRef, renderer);\n    this._announcer = new BehaviorSubject<string>(\"row\");\n    this.layout$ = this._announcer.asObservable();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxLayout')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['layout'] != null || this._mqActivation) {\n      this._updateWithDirection();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('layout', 'row', (changes: MediaChange) => {\n      this._updateWithDirection(changes.value);\n    });\n    this._updateWithDirection();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Validate the direction value and then update the host's inline flexbox styles\n   */\n  protected _updateWithDirection(direction?: string) {\n    direction = direction || this._queryInput(\"layout\") || 'row';\n    if (this._mqActivation) {\n      direction = this._mqActivation.activatedInput;\n    }\n    direction = this._validateValue(direction);\n\n    // Update styles and announce to subscribers the *new* direction\n    this._applyStyleToElement(this._buildCSS(direction));\n    this._announcer.next(direction);\n  }\n\n\n  /**\n   * Build the CSS that should be assigned to the element instance\n   * BUG:\n   *\n   *   1) min-height on a column flex container wonâ€™t apply to its flex item children in IE 10-11.\n   *      Use height instead if possible; height : <xxx>vh;\n   *\n   * @todo - update all child containers to have \"box-sizing: border-box\"\n   *         This way any padding or border specified on the child elements are\n   *         laid out and drawn inside that element's specified width and height.\n   *\n   */\n  protected _buildCSS(value) {\n    return {'display': 'flex', 'box-sizing': 'border-box', 'flex-direction': value};\n  }\n\n  /**\n   * Validate the value to be one of the acceptable value options\n   * Use default fallback of \"row\"\n   */\n  protected _validateValue(value) {\n    value = value ? value.toLowerCase() : '';\n    return LAYOUT_VALUES.find(x => x === value) ? value : LAYOUT_VALUES[0];  // \"row\"\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}