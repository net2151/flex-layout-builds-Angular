import { ElementRef, DoCheck, OnDestroy, Renderer, IterableDiffers, KeyValueDiffers, SimpleChanges, OnChanges } from '@angular/core';
import { NgClass } from '@angular/common';
import { BaseFxDirectiveAdapter } from './base-adapter';
import { MediaMonitor } from '../../media-query/media-monitor';
export declare type NgClassType = string | string[] | Set<string> | {
    [klass: string]: any;
};
export declare const _ClassDirectiveBaseClass: typeof NgClass;
export declare class ClassDirective extends _ClassDirectiveBaseClass implements DoCheck, OnChanges, OnDestroy {
    protected monitor: MediaMonitor;
    ngClassBase: NgClassType;
    ngClassXs: NgClassType;
    ngClassSm: NgClassType;
    ngClassMd: NgClassType;
    ngClassLg: NgClassType;
    ngClassXl: NgClassType;
    ngClassLtSm: NgClassType;
    ngClassLtMd: NgClassType;
    ngClassLtLg: NgClassType;
    ngClassLtXl: NgClassType;
    ngClassGtXs: NgClassType;
    ngClassGtSm: NgClassType;
    ngClassGtMd: NgClassType;
    ngClassGtLg: NgClassType;
    classBase: string;
    classXs: NgClassType;
    classSm: NgClassType;
    classMd: NgClassType;
    classLg: NgClassType;
    classXl: NgClassType;
    classLtSm: NgClassType;
    classLtMd: NgClassType;
    classLtLg: NgClassType;
    classLtXl: NgClassType;
    classGtXs: NgClassType;
    classGtSm: NgClassType;
    classGtMd: NgClassType;
    classGtLg: NgClassType;
    readonly initialClasses: string;
    constructor(monitor: MediaMonitor, _iterableDiffers: IterableDiffers, _keyValueDiffers: KeyValueDiffers, _ngEl: ElementRef, _renderer: Renderer);
    ngOnChanges(changes: SimpleChanges): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    protected _configureMQListener(): void;
    protected _updateKlass(value?: NgClassType): void;
    protected _updateNgClass(value?: NgClassType): void;
    protected _classAdapter: BaseFxDirectiveAdapter;
    protected _ngClassAdapter: BaseFxDirectiveAdapter;
}
